%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: cool2-submitted.dvi
%%CreationDate: Sun Oct 31 12:51:20 2004
%%Pages: 22
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Roman Courier Times-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: DVIPS.EXE cool2-submitted
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.31:1251
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (cool2-submitted.dvi)
@start /Fa 206[25 49[{TeXBase1Encoding ReEncodeFont}1
49.8132 /Times-Roman rf /Fb 206[29 49[{TeXBase1Encoding ReEncodeFont}1
58.1154 /Times-Roman rf /Fc 138[50 50 50 50 1[50 50 2[50
2[50 3[50 1[50 50 50 97[{TeXBase1Encoding ReEncodeFont}12
83.022 /Courier rf /Fd 137[35 35 35 35 35 1[35 3[35 2[35
3[35 1[35 35 35 97[{TeXBase1Encoding ReEncodeFont}12
58.1154 /Courier rf
%DVIPSBitmapFont: Fe cmtt8 6 5
/Fe 5 111 df<EA0FF848B4FC48138014C0383E0FE0EA1C03EA000113FF1207121FEA7F
F1EA7E0112F812F0A2EAF803EAFC0F387FFFFE7EEA1FFC3807F07E17157E941A>97
D<3801FF80000713C04813E05AEA3F03387E01C00078C7FC12F85AA56C13F0127CEA7E01
383F83E0EA1FFF6C13C06C13803801FE0014157D941A>99 D<EA01FCEA07FF4813804813
C0383F07E0EA7C01007813F0EAF800B5FCA400F8C7FC14F0127CEA7E01383FC3E0EA1FFF
6C13C06C13803800FE0014157E941A>101 D<387CF87C38FFFDFE13FF6C7F381F1F8F38
1E0F07A2EA1C0EAA397F1F8FC039FFBFDFE0A2397F1F8FC01B1581941A>109
D<387F1FC038FF7FE0497E6C7FEA0FE0EB8078A21300AA387FE1FFD8FFF31380A2D87FE1
1300191580941A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi5 5 3
/Ff 3 111 df<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203
EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105
D<EA1FE0A212035BA4485AA4380F00F8EB01FCEB070CEB0C1C381E383CEB607CEA1FC0EB
E038383FF800EA3C7C131E14040078130CA21418130F00F013F0386003E0161D7C9C1F>
107 D<380F03F0383F87FC3833DC1EEA63F8EAC3F013E0EA03C0A248485AA3EC7820D80F
00136014F015C014F1001EEB7F80000CEB3E001B127D9125>110
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr5 5 3
/Fg 3 52 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I<EA01FC380FFF80381E07C0383001E0007C13F01300127EEA7C010038
13E0EA0003EB07C0EB1F803803FE005B38000780EB03C0EB01E0EB00F014F81230127812
FCA214F0EA7801387003E0383C07C0380FFF00EA03FC151D7D9B1C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy7 7 4
/Fh 4 104 df<176017F01770A217781738173C171C171E83717E717E717EEF00F8BAFC
19801900CB12F8EF01E04D5A4D5A4DC7FC171E171C173C173817781770A217F01760391F
7C9D42>33 D<124012E0A912F012F812F012E0A9124005177C9900>55
D<147EEB03FEEB0FE0EB1F00133E5BB35BA2485AEA07E0EAFF8000FCC7FCB47EEA07E0EA
01F06C7EA2137CB37F7FEB0FE0EB03FEEB007E173B7BAB22>102
D<12FCB47EEA0FE0EA01F06C7E137CB37FA27FEB0FC0EB03FEEB007EEB03FEEB0FC0EB1F
00133EA25BB35B485AEA0FE0EAFF8000FCC7FC173B7BAB22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx9 9 28
/Fi 28 122 df<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587
021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A13
1FA249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249
157FB500F0013FB512F0A43C347DB343>65 D<DBFFE01338021F01FE137891B6EA80F801
0315E1010F9038E00FF7903A1FFE0001FFD97FF8EB007FD9FFE0143F4849141F4849140F
4890C81207485A1703485A1701123F5B007F1600A349160012FFAB127F7F1878A2123F7F
001F17F818F06C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC0F80D97FF8EC3F00D91FFE
14FE903A0FFFE007FC010390B512F0010015C0021F49C7FC020013F035357BB340>67
D<B712FCEEFFC017F817FEC69039E0003FFF040313C004007F717EEF1FF8717E84170784
8319808319C0A419E0AB19C0A419805FA219004D5A170F604D5A4D5AEFFFE004035B041F
5BB848C7FC17F817C004FCC8FC3B337DB244>I<B812FEA4C69038E0000FEE01FF828383
83A283A3DB01E013801707A4030390C7FCA21507151F91B5FCA4ECE01F1507150318F015
01A2EF01E0A392C7FCA21703A2EF07C0A2170F171F173F17FF1607B91280A434337DB23A
>I<B6D8E01FB512FCA4C601E0C7381FFC00B291B7FCA402E0C7121FB3A3B6D8E01FB512
FCA43E337DB245>72 D<B712F8EEFF8017E017F8C69039E0007FFCEE0FFE707E701380A2
7013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91B612F017C04CC7FC02E0C9FCB3
B612E0A433337DB23C>80 D<B712E016FEEEFFC017F0C6D9E00013FCEE1FFEEE07FF707F
A2707FA284A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612C094C8FC83DAE0037F03007F
EE3FF083707EA2707EA583A4193CA2188082F0C07CB6D8E003147870EBE1F070EBFFE005
3F13C0CA000313803E347DB242>82 D<EB7FFE0003B512E04814F8390FF00FFC391FF803
FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F13
00EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EB
FC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FD
B512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0A917
C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F138090
26800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA
0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C
130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>
I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F4848
131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C
497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803FF80013F
13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F0
12FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0F
C03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE0903803FFF801
0F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500A7B512FE
A4D803FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF9F48B612
7F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C
3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E0
6C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC
6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>I<
EA01FC12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007FCEBFFC0
4A6C7E1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E487EA66C5A
6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<EA01FC12FFA4
120F1207B3B3A6B512E0A413347DB318>108 D<2703F803FEEB03FE00FF903B1FFFC01F
FFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00FF8260FFBC0EBFBC06CB4486C
B4486C7E02001400495CA3495CB2B500E0B500E0B512E0A443217CA04A>I<3901F803FF
00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C7E1400A25BA25B
B2B539E07FFFF0A42C217DA031>I<903803FF80011F13F090B512FE48EB01FF3A07FC00
7FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF15FEA8007F15FC
A26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE01
3F13F80103138027217EA02C>I<3901FC07FC00FF90387FFF8001FDB512E09039FFF01F
F89138C007FC000F90380003FE6C4880496D1380A26F13C0A3EE7FE0A9EEFFC0A34B1380
A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9FC7F1380DA0FF8C7FC91C9FC
ABB512E0A42B307EA031>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE38
0FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>114
D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C
13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C14E0
6C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133CA5137C
A313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07801203
3901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F140700
071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE032C21
7DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007
017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF80103
5B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B539C03FFF80A400039039
000FC0006C01805B6C4AC7FC90387FC03E6D6C5A6E5A90381FF9F0EB0FFF6D5B6D5B6D5B
7F816E7E4A7E497FEB03EF903807C7FC90380FC3FE90381F83FFD93F017FD97E007F496D
7E496D7E4848131FD8FFFE90387FFFC0A42A217EA02F>120 D<B539C007FFC0A4D807FE
C7EAF80000035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F
131EECF83E010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FC
A2141EA25CA2147C003E1378007F13F8486C5A1381EB83E0EB87C0495AD87F3FC9FCEA3F
FEEA1FF8EA07E02A307EA02F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmex9 9 12
/Fj 12 111 df<163C167C16F8ED01F0ED03E0ED07C0ED0F80ED1F00153E157E5D4A5A5D
14034A5A4A5A5D141F4AC7FCA2147E5CA2495AA2495AA2495AA2495AA2495AA2133F91C8
FC5B137EA213FE5BA212015BA21203A25B1207A25BA2120FA35B121FA45B123FA590C9FC
5AA912FEB3AA127FA97E7FA5121F7FA4120F7FA31207A27FA212037FA21201A27F1200A2
7F137EA2137F7F80131FA26D7EA26D7EA26D7EA26D7EA26D7EA2147E80A26E7E140F816E
7E6E7E1401816E7E157E153E81ED0F80ED07C0ED03E0ED01F0ED00F8167C163C26B27082
39>18 D<12F07E127C7E7E6C7E6C7E6C7E6C7E7F6C7E137E133E133F6D7E6D7E1307806D
7EA26D7E6D7EA2147EA280A26E7EA26E7EA26E7EA2811403811401A2811400A281157EA2
157FA2811680A2151FA216C0A3150F16E0A4150716F0A5150316F8A9ED01FCB3AAED03F8
A916F01507A516E0150FA416C0151FA31680A2153FA216005DA2157EA215FE5DA214015D
A214035D14075DA24A5AA24A5AA24AC7FCA2147EA25CA2495A495AA2495A5C130F495A49
C8FC133E137E5B485A5B485A485A485A48C9FC123E5A5A5A26B27E8239>I<161E167EED
01FE1507ED1FF8ED3FE0EDFF804A13004A5AEC07F84A5AA24A5A4A5A5D147F92C7FCA25C
5CB3B3AF13015CA213035C13075C130F5C495A495A49C8FC13FE485AEA07F8485AEA3FC0
B4C9FC12FCA2B4FCEA3FC0EA0FF06C7EEA01FC6C7E137F6D7E6D7E6D7E80130780130380
1301A2801300B3B3AF8080A281143F816E7E6E7EA26E7EEC03FE6E7E6E1380ED3FE0ED1F
F8ED07FE1501ED007E161E27B277823A>26 D<EE07C0160FEE1F80A2EE3F00167E5EA24B
5A4B5A15075E150F4B5A5E153F93C7FC5D15FEA24A5AA24A5AA24A5A140F5D141F5DA24A
5AA2147F92C8FC5C5C1301A25C1303A2495AA25C130FA3495AA3495AA3137F5CA349C9FC
A45A5BA312035BA41207A25BA3120FA35BA3121FA45BA3123FA75BA2127FAD5B12FFB3A5
2A866A8143>48 D<12F87E127EA27E6C7E6C7EA26C7E6C7E7F12017F6C7E137E137F7F80
6D7EA26D7EA26D7EA26D7E801301801300A2147FA281143F81141F81A2140F81A26E7EA2
140381A36E7EA36E7EA382157FA36F7EA482151FA382150FA482A21507A382A31503A382
A41501A382A781A21780AD167F17C0B3A52A867E8143>I<B47EB3A5127F7FAD123FA27F
A7121FA37FA4120FA37FA31207A37FA21203A47F1201A37F7EA46D7EA380133FA36D7EA3
6D7EA3130780A26D7EA2130180A21300808081143FA26E7EA281140F8114076E7EA26E7E
A26E7EA2157F8182151F826F7E15078215036F7E6F7EA2167E82EE1F80A2EE0FC016072A
866A8343>64 D<EE7FC0B3A5178016FFAD1700A25DA75EA31503A45EA31507A35EA3150F
A25EA4151F5EA3153F5EA44B5AA315FF93C7FCA34A5AA34A5AA35D1407A24A5AA25D141F
A25D143F5D147F92C8FCA214FEA213015C13035C495AA2495AA2495AA2495A91C9FC5B13
7E13FE485A5B12035B485A485AA2485A48CAFC127EA25A5A2A867E8343>I<EAFF80B3B3
AB092F6A8043>I<EAFF80B3B3AB092F5D8043>I<0078173C00FC177EB3B3B06C17FE007E
17FCA2007F16016C17F8A26D15036C6CED07F06D150F000F17E06C6CED1FC0D803FCED7F
806D15FF6C6C6C010313006C01E0EB0FFED97FFEEBFFFC011FB612F06D5D010315800100
4AC7FC023F13F802031380374B7C7F40>83 D<007CF103E0A200FEF107F0B3B3B3B16C19
0FA26C1AE0A26D181FA2003F1AC06D183FA26C6CF07F80A26C6CF0FF006D5F0007616D17
036C6C4D5A6C6C4D5A6C6D4C5A02E0167F6D6C4C5AD93FFC03035B6D6C4B5B90260FFFC0
023F90C7FC6D01F0ECFFFE010101FF010F13F86D91B65A023F16C06E5E020303FCC8FC02
0015F0031F1480030101F8C9FC4C697C7F55>91 D<ED03C0151F157FEC01FF4A1300EC0F
F8EC1FE04A5A4A5A4AC7FC5C495A5C13035CB3B3A21307A25C130F5C131F495A49C8FC13
FE485AEA07F8EA1FE0EA7FC048C9FC12FCB4FCEA7FC0EA1FE0EA07F8EA01FC6C7E137F6D
7E6D7E130F80130780A21303B3B3A2801301806D7E806E7E6E7E6E7EEC0FF8EC03FF6E13
C0EC007F151F15032285788233>110 D E
%EndDVIPSBitmapFont
/Fk 134[26 5[23 5[42 16 5[16 1[29 26 1[29 12[32 15[42
68[{TeXBase1Encoding ReEncodeFont}10 58.1154 /Times-Italic
rf
%DVIPSBitmapFont: Fl cmsy6 6 3
/Fl 3 51 df<16C01501A315031680150716005D151E5D15F8EC03F0EC1FE0ECFF80D93F
FEC7FCB512F0148014F038003FFE903800FF80EC1FE0EC03F0EC00F8153C818181168015
0316C01501A315001600A9B712C0A3222F7AA230>22 D<EA01E0EA03F0A4EA07E0A213C0
120FA21380A2EA1F00A2121EA2123E123CA25AA3127012F05A12600C1A7E9B12>48
D<903807FFF0133F5BD801FCC7FCEA03E0485A48C8FC121E121C123C5A1270A212F05AA2
B612F0A300E0C8FCA27E1270A212787E121C121E7E6C7EEA03E0EA01FC6CB512F0133F13
071C237A9D2A>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm lasy9 9 3
/Fm 3 5 df<171C177EEE01FE1607161FEE7FDE923801FF1EED07FCED1FF0ED7FC09138
01FF00EC07FCEC1FF0EC7FC04948C7FCEB07FCEB1FF0EB7FC04848C8FCEA07FCEA1FF0EA
7FC048C9FCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0
EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FDEEE1FFE16071601EE
007E171C2F2E7AA93C>1 D<127012FCB4FC13C013F0EAF7FCEAF1FF38F07FC0EB1FF0EB
07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF923800
7FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A
48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC0D8F1FFC9FCEAF7FCEAFFF0
13C090CAFC12FC12702F2E7AA93C>3 D<127012FCB4FC13C013F0EAF7FCEAF1FF38F07F
C0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED
01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1F
F0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC0D8F1FFC9FCEA
F7FCEAFFF013C090CAFC12FC1270CBFCAC007FB712FCB812FEA26C16FC2F3E7AB03C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi6 6 15
/Fn 15 122 df<EB03F0EB0FFCEB1E1EEB780F13F001E013803801C0070003130FA2EA07
80A3390F001F00A3143E001E133C147C001F13785C383DC3C0383CFF80017EC7FC90C8FC
5AA45AA45A19217D9520>26 D<127812FCA4127806067A8513>58
D<ECFE03903807FFC690380F01EE90383C007E0170133E49131C5B1201A200031418A215
007F7FEA01FE3800FFE0EB7FFE6D7E010F1380010013C0EC0FE014031401EC00F0A20030
14E0A3EC01C012700078EB0380EC0700007E130E38E7807C38C3FFF038807F8020247CA2
26>83 D<14E0EB01F0EB03181307130E130CEB1C30133C1338137814601370EBF0C0A2EB
E1801201EBE30013E6EA03C613CC13D813F05B12075B5BA2120F121F1237126700C31310
0003133014E0380181C0EBFF006C5A15257FA31A>96 D<131FEBFF8C3801E0DE3803807E
3807007C48133C121E123E003C5B127CA3485BA215401560903801E0C012781303393807
E180391C1CF300380FF87F3807E03C1B177E9522>I<EB0FE0EB7FF83801F03C3803C01C
3807803C380F007C121E003E133814005AA35AA400781304140C00381338003C1370381F
03E0380FFF803801FC0016177E951C>99 D<EB1F80EBFFE03803E07038078030EA1F0012
3E123C007C1360387807C0B51280EBF80000F8C7FC5AA41408141800781370003813E038
1E07C0380FFF00EA03F815177D951D>101 D<1338137CA2137813701300A7EA0780EA1F
C0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121C
EA1E70EA0FE0EA07800F237DA116>105 D<13F8EA0FF0A21200A2485AA4485AA4380780
1E147FEB81C3EB8387380F060F495A1318EB700E4848C7FCA213FCEA1E7EEA3C0F80EB07
81158039780F0300A21402EB070600F0138CEB03F8386000F019247CA221>107
D<EA01F0EA1FE0A21201A2EA03C0A4EA0780A4EA0F00A4121EA45AA45AA213401360EAF0
C0A3EAF1801271EA3F00121E0C247DA214>I<000F017E13FC3A1F81FF83FF3B31C383C7
07803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003903903C0078013C0
A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A2001E011EEB1C70EE1F
E0000C010CEB07802F177D9536>I<000F13FC381FC3FF3931C707803861EC0301F813C0
EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F00130C143C1518153800
1EEB1C70EC1FE0000CEB07801F177D9526>I<EB3F80EBFFE03801E0F038038030EB0070
4813F0A2EB8040EBC00013FE3803FF806C13C038003FE0EB03F0EA3000127800F813E0A2
4813C0EA600138780F80383FFE00EA07F814177D951D>115 D<D807801470260FE00313
F83938F007801230006090380F007812C01638EAC1E00001011E1330EA03C0A348484813
60A316C0A2ED0180147C00039038DC03009038E1DF063901FF8FFC39007E03F825177D95
2C>119 D<EA07C0380FE0033918F0078012300060EB0F0012C0A2EAC1E00001131EEA03
C0A348485AA45CA214F813813803C3F0EA01FFEA00FC1300495A121E383E03C05CD83C07
C7FCEA300EEA383CEA1FF8EA07C019217D9520>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi9 9 46
/Fo 46 123 df<0107B812805B1900D907F8C712036EEC003F010382800101828018067F
81147F81143F81021F150E6F140C020F92C7FC81A26E7EA21403811401A2EC00F85D5D4A
5AEC0780020EC812E04A5D5C4A14014A5DD903C0140349C8FC010E4BC7FC5B495D01F015
1ED801C0153E48485D48C8EA01FC000E153F003FB75A5AB8FC5F39337CB23C>6
D<49B67EA3D9000190C8FC5DA25DA21403A2B44AEB1FE00180157F263FC007ECFF00001F
4B5A03F05B1603020F5C160703E05BA2021F130F003F5E018013C0A2023F495AA2ED803F
5F027F137F94C7FCED00FE001F4A5A6D48485A000F5D9039E0FE0FE000074A5AD803F901
7FC8FCC6B512FC013F13F0010790C9FCEB03FCA25CA21307A25C497E001FB512F8A33333
7EB22F>9 D<147F903803FFE090380FC0F890383F007C017C017E1360497F484815E048
4890381F80C0120748481481EEC1804848130F003F15C390C7140016C74815C6007E15CE
16DC16D816F8485D5E5E127CA3151F6C143F037713C06C903801E7E03A0F800783E13B07
C07E03E3803B01FFF801FF003A007F80007C2B227EA031>11 D<013FB6128090B712C012
03481680481600271F00C018C7FC001C1438EA38010070143000601380EAE00300001470
A2EB0700A25B15F0130E131EA2013E7F133C137CA213FC497FA2000180A2485A157EA2D8
01C013382A217E9F2C>25 D<EC01F8EC0FFE91383E0F8091387C07C0903901F803E0EB03
F0903907E001F0EB0FC01480131FD93F0013F8A2137EA2150301FE14F05BA20001140716
E05BA20003EC0FC0A249EB1F80160000075C157E6D5B4A5A390FFC03E09038EE07C0D9C7
FFC7FCEBC1F8D81FC0C8FCA25BA2123FA290C9FCA25AA2127EA212FEA25A123825327FA0
28>I<91B6FC01031580130F013F1500495C2701FF03FCC7FC3803F80048487F49137E48
5A121F49133E48C7127EA25A127EA215FE00FE5C5AA24A5AA24A5A007C5C14074A5A6C49
5A4AC8FC6C137C380F81F83803FFE0C66CC9FC29217E9F2C>I<150C151CA21518A21538
A21530A21570A21560A215E0A25DA21401A2EC1FF891B5FC903907F38FC090391F8383E0
90397E0301F801FCEB00FC2601F007137CD803E0143E3807C006000F153F261F800E131F
EA3F00140C127E021C133F12FE481318A20238137F167E48133016FC1470ED01F86C9038
6003F0007C15E09138E007C06CEC0F80003F9038C03F00D81F80137E3907C1C1F83903F1
CFE0C6B5C7FCEB1FF8EB0380A291C8FCA25BA21306A2130EA2130CA2131CA2131828447D
B32E>30 D<126012F812FE7E13C013F0EAF3FCEAF1FE38F07F80EB1FE0EB07F0EB03FCEB
00FFEC3FC06E7EEC07F8EC01FEEC007FED3F80A2ED7F00EC01FEEC07F8EC1FE04A5A02FF
C7FCEB03FCEB07F0EB1FE0EB7F80D8F1FEC8FCEAF3FCEAFFF013C090C9FC5A12F8126021
267EA526>46 D<1503ED0F80153F157FEC01FF1407EC1FE7EC3FC7ECFF07EB03FCEB07F0
EB1FE0EB7F803801FE00485AEA0FF0EA3FC048C7FC12FEA2127FEA3FC0EA0FF0EA03FC6C
7E38007F80EB1FE0EB07F0EB03FCEB00FFEC3FC7EC1FE7EC07FF1401EC007F153F150FED
030021267EA526>I<123C127E12FFA4127E123C08087A8715>58
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<1530157815F8A215F01401A215E01403A215C01407A21580140FA21500
5CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA213
1E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E
123EA2123C127CA2127812F8A25A12601D4B7CB726>61 D<010FB612F817FF18C0903B00
3FC0003FE0EF0FF0EF03F84B6D7E717E027F157F8492C81380A24A151F19C05CA21301A2
5CA21303183F5CA2130719804A157FA2130F19004A5D60011F1501605C4D5A013F5E1707
4A4A5A60017F4B5A4DC7FC91C8127E4C5A494A5AEE0FF049EC3FC000014AB4C8FCB712FC
16F093C9FC3A337DB23F>68 D<010FB712FCA218F8903A003FC00007170018785D183814
7F183092C8FCA25CA25C16060101020E1370040C13604A1500A20103141C5E5C16F849B5
FCA25EECF001010F130016605CA2011F14E05E5CA2013F91C8FCA25CA2137FA291CAFCA2
5BA25B487EB6FCA336337DB231>70 D<0107B512E05BA29039001FF0005DA25DA2143FA2
5DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA2
5CA2133FA25CA2137FA291C8FC5B007F13FEB5FCA223337EB222>73
D<90260FFFE092380FFFC06161D9003FEFE0004F5A19DFDA33F05EF0019F0273ED033F97
C7FC02631506180C02E35EDAE1F8EC187E14C118300101EE60FE61028115C0EF01800103
1681DA80FC90380301F81400170649ED0C0361010615181730010E017E140705605B010C
15C0A2011C913801800F610118EC030016060138013F141F4C5C01305CA201704A133F96
C8FC01605C6F5A01E05E4C137E000192C7FCD807F016FEB5D8801E90387FFFFC151C150C
4A337CB24A>77 D<010FB612F017FE83903B003FC0007FC0EF1FE0EF07F05DEF03F8147F
A292C713FCA25CEF07F85CA2010116F0170F4A15E0EF1FC00103ED3F80EF7F004A14FEEE
03FC0107EC1FF091B612C04CC7FC02F0C9FC130FA25CA2131FA25CA2133FA25CA2137FA2
91CAFCA25BA25B1201B512FCA336337DB231>80 D<ED07FC92387FFFC0913901F807F091
390FE001F891391F80007E027EC77E4AEC1F80EB03F8D907E0EC0FC0494815E0011F1507
494815F049C8FC13FEEF03F8485A12035B12075B120F491507121FA2485AA34848ED0FF0
A318E0171F90C9FC4817C0173F1880177F6C17005F5F4C5A5F6C9038078003903A801FE0
07F0001F903978700FE09139E0381FC03B0FC0C0183F8001C1027EC7FC3A07E1801CFCD8
03F1EB1DF8D801F9EB1FE02600FFC01380013F9038FE000C90380FFFFC0101019E131C90
C7001E13181738031F13785F1683EEFFE0A25F5FA26F48C7FC6F5AED01F035447DB43D>
I<03FF13180207EBE038021FEBF87891397F00FCF802FCEB1FF0D901F0130F4948130749
481303494814E0A249C71201A2013E15C0A3137E1780A2017F91C7FC8080EB3FF014FF15
F06D13FE6D6D7E6D806D80010080020F7F1400150F6F7E150315011500A2120CA2001C5D
1218A2150100385D003C14035E4B5A007E4A5A007F141F6D49C7FCD87BE0137C39F9FC03
F839F07FFFE0D8E01F138026C003FEC8FC2D377CB42F>83 D<0003B812F05A18E0903AF0
007F000FD80F8049130390C71401000E5C48EE00C01401121800384A1301A20030010315
80127000605CA20207140300E01700C74990C7FCA2140FA25DA2141FA25DA2143FA25DA2
147FA292C9FCA25CA25CA21301A25CA21303A25C497E001FB512FEA334337FB22D>I<26
7FFFFE90380FFFF8A3000190C8EA7F0049153C1738491530A217701203491560A217E012
07495DA21601120F495DA21603121F4992C7FCA25E123F491406A2160E127F90C8120CA2
161C5A481518A216381630481570166016E04B5A7E007E4A5A4BC8FC007F140E6C143C6C
6C5B6C6C485A3907F00FC06CB5C9FCC613FCEB1FE035357BB234>I<B500F0903801FFFC
A3D803FEC8EA3F8049ED1E00171C5F00011630177017605FA24C5A6D4AC7FC120016065E
A25E16386D14305E6D14E05E4B5AA24BC8FCEC8006A2013F5B5DA25D1570ECC0605DEB1F
C15D02C3C9FCA214C614ECA2EB0FF8A25C5CA25C5C130791CAFC130636357CB22D>I<B5
D8F00FB590380FFFE061A2D807FCC7D87FC0903801FE00496E48EB00F80003197062624F
5AA24FC7FC167F19064C6C130E190CDB019F5C7FDB031F5C0001140661030C15E0610318
4A5A153803304AC8FC1560EFE006DBC00F5BA29026FE01805C0000EB0300600206157018
604A5D141C0218ECE1805C05F3C9FC4A14F7EE07F66D4814FCA26D485C91C7FC5F017E5D
A2017C5D13785F137070CAFC4B357CB249>I<EB01F8EB07FE90381F071C90387C03FEEB
F801EA01F00003130048485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C
5A1640020F1360EDC0E016C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C3
00390F0787C73907FE03FE3900F800F823227EA029>97 D<133FEA1FFFA25B1200A35BA2
1201A25BA21203A25BA21207A2EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001
D81FE013F013C0138015F8123FA21300A248130315F0127EA2140700FE14E05AA2EC0FC0
A2EC1F80007C14005C147E003C137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357E
B321>I<147F903803FFC090380FC0F090383F0038137C4913F83801F0013803E0031207
EA0FC090388001F0001F90C7FC123F90C8FCA25A127EA45AA3127C150C151C15386C1470
15E06CEB03C0390F800F003807C07E3801FFF038007F801E227EA021>I<ED01F815FFA2
16F01507A316E0A2150FA216C0A2151FA21680A2153FA2D901F81300EB07FE90381F077F
90387C03FF496C5AEA01F000031300485A495B120F381F8001A2D83F005BA214035A007E
5CA2140712FE485C1640020F136016E0EDC0C0127CEC1FC1023F1380003CEB7F81003EEB
EF833A1E01C7C300390F0787C73907FE03FE3900F800F825357EB328>I<14FE903807FF
8090381F03C090387C01E03801F800485A485A485A485A1401D83F0013C01403007EEB0F
80ECFE00387FFFF8B5128000FCC8FCA45AA415186C1438007C147015E0003CEB01C0003E
EB07806CEB1E00380F80FC3803FFE0C690C7FC1D227DA024>I<ED0F80ED3FE0ED787091
3801F0F815E31403A2020713F0A291380FC1C0EDC000A4141F5DA4143F92C7FC011FB512
805B1600D9007FC7FC147EA414FE5CA513015CA413035CA413075CA4130F5CA45C131FA2
91C8FC121CEA7F1E133EA2EAFE3C5B1278EA70F0EA3FC0EA0F8025457CB425>I<EB07E0
EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA313FE9038FC0FE0EC3FF8ECF07E3901
FFC03FEC001F5B49148012035B5B153F000715005BA25D000F147E5B15FE5D121FEB8001
EDF808161C003F01031318010013F01638020713304814E0007E1570020313E0EDE1C000
FE903801E38048903800FF000038143C26357DB32C>104 D<EB01C0EB07E014F0130F14
E01307EB038090C7FCAA13F0EA03FCEA071EEA0E1F121C123800301380EB3F0012701260
5BEAE07EEA40FE12005B12015BA212035B12071420EBE070000F136013C014E014C0EA1F
80EA0F81EB8380EB8700EA078EEA03FCEA00F014337EB11A>I<EB07E0EA03FFA25CEA00
1FA35CA3133F91C8FCA35B137EA313FE49131FED7FC0EC01E0000190380383E09038F807
0F140E141C0003013813C0EBF0709138E00700D9F1C0C7FC3807F78001EEC8FC13FC7F38
0FFFE0EBC7F8EBC1FEEBC07E001F7F1380ED8080ED81C0003FEC01801300A21503481500
007EEB3E071506EC1F0E00FE5C48EB07F80038EB03E023357DB328>107
D<EB1F80EA07FF5A1400C67EA3137EA213FEA25BA21201A25BA21203A25BA21207A25BA2
120FA25BA2121FA25BA2123FA290C7FCA25AA2127E1304EAFE0E130C12FCA2131C131812
F81338EA7C701360EA3FE0EA0F8011357DB317>I<D801E001FEEB07F03C07F803FF801F
FC3C0E3E0F07E0783F001C903B3C03F1E01F803C181F7001F3800F003801E0EBF7002630
3FC001FE14C01270006001805B02005B0303141FD8E07F4A1480EA407E12000307143F01
FE1700495C60030F147E1201494A13FEF0FC04031F150E00030401130C49028013F8191C
033F01031318000717F04902001438050113704B15E0000F933800F1C049017EEC7F80D8
0380011CEC1E003F227EA044>I<D801E013FE3A07F803FF803A0E3E0F07E0001C90383C
03F039181F7001003813E026303FC07F12700060138014001503D8E07F5CEA407E120015
0701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914011603037F13000007
147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA02E>I<147F903803FF
C090380FC1F090383F00F8017C137C497F485A48487F1207485A5B001F1580123F90C7FC
ED3F005A127EA25D157E5A15FE5D007C5C14014A5A5D6C495A4A5A6C49C7FC380F807E38
07C1F83801FFE06C6CC8FC21227EA025>I<011F131F90397FC07FE09039E3E1E0F09039
C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03F0163FEA0707120600025B
1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291380003F016E0491307ED0F
C002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8FCA25BA21203
A25BA21207A25BB57EA3283083A027>I<3903E003E0390FF81FF8391C7C3C1C0018EB70
3E39383EE0FE38303FC0EB7F800070EB00FCEA607E157000E01400EAC0FEEA40FC1200A2
12015BA312035BA312075BA3120F5BA3121F5B0007C8FC1F227EA023>114
D<EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003130713C013E0EC
03806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE14
80A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>I<EB
0380EB0FC0A3131FA21480A2133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A21201
A25BA21203A25BA21207A25BA2120FA25B1408001F131C14181380143814701460EB00E0
EB01C0380F8380EB8700EA07FEEA01F817307FAE1C>I<13F8D803FEEB01C0D8070FEB03
E0000EEB8007121C001813C00038140FEA301F0070018013C01260013F131F00E0130000
401580C65A017E133F13FE491400A25D120149137E1602EDFE0716064913FCA2160E0201
130C9039F803F81C1618000090380F7C38D97C1C137090393FF81FE0903907E007802822
7EA02C>I<01F0130ED803FC131FD8071EEB3F80EA0E1F121C0038EB801F0030140F013F
130700701300006014035BD8E07E14001240EA00FE495B000114065BA2150E0003140C5B
151C15181538491330157015606D13E04A5A0001495A6D48C7FC3800FC1EEB3FF8EB07E0
21227EA025>I<01F01507D803FC903903800F80D8071E903907C01FC0D80E1F130F121C
00380180140F0030021F1307013FEC8003007013000060160149133FD8E07E1680004015
00EA00FE494913030001170049137EA203FE5B00031606495B170E170CA24B131C491518
6D15384A6C5B17600001010314E03B00F8077E01C0903A7C0E3F078090273FFC0FFEC7FC
903907F001F832227EA037>I<90391F801F8090397FE07FE09039E0F0E0703A01C0F9C0
F83903807D833807007F000E1403000C15F0001C137E0018EC01C002FEC7FC00385B1210
C7FC13015CA31303A25C1640010714E016C0001C5B007E1401010F148000FE1403011FEB
0700011B130E39F839F01C397070F878393FE07FE0390F801F8025227EA02C>I<13F0D8
03FCEB01C0D8071EEB03E0D80E1F1307121C003813800030140F013F14C0007013001260
49131FD8E07E14801240EA00FE49133F000115005BA25D0003147E5BA215FE5D5BA21401
5DEBF00314070001130F3900F83FF0EB3FFBEB0FC3EB00075DA20007130FD81F805B003F
495AA24AC7FCEB007E003E137C00385B381803F0381E07C0D807FFC8FCEA01F823317EA0
26>I<903807800390381FE00790383FF00690387FF80E9038FFFC1C48EBFE789038E03F
F03803800190C712E0EC01C0C7EA0380EC0700140E143C14705C495A495A49C7FC130E13
3C0170130C49131C484813184848133848C71278D80EC013F0380FFE03391F3FFFE0D838
1F13C0486C1380D86007130038E003FE38C000F020227DA024>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr9 9 13
/Fp 13 127 df<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90
C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203
A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<EB0FE0EB7FFCEBF83E3903E00F
803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FE
B2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00
EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A249
7E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB
3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A214
0F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C4913185B48
5A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EB
FFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C013
80A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC
1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F8
6C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC
01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C
13381330137013E013C0EA0180120313001206120E120C5A123812305A12E0B71280A3C7
380FC000A94A7E0107B51280A321337EB226>I<123C127E12FFA4127E123C1200B0123C
127E12FFA4127E123C08207A9F15>58 D<123C127E12FFA4127E123C1200B0123C127E12
FE12FFA3127F123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>
I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61
D<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>91 D<EAFFF0A41200B3B3B3AD12FF
A40C4B7FB715>93 D<3807C001390FF80380391FFE0F00383FFFFE38783FFC38E00FF838
4001F019077AB126>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmtt9 9 23
/Fq 23 122 df<387FFFFC14FFB612C06C80813907E00FF81407EC01FC6E7EA2157E157F
811680151FA316C0150FABED1F80A3153F1600A25D15FEA24A5A4A5A140F007FB55A5DB6
5A6C91C7FC14FC222E7FAD27>68 D<007FB512E0B612F0A36C14E039001F8000B3B2007F
B512E0B612F0A36C14E01C2E7BAD27>73 D<3803FFC0000F13F04813FC4813FF811380EC
1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC0130012FE
5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C9F27>
97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E49EB3F80
49131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FE
ECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13C048B512E04814F0
5A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F14F0
393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D207B9F
27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F383FC0
07EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F380F
F03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EB0FF8EB3FFE90B5
1280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E157E12FE
B612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC6CB5FC00
0114F86C14F0013F13C0903807FE001F207D9F27>I<EC1FF0ECFFF84913FC4913FE5BEB
0FF014C0011F137CEC8000A6007FB512F0B612F8A36C14F039001F8000B3A4003FB512C0
4814E0A36C14C01F2E7EAD27>I<153F90391FC0FF80D97FF313C048B612E05A4814EF39
0FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F8090B5
C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7EA3F
80007C140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF6CB5
5A000714F86C5CC614C0D90FFCC7FC23337EA027>I<EA7FE0487EA3127F1203A9147F90
38F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0
A36C018313E0242E7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487FA3
7EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<387FFF80B57EA37EEA000F
B3B2007FB512F8B612FCA36C14F81E2E7CAD27>108 D<397F07C01F3AFF9FF07FC09039
FFF9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FF
C3FF486C01E3138001F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1
FFC001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713
F0A36C018313E024207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391F
C00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303
393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F
27>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C0
49130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D
01F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03FC39FF
FE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5C
A291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114 D<9038FFF3800007EBFFC0
121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF
00011480D8000F13C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F
90B512C01580150000FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8
A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C001
0013001F297EA827>I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC
0F6CB612E016F07EEB3FFE90390FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A3
6C486C13803A07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F
80A36D48C7FCA3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I<393FFC1FFF
486C5A168016006C487E3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F7E5C6D5A1307
6D5A5C80497E130F497E143EEB3E3FEB7E1F90387C0F8001F87F00016D7E3803F0033A7F
FE1FFF80A2B54813C06C486C1380A222207E9F27>120 D<3A7FFC0FFF80486C4813C0A3
6C486C13803A07E000F800000313015D13F00001130301F85B1200A26D485A137CA29038
7E0F80133EA2011F90C7FC5CA2130F149E14BE130714FC1303A25C1301A25CA213035CA2
13075C1208EA3E0F007F5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmsy10 10 6
/Fr 6 119 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FE
A96C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D<ED03FE92383FFFC092B512E0020314F0EC0FC091381E001F0278130F4A1307494814E0
010315C049481480010FEC0F00161E494890C7FCA3133FA380A280806D7E14FE90380FFF
C06D13FE6D5B01005B15E0D901F8C8FCEB078049C9FC133C5B5B485A1203485A485AA248
CAFC5AA2127EA2163C00FE5D4B5AA26C4A5A4B5A6D5C6D49C7FC6C6C131E01F81378393F
FF03F06CEBFFC06C91C8FC000313FC38007FC02C3D7EBA2C>69 D<14C0EB01E01303A214
C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A25B1207A2
485AA290C7FC5AA2123EA2123C127CA2127812F8A41278127CA2123C123EA27EA27E7FA2
6C7EA212037FA212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A213
0314E0A21301EB00C0135278BD20>104 D<126012F07EA21278127CA2123C123EA27EA2
7E7FA26C7EA212037FA26C7EA212007FA21378137CA27FA2131E131FA2EB0F80A2130714
C0A2130314E0A414C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A25B1201
A2485AA25B1207A2485AA290C7FC5AA2123EA2123C127CA2127812F8A25A126013527CBD
20>I<126012F0B3B3B3B3A91260045377BD17>I<003FB812E04817F0A218E00078CBFCB3
B3A6007FB812E018F0A26C17E0CCFCAE007FB812E0B912F0A26C17E0344479B441>118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmmi10 10 12
/Fs 12 121 df<0103B812F8A34AC8127F010116076EED01F0A26D160081027F16708114
3F81021F1660A281140F8114076F1500140381A21401818082157FA36FC9FC153E15385D
5D4A5A4A5A4AC8120C021E151C023815185C4A1538494815304948157049C9FC010E5E01
3C150101704B5A4915074848150F48484B5A48C9127F000EED0FFF003FB8C7FC5AB9FC5F
3D397BB841>6 D<15FE913803FF8091380F83E091383E01F091387C00F85C494813FC01
03147C4948137E5C130F495AA249C7FC16FE5B137EA2150113FE4914FCA20001140316F8
5BED07F01203ED0FE04914C0151F000715806DEB3F00157E6D5B390FEE01F09038E707E0
9038C3FF80D9C0FCC7FC001F90C8FCA25BA2123FA290C9FCA25AA2127EA212FEA25AA212
7027377EA42B>26 D<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC
007E48487F485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5D
A24A5AA24A5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC
2B257DA32F>I<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF
027EEB01FE02F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A2
8094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F
03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E
007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190
C9FC313D7CBA33>83 D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F
485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA2
14015D48150CA21403EDF01C16181407007C1538007E010F1330003E131F027B13706C01
E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97
D<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F49137F484813FF48
5A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA315031507007E1406
150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838003FC020267DA424
>99 D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A120748
5A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA700
7E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838003FC0
20267DA427>101 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C
4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8
FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC
131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<EC1FC0ECFFF8903807E07E9038
0F801F90393F000F80017E14C0491307484814E0485A4848EB03F0120F5B121F48481307
A2127F90C7FCA2150F5A4815E0A2151F16C0A248EC3F8016005D157E007E5C4A5A003E49
5A003F495A6C495A6C6C48C7FC3807E07E3801FFF038003F8024267DA428>111
D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A0380
0FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8
FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF15
60010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267E
A42F>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmr10 10 7
/Ft 7 94 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B
120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A2
6C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<121C127FEAFF80A5EA7F
00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>58 D<121C127FEAFF80A5EA
7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A1218
12385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA2
6C17F836167B9F41>61 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmtt10 10 12
/Fu 12 122 df<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80
000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12
FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC
27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138
F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2
ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F839
00F03FC027337FB22C>I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF8
00FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E
127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C
1500013F13FC010F13F00101138023247CA32C>101 D<ED03F8903907F80FFC90391FFE
3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C000130000
1F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7FC
EB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848C7
EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB0F
F8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>103
D<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC0
1F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<
1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007F
B512FCB612FEA36C14FC1F3479B32C>I<387FFFE0B57EA37EEA0003B3B3A5007FB61280
B712C0A36C158022337BB22C>108 D<397FF01FE039FFF8FFF801FB13FE90B6FC6C1580
00019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE
6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01
F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>112
D<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A
13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>114
D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F1400
13F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00
FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC
0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0
A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<
3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D140012005D
6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3
ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C01003F5BEA
7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>121
D E
%EndDVIPSBitmapFont
/Fv 134[37 37 55 37 42 23 32 32 42 42 42 42 60 23 37
23 23 42 42 23 37 42 37 42 42 9[69 1[60 46 42 2[51 1[55
1[46 2[28 60 1[51 51 60 55 51 51 6[28 3[42 3[42 42 1[23
21 28 21 2[28 28 37[42 2[{TeXBase1Encoding ReEncodeFont}51
83.022 /Times-Italic rf /Fw 105[42 29[42 60 42 46 28
32 37 1[46 42 46 69 23 1[28 23 46 42 28 37 46 37 46 42
10[60 1[55 46 2[51 65 1[78 55 6[55 60 60 1[60 6[28 42
42 42 42 42 42 42 42 42 42 1[21 1[21 41[46 2[{
TeXBase1Encoding ReEncodeFont}48 83.022 /Times-Bold rf
/Fx 134[50 50 2[55 33 39 44 2[50 55 83 28 2[28 2[33 44
55 44 1[50 13[55 72 8[39 5[72 13[50 50 50 50 50 46[55
2[{TeXBase1Encoding ReEncodeFont}26 99.6264 /Times-Bold
rf /Fy 133[29 33 33 50 33 37 21 29 29 1[37 37 37 54 21
33 21 21 37 37 21 33 37 33 37 37 6[42 1[46 62 46 54 42
37 46 1[46 54 50 62 42 1[33 25 54 1[46 46 54 50 46 46
6[25 37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25 25
25 36[37 2[{TeXBase1Encoding ReEncodeFont}66 74.7198
/Times-Italic rf /Fz 134[37 1[54 37 1[25 29 33 2[37 42
4[21 1[37 1[33 42 33 42 37 21[58 4[46 4[54 6[25 3[37
37 37 37 37 37 2[19 46[{TeXBase1Encoding ReEncodeFont}26
74.7198 /Times-Bold rf /FA 133[45 1[45 1[45 45 45 45
45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45
32[45 13[45 3[45 1[45 44[{TeXBase1Encoding ReEncodeFont}28
74.7198 /Courier rf
%DVIPSBitmapFont: FB cmsy9 9 35
/FB 35 120 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<123C127E12FFA4127E
123C08087A9615>I<130E131FA639700E01C000F8EB03E000FE130F00FF131F397F8E3F
C0391FEEFF003803FFF8C613E0EB3F80A2EBFFE0000313F8381FEEFF397F8E3FC039FF0E
1FE000FE130F00F813030070EB01C0D8001FC7FCA6130E1B207BA226>3
D<EC0FFE91387FFFC0903903F061F890390F80603ED91C0013070178EC03C001E0EC00E0
4848157048488148C780000E82000C1606001C16070018820038178000301601007017C0
00601600A300E017E0481760A3B912E0A200C0C70060C71260A36C17E0006017C0A30070
1601003017800038160300181700001C5E000C1606000E160E6C5E6C6C5D6C6C5D6C6C5D
0178EC03C0011C4AC7FCD90F80133E903903F061F89039007FFFC0DA0FFEC8FC33327CAB
3C>8 D<EB1FC0EBFFF8487F000713FF4814804814C04814E0A24814F0A2B612F8A96C14
F0A26C14E0A26C14C06C14806C1400000113FC6C5BEB1FC01D1D7CA126>15
D<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C0CCFCAC007FB812C0
B912E0A26C17C033247CA43C>17 D<023FB512FC49B612FE1307011F15FCD93FE0C8FC01
FFC9FCEA01FCEA03F0485A485A5B48CAFC5A123E5AA21278A212F8A25AA67EA21278A212
7CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB612FC010715FE1301D9003F14
FC91C9FCAC001FB712FC4816FEA26C16FC2F3E7AB03C>I<127012FCB4FCEA7FC0EA1FF0
EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF913800
7FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC092
3801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0
EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC1270CBFCAC007FB712FCB812FEA26C
16FC2F3E7AB03C>21 D<170C171EA3173EA2177CA217F8A2EE01F01603EE07E0EE0FC0EE
3F80EE7F00ED01FCED0FF8ED7FE091380FFFC00107B5C7FC007FB512F8B612C0A26C14F8
D8000713FFD9000F13C09138007FE0ED0FF8ED01FCED007FEE3F80EE0FC0EE07E0EE03F0
1601EE00F8A2177CA2173EA2171EA3170C1700AC007FB712FCB812FEA26C16FC2F3E7AB0
3C>I<187018F0A2841878A2187C183C183E84A2727E727E85727E727E727E197F007FBA
12C0BB12F0A26C19C0CCEA7F0019FC4E5A4E5A4E5A614E5A4EC7FCA2183E183C187C1878
A218F860A2187044287CA64D>33 D<17F0A283177C173C173E83A2717E717E717E007FB8
7EB97E846C17FFCBEA1F80F00FE0F003F0F001FE9538007F80F11FF0A2F17F80953801FE
00F003F0F00FE0F01F80007FB9C7FCB912FC606C5FCAEA03E04D5A4D5A4DC8FCA2173E17
3C177C5F5FA2442A7CA74D>41 D<91383FFFF849B512FC1307011F14F8D93FE0C7FC01FF
C8FCEA01FCEA03F0485A485A5B48C9FC5A123E5AA21278A212F8A25AB712F816FCA216F8
00F0C9FC7EA21278A2127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB512F8
010714FC1301D9003F13F8262E7AA933>50 D<1630167816F8A2ED01F0A2ED03E0A2ED07
C0A2ED0F80A2ED1F00A2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC7FCA2143EA2
5CA25CA2495AA2495AA2495AA2495AA249C8FCA2133EA25BA25BA2485AA2485AA2485AA2
485AA248C9FCA2123EA25AA25AA25A1260254675B500>54 D<12F0AC12F812FCA212F812
F0AC061C7CA000>I<0060ED018000F0ED03C06C1507A200781680007C150FA2003C1600
003E5DA26C153EA26C153C6D147CA26C6C5CA200035D90B6FCA26C5DA29038F000036C6C
495AA201785C017C130FA2013C91C7FC013E5BA26D133EA26D133CEC807CA201071378EC
C0F8A2903803E1F0A201015B14F3A26DB45AA26E5AA36EC8FCA3141E140C2A3680B32B>
I<007FB61280B712C0A27EC81203B3A2003FB6FC5AA27EC81203B3A2007FB6FCB7FCA26C
158022347CB32B>I<EC0180EC03C0A21407EB0FE790383FFF80EBF83F3801E00FEA03C0
D8078013C0390F001FE0A24814F0001E133E003E14F8143CA248EB7C7CA2147814F8A200
FCEBF07EA21301A214E01303A214C0A21307A21480A2130FA214005BA2131EA2D87C3E13
7CA2133C137C007E14FCD83E7813F8A213F8001E14F0381FF001000F14E01403D807E013
C00003EB0780EC0F00EBF83EEBFFFC3807CFE001C0C7FC5BA26CC8FC1F407DB926>59
D<91381FFFFE49B612F0010F15FC013F15FF9026FE1FC014C0D801E0020713E0D8078002
0113F0D80F009138007FF8484AEB1FFC003E160F007EEE07FE007C013F140348160100E0
17FFC78192C8FCA2187F5CA2147EA2187E14FE5C18FCA213014AEC01F8A218F04948EC03
E0A2EF07C04948EC0F801800171E49485C5F5F4948EB01C0EE07804CC7FC49C7123C16F8
013EEB0FE0017EEBFF8090B500FCC8FC000314F04891C9FC4813F038337EB23B>68
D<913901C003FC913907801FFF91260F007F13C0DA3C01B512E091267803C113F09139E0
0F007F902603C01EEB1FF8494848130F494848EB07FC011E13F8494848130390267C03E0
14FE01F815014848485A140FD803E04913000007131F01C090C8FC000F133CEB8038001F
90C9FCA248CA12FCA3481601127E18F8A212FEEF03F0A218E0170718C0170F6C1780EF1F
00A2173E6C6C5D17786D5D4C5A6C6C4A5A6D4A5A6C6C4AC7FC6D143C6CB45C6C90388001
E06C9038F01FC06C90B5C8FC6C6C13F86D13E0D907FEC9FC37377CB43D>79
D<19E0F003C091B8128001071700011F16FC017F16F090B812802803C0001F80C8FC4848
133F120F48C7FC484AC9FC5A127E5A4814FE12E0C8FCA24A5AA44A5AA44A5AA44A5AA44A
5AA44A5AA44ACAFCA3147E14FE5CA213015C13035C5C495A5C010ECBFC3B3A7DB42A>84
D<0060ED018000F0ED03C0B3AF6C1507A2007CED0F80A26CED1F00003F5D6C6C147ED80F
E0495AD807F8EB07F83A01FF807FE06C90B55A013F91C7FC010F13FC010013C02A307CAD
33>91 D<ECFFC0010F13FC013F13FF90B612C0489038807FE03A07F80007F8D80FE0EB01
FCD81F80EB007E48C87E003E8148ED0F80A248ED07C0A2481503B3AF0060ED01802A307C
AD33>I<0060ED018000F0ED03C0A9141EAB017FB5128390B612C3A26D14839039001E00
03A96C1507140C007C90C7EA0F80A26CED1F00003F5D6C6C147ED80FE0495AD807F8EB07
F83A01FF807FE06C90B55A013F91C7FC010F13FC010013C02A307CAD33>I<140C141E14
3FA24A7EA34A7EA2903801F3E0A2903803E1F0A214C001077FA290380F807CA249487EA2
011E131E013E131FA2496D7EA2496D7EA2491303000181A248486D7EA248486D7EA24914
78000F157CA248C87EA2003E81A2003C81007C1680A248ED07C0A24815030060ED01802A
307CAD33>I<0060ED018000F0ED03C06C1507A2007CED0F80A2003C1600003E5DA26C15
3EA26C6C5CA2000715786D14F8A26C6C495AA26C6C495AA200005D6D1307A2017C495AA2
6D49C7FCA2011E131E011F133EA26D6C5AA26D6C5AA201035B14E1A2903801F3E0A26DB4
5AA26E5AA36EC8FCA2141E140C2A307CAD33>I<126012F0B3A5B712F816FCA216F800F0
C9FCB3A5126026347CB32F>I<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F
91C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D
7E6D7EEB00FEEC3FE014071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F
80131FB3A580130F6D7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A
495A131F5CB3A5133F91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I<EB01
80EB03C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A248
5AA25B120FA248C7FCA2121E123EA25AA2127812F8A41278127CA27EA2121E121FA26C7E
A212077FA26C7EA212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A2
1303EB0180124A79B71E>I<126012F07EA21278127CA27EA2121E121FA26C7EA212077F
A26C7EA212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A41480130F
A2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A2485AA25B120FA248C7FCA212
1E123EA25AA2127812F8A25A1260124A7CB71E>I<126012F0B3B3B3B31260044B78B715>
I<126012F07EA21278127CA2123C123EA2121E121FA27E7FA212077FA26C7EA212017FA2
12007FA21378137CA2133C133EA2131E131FA27F80A26D7EA2130380A2130180A2130080
A21478147CA2143C143EA280A2801580A2140715C0A2140315E0A2140115F0A2140015F8
A2157815301D4B7CB726>110 D<007FB612FEB8FCA300F0C8120FB3B3A500601506282E
7BAD33>117 D<003FB8FC481780A218000078CBFCB3B3A2007FB8FC1880A26C1700CCFC
AC007FB8FCB91280A26C1700313E7AB03C>I<007FB712FEB9FCA27ECA120FB3B3A2007F
B8FCB9FCA26C5ECCFCAC007FB8FCB91280A26C1700313E7CB03C>I
E
%EndDVIPSBitmapFont
/FC 87[25 17[37 27[33 37 37 54 37 37 21 29 25 37 37 37
37 58 21 37 21 21 37 37 25 33 37 33 37 33 3[25 1[25 46
54 54 71 54 54 46 42 50 54 42 54 54 66 46 54 29 25 54
54 42 46 54 50 50 54 3[42 2[21 37 37 37 37 37 37 37 37
37 37 21 19 25 19 2[25 25 25 58 35[42 2[{TeXBase1Encoding ReEncodeFont}
77 74.7198 /Times-Roman rf
%DVIPSBitmapFont: FD cmr6 6 8
/FD 8 62 df<1438B2B712FEA3C70038C7FCB227277C9F2F>43 D<13E01201120712FF12
F91201B3A7487EB512C0A212217AA01E>49 D<EA01FC3807FF80381C0FC0383003E03860
01F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB
0F00131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>
I<13FF000313C0380F03E0381C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01
F0EB03E0EB0FC03801FF00A2380003E0EB00F01478147C143E143F1230127812FCA2143E
48137E0060137C003813F8381E03F0380FFFC00001130018227DA01E>I<14E01301A213
031307A2130D131D13391331136113E113C1EA01811203EA07011206120C121C12181230
127012E0B6FCA2380001E0A6EB03F0EB3FFFA218227DA11E>I<00101330381E01F0381F
FFE014C01480EBFE00EA1BF00018C7FCA513FE381BFF80381F03C0381C01E0381800F014
F8C71278A2147CA21230127812F8A214784813F8006013F0387001E01238381E07803807
FF00EA01F816227CA01E>I<127812FCA412781200A9127812FCA4127806157A9412>58
D<B712FEA3CAFCA9B712FEA3270F7C932F>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FE cmmi7 7 6
/FE 6 123 df<1238127C12FEA3127C123807077A8614>58 D<1238127C12FE12FFA212
7F123B1203A31206A3120C121812381270122008127A8614>I<3B07801FC007E03B0FE0
7FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B49133E00
C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218C093
3801E180271F0007C013E3933800FF00000E6D48137C341B7D993B>109
D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813E1123015F03960
07C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF87E39F06F038039
70C70700383F83FE381F01F81D1B7D9926>120 D<EA03E0486C1370D80C7813F8EA187C
0030EB01F0A2126013F800C0EB03E0A2EA01F0A2EC07C0EA03E0A33907C00F80A4EC1F00
A25C00035B3801E0FE3800FFBEEB3F3E13005C121E003F5B5C387E01E0383C03C0383007
80D81C1FC7FCEA0FFCEA07F01D267D9922>I<013E13C0137F9038FF818048EBC3004813
FF380701FE3806000C00045BC75A5C5CEB03800106C7FC5B5B5B5B9038C00180EA038039
060003005C380FF81E381FFFFE38383FFC38601FF86D5A38C007C01A1B7D9920>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FF cmr7 7 7
/FF 7 59 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C
123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E013
6013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0
120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113
C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<13381378EA01F8121F12FE12E0
1200B3AB487EB512F8A215267BA521>49 D<13FF000313E0380E03F0381800F848137C48
137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7
FC5B5B903870018013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521
>I<13FF000313E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E
147C5C495AEB07E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FE
A21500485B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2
147814F81301A2130313071306130C131C131813301370136013C012011380EA03005A12
0E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<12
38127C12FEA3127C12381200AB1238127C12FEA3127C123807197B9813>58
D E
%EndDVIPSBitmapFont
/FG 87[28 19[37 37 24[37 42 42 60 42 42 23 32 28 42 42
42 42 65 23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28
51 1[60 78 60 60 51 46 55 60 46 60 60 74 51 1[32 28 60
60 46 51 60 55 55 60 5[23 23 42 42 42 42 42 42 42 42
42 42 23 21 28 21 47 1[28 28 28 35[46 46 2[{
TeXBase1Encoding ReEncodeFont}77 83.022 /Times-Roman
rf /FH 139[40 47 53 2[60 66 1[33 1[40 33 1[60 40 53 66
53 66 60 14[86 2[93 1[113 8[86 2[86 19[40 45[{
TeXBase1Encoding ReEncodeFont}21 119.552 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 729 448 a FH(A)30 b(Relational)g(Model)h(f)m(or)e
(Object-Oriented)i(Designs)911 737 y FG(He)20 b(Jifeng)1232
707 y FF(1)1268 737 y FG(,)h(Zhiming)e(Liu)1733 707 y
FF(1)p FE(;)p FF(2)1822 737 y FG(,)i(Xiaoshan)e(Li)2272
707 y FF(3)2330 737 y FG(and)g(Shengchao)f(Qin)2980 707
y FF(4)747 879 y FD(1)819 911 y FC(International)h(Institute)g(for)g
(Softw)o(are)f(T)-5 b(echnology)g(,)21 b(The)d(United)i(Nations)f(Uni)n
(v)o(ersity)1477 1002 y FB(f)p FA(hjf,lzm)p FB(g)p FA(@iist.unu.edu)732
1062 y FD(2)804 1094 y FC(Department)h(of)e(Mathematics)i(and)g
(Computer)f(Science,)g(The)g(Uni)n(v)o(ersity)g(of)g(Leicester)1605
1185 y FA(zl2@mcs.le.ac.uk)1011 1244 y FD(3)1083 1276
y FC(F)o(aculty)f(of)h(Science)g(and)h(T)-5 b(echnology)g(,)20
b(The)f(Uni)n(v)o(ersity)g(of)g(Macau)1717 1368 y FA(xsl@umac.mo)667
1427 y FD(4)739 1459 y FC(Singapore-MIT)g(Alliance)g(&)g(Dept.)f(of)h
(Computer)h(Science,)e(National)h(Uni)n(v)-5 b(.)20 b(of)e(Singapore)
1493 1550 y FA(qinsc@comp.nus.edu.sg)759 1886 y Fz(Abstract.)41
b FC(This)15 b(paper)g(de)n(v)o(elops)h(a)e(mathematical)h
(characterisation)g(of)f(object-oriented)759 1977 y(concepts)31
b(by)g(de\002ning)f(an)g(observ)n(ation-oriented)i(semantics)f(for)e
(an)h(object-oriented)759 2069 y(language)22 b(\(OOL\))e(with)g(a)h
(rich)g(v)n(ariety)g(of)f(features)h(including)h(subtypes,)g
(visibility)-5 b(,)20 b(in-)759 2160 y(heritance,)15
b(dynamic)h(binding)f(and)g(polymorphism.)h(The)e(language)i(is)e(e)o
(xpressi)n(v)o(e)i(enough)759 2251 y(for)k(the)g(speci\002cation)h(of)f
(object-oriented)h(designs)g(and)g(programs.)f(W)-6 b(e)20
b(also)g(propose)i(a)759 2343 y(calculus)k(based)g(on)g(this)e(model)i
(to)f(support)h(both)g(structural)f(and)h(beha)o(vioural)g(re\002ne-)
759 2434 y(ment)20 b(of)f(object-oriented)h(designs.)f(W)-6
b(e)19 b(tak)o(e)h(the)f(approach)h(of)f(the)h(de)n(v)o(elopment)g(of)f
(the)759 2525 y(design)f(calculus)g(based)g(on)f(the)g(standard)h
(predicate)g(logic)f(in)g(Hoare)g(and)h(He')l(s)f(Unifying)759
2617 y(Theories)23 b(of)g(Programming)g(\(UTP\).)e(W)-6
b(e)23 b(also)f(consider)i(object)f(reference)g(in)g(terms)f(of)759
2708 y(object)e(identity)f(as)f(v)n(alues)i(and)g(mutually)f(dependent)
i(methods.)759 2891 y Fz(K)n(eyw)o(ords:)f Fy(Object)f(Orientation,)g
(Re\002nement,)g(Semantics,)h(UTP)523 3171 y Fx(1)99
b(Intr)n(oduction)523 3368 y FG(Softw)o(are)22 b(engineering)f(is)j
(mainly)e(concerned)f(with)i(using)f(techniques)g(to)h(systematically)g
(de-)523 3468 y(v)o(elop)17 b(lar)o(ge)h(and)g(comple)o(x)f(program)f
(suites.)j(Ho)n(we)n(v)o(er)m(,)d(it)j(is)h(well)f(kno)n(wn)e(that)h
(it)i(is)f(hard)f(to)g(ob-)523 3567 y(tain)g(the)h(le)n(v)o(el)f(of)g
(assurance)f(of)h(correctness)f(for)h(safety)g(critical)g(softw)o(are)g
(using)g(old)g(f)o(ashioned)523 3667 y(programming)d(techniques.)i(In)h
(the)h(search)f(for)g(techniques)f(for)h(making)g(softw)o(are)g
(cheaper)f(and)523 3767 y(more)22 b(reliable,)f(tw)o(o)i(important)e(b)
n(ut)i(lar)o(gely)e(independent)e(approaches)i(ha)n(v)o(e)h(been)g
(visibly)g(in-)523 3866 y(\003uential)e(in)g(recent)g(years.)g(The)o(y)
f(are)581 4047 y Fw(\226)41 b FG(object-oriented)18 b(programming,)e
(and)581 4146 y Fw(\226)41 b FG(formal)19 b(methods.)523
4327 y(First,)j(it)h(becomes)e(e)n(vident)f(that)i Fv(objects)g
FG(are)g(and)f(will)h(remain)f(an)h(important)e(concept)h(in)h(soft-)
523 4426 y(w)o(are)h(de)n(v)o(elopment.)e(Experimental)g(languages)h
(of)h(the)h(1970')-5 b(s)22 b(introduced)f(v)n(arious)h(concepts)523
4526 y(of)f(package,)f(cluster)m(,)h(module,)f(etc,)h(gi)n(ving)g
(concrete)f(e)o(xpression)g(to)h(the)h(importance)d(of)j(mod-)523
4625 y(ularity)27 b(and)h(encapsulation,)d(the)j(construction)e(of)h
(softw)o(are)h(components)e(hiding)g(their)i(state)523
4725 y(representations)21 b(and)h(algorithmic)g(mechanisms)f(from)h
(users,)h(e)o(xporting)d(only)i(those)h(features)523
4825 y(which)f(are)g(needed)f(in)h(order)f(to)i(use)f(the)h
(components.)c(This)k(gi)n(v)o(es)f(the)g(softw)o(are)g(components)523
4924 y(a)j(le)n(v)o(el)f(of)f(abstraction,)g(separating)g(the)i(vie)n
(w)f(of)g(what)g(a)g(module)f(does)h(for)g(the)g(system)h(from)p
eop
%%Page: 2 2
2 1 bop 523 448 a FG(the)23 b(details)g(of)f(ho)n(w)g(it)h(does)g
(them.)f(It)h(is)g(also)g(clear)g(that)f(certain)g(features)g(of)h
(objects,)f(particu-)523 548 y(larly)d Fv(inheritance)e
FG(and)i(the)g(use)g(of)g Fv(object)f(r)m(efer)m(ences)h
FG(as)h(part)f(of)f(the)h(data)g(stored)g(by)f(an)h(object,)523
648 y(could)f(be)g(used)h(to)f(construct)g(lar)o(ge)f(system)i
Fv(incr)m(ementally)f FG(and)g(ef)n(\002ciently)-5 b(,)17
b(as)i(well)h(as)f(making)523 747 y(it)i(possible)f(to)g
Fv(r)m(euse)h FG(objects)f(in)g(dif)n(ferent)f(conte)o(xts.)648
865 y(At)k(least)h(for)e(highly)g(critical)h(systems,)g(it)h(seems)g
(essential)f(to)g(gi)n(v)o(e)f(softw)o(are)h(engineering)523
965 y(the)32 b(same)h(basis)g(in)g(mathematics)e(that)i(is)g(the)f
(hall)h(mark)e(of)i(other)e(important)g(engineering)523
1065 y(disciplines.)22 b(In)h(this)g(there)g(has)g(good)e(progress,)h
(resulting)g(in)h(three)f(main)g(paradigms:)g(model-)523
1164 y(based,)g(algebraic)f(and)g(process)h(calculi.)g(Both)g
(practitioners)f(of)h(formal)f(methods)g(and)g(e)o(xperts)523
1264 y(in)d(object)g(technology)d(ha)n(v)o(e)i(in)m(v)o(estigated)f(ho)
n(w)h(formal)g(speci\002cation)g(can)h(supplement)e(object-)523
1363 y(oriented)22 b(de)n(v)o(elopment,)e(e.g.)j([21],)e(or)i(ho)n(w)g
(it)h(may)f(help)f(to)i(clarify)e(the)h(semantics)g(of)g(object-)523
1463 y(oriented)c(notations)h(and)f(concepts,)h(e.g.)g([1].)f(Examples)
h(of)g(such)g(w)o(ork)g(include)f(formalisation)523 1563
y(of)h(the)g(OMG')-5 b(s)21 b(core)f(object)f(model)h([19])f(using)g
(Z.)648 1681 y(Model-based)28 b(formalisms)i(ha)n(v)o(e)g(been)f(used)h
(e)o(xtensi)n(v)o(ely)f(in)i(conjunction)d(with)i(object-)523
1780 y(oriented)d(techniques,)f(via)i(languages)f(such)g(as)i(Object-Z)
e([8],)h(VDM++)f([12],)g(and)h(methods)523 1880 y(such)k(as)h(Syntrop)o
(y)e([11])g(which)h(uses)h(the)f(Z)h(notation)e(and)h(Fusion)g([10])f
(that)h(is)i(related)d(to)523 1980 y(VDM.)19 b(Whilst)h(these)f
(formalisms)f(are)g(ef)n(fecti)n(v)o(e)g(at)h(modelling)e(data)i
(structures)f(as)i(sets)g(and)e(re-)523 2079 y(lations)h(between)e
(sets,)j(the)o(y)e(are)g(not)h(ideal)f(for)g(capturing)f(more)h
(sophisticated)f(object-oriented)523 2179 y(mechanisms,)i(such)h(as)h
(dynamic)e(binding)f(and)i(polymorphism.)648 2297 y(Using)28
b(predicate)f(transformer)m(,)e(Ca)n(v)n(alcanti)k(and)e(Naumann)g
(de\002ned)g(an)h(object-oriented)523 2397 y(programming)15
b(language)i(with)i(subtype)f(and)g(polymorphism)d([9,)e(29].)18
b(Sek)o(erinski)g([33,)12 b(28])18 b(de-)523 2496 y(\002ned)k(a)i(rich)
e(object-oriented)e(language)h(by)i(using)f(a)h(type)g(system)g(with)g
(subtyping)d(and)j(pred-)523 2596 y(icate)k(transformers.)d(Ho)n(we)n
(v)o(er)m(,)g(neither)h(reference)f(types)i(nor)g(mutual)f(dependenc)o
(y)e(between)523 2696 y(classes)29 b(are)f(tackled)f(in)g(those)h
(approaches.)d(America)j(and)f(de)g(Boer)h(ha)n(v)o(e)f(gi)n(v)o(en)g
(a)h(logic)f(for)523 2795 y(the)22 b(parallel)f(language)f(POOL)i([5].)
e(It)i(applies)g(to)f(imperati)n(v)o(e)f(programs)g(with)i(object)f
(sharing,)523 2895 y(b)n(ut)26 b(without)g(subtyping)f(and)g(method)g
(o)o(v)o(erriding.)e(Abadi)j(and)g(Leino)g(de\002ned)f(an)h(axiomatic)
523 2994 y(semantics)31 b(for)e(an)i(imperati)n(v)o(e,)d
(object-oriented)g(language)h(with)h(object)g(sharing)g([2],)f(b)n(ut)i
(it)523 3094 y(does)h(not)h(permit)f(recursi)n(v)o(e)f(object)h(types.)
g(Poetzsch-Hef)n(fter)f(and)h(M)7 b(\250)-35 b(uller)32
b(ha)n(v)o(e)g(de\002ned)g(a)523 3194 y(Hoare-style)c(logic)h(for)f
(object-oriented)f(programs)g(that)i(relax)o(es)g(man)o(y)f(of)h(the)g
(pre)n(vious)f(re-)523 3293 y(strictions)23 b([31].)f(Ho)n(we)n(v)o(er)
m(,)f(as)j(pointed)d(by)i(Leino)g(in)g([23],)f(instead)g(of)h(allo)n
(wing)g(the)g(designer)523 3393 y(of)g(a)h(method)d(de\002ning)h(its)j
(speci\002cation)d(and)h(then)g(checking)e(that)i(implementation)e
(meet)i(the)523 3493 y(speci\002cation,)28 b(the)h(speci\002cation)g
(of)g(a)g(method)f(in)h(the)g(Poetzsch-Hef)n(fter)f(and)g(M)7
b(\250)-35 b(uller)29 b(logic)523 3592 y(is)f(deri)n(v)o(ed)d(from)h
(the)h(method')-5 b(s)26 b(kno)n(wn)f(implementation.)g(Leino)h
(presented)g(a)h(logic)g(in)g([23])523 3692 y(with)e(imperati)n(v)o(e)e
(features,)h(subtyping,)e(and)j(recursi)n(v)o(e)e(types.)h(It)h(allo)n
(ws)g(the)g(speci\002cation)f(of)523 3791 y(methods)19
b(of)h(classes,)h(b)n(ut)f(restricting)g(inheritance)e(and)i(not)g
(dealing)f(with)h(visibility)-5 b(.)648 3910 y(In)20
b(this)i(paper)m(,)e(we)h(aim)h(to)f(de)n(v)o(elop)e(a)j(mathematical)e
(characterisation)f(of)i(object-oriented)523 4009 y(concepts,)28
b(and)g(pro)o(vide)e(a)j(proper)e(semantic)i(basis)g(essential)g(for)f
(ensuring)f(correctness)h(and)523 4109 y(for)j(the)g(de)n(v)o(elopment)
d(of)j(tool)g(support)f(for)h(the)g(use)h(of)f(formal)f(techniques.)f
(W)-7 b(e)33 b(de\002ne)e(an)523 4208 y(object-oriented)13
b(language)h(with)i(subtypes,)e(visibility)-5 b(,)15
b(reference)f(types,)h(inheritance,)f(dynamic)523 4308
y(binding)24 b(and)i(polymorphism.)d(The)i(language)g(is)i(suf)n
(\002ciently)e(similar)h(to)g(Ja)n(v)n(a)h(and)e(C++)i(and)523
4408 y(can)19 b(be)h(used)f(in)h(meaningful)d(case)j(studies)g(and)f
(to)h(capture)e(some)h(of)h(the)f(central)g(dif)n(\002culties)g(in)523
4507 y(modelling)g(object-oriented)e(programs.)648 4625
y(W)-7 b(e)32 b(b)n(uild)f(a)h(logic)f(of)g(object-oriented)e(programs)
g(as)j(a)g(conserv)n(ati)n(v)o(e)d(e)o(xtension)h(of)h(the)523
4725 y(standard)21 b(predicate)g(logic)h([18].)e(In)i(our)f(model,)g
(both)h(commands)e(and)i(class)h(declarations)e(are)523
4825 y(identi\002ed)g(as)h(predicates)f(whose)h(alphabets)f(include)f
(logic)i(v)n(ariables)f(representing)e(the)j(initial)523
4924 y(and)i(\002nal)g(v)n(alues)g(of)g(program)e(v)n(ariables,)h(as)i
(well)g(as)g(those)f(v)n(ariables)f(representing)f(the)i(con-)p
eop
%%Page: 3 3
3 2 bop 523 448 a FG(te)o(xtual)22 b(information)f(of)i(classes)h(and)e
(their)h(links.)g(Our)f(frame)n(w)o(ork)f(allo)n(ws)i(local)g(v)n
(ariables)f(to)523 548 y(be)f(rede\002ned)e(in)h(its)i(scope.)e
(Consequently)-5 b(,)18 b(their)j(states)g(will)g(usually)g(comprise)e
(sequences)h(of)523 648 y(v)n(alues.)k(A)g(v)n(ariable)f(of)h(a)h
(primiti)n(v)o(e)e(type)g(stores)i(a)f(data)g(of)g(the)h(corresponding)
20 b(type)k(whereas)523 747 y(a)30 b(v)n(ariable)e(of)h(an)g(object)g
(type)f(holds)h(the)g(identity)g(or)g(reference)e(of)i(an)h(object)e
(as)i(its)g(v)n(alue.)523 847 y(W)-7 b(e)20 b(de\002ne)f(the)g
(traditional)e(programming)f(constructs,)i(such)h(as)g(conditional,)e
(sequential)h(com-)523 946 y(position,)23 b(and)h(recursion)f(in)i(the)
f(e)o(xactly)g(same)h(w)o(ay)f(as)h(their)g(counterparts)d(in)j(an)f
(imperati)n(v)o(e)523 1046 y(programming)29 b(language)h(without)h
(reference)g(types.)g(This)h(mak)o(es)g(our)f(approach)f(more)i(ac-)523
1146 y(cessible)25 b(to)g(users)g(who)f(are)h(already)f(f)o(amiliar)g
(with)h(the)g(e)o(xisting)f(imperati)n(v)o(e)f(languages.)g(F)o(or)523
1245 y(simplicity)-5 b(,)25 b(unlik)o(e)h([30],)f(we)h(consider)f
(neither)g(attrib)n(ute)h(domain)f(rede\002nition)f(nor)i(attrib)n(ute)
523 1345 y(hiding.)f(This)h(assumption)f(will)h(be)g(incorporated)d
(into)j(the)g(well-formedness)e(condition)g(of)i(a)523
1445 y(declaration)i(section)g(in)i(Section)e(3.)h(W)m(ith)h(this)f
(assumption,)f(the)h(set)h Fu(attr)n Ft(\()p Fv(C)q Ft(\))g
FG(of)f(attrib)n(utes)523 1544 y(of)23 b Fv(C)g FG(contains)f(all)i
(the)e(attrib)n(utes)h(declared)e(in)i Fv(C)h FG(and)e(those)h
(inherited)e(from)h(its)i(superclasses.)523 1644 y(W)-7
b(e)27 b(simplify)f(the)g(model)f(this)i(w)o(ay)f(because)g(our)f
(focus)h(is)h(program)d(requirement)g(speci\002ca-)523
1743 y(tion,)j(design)g(and)g(v)o(eri\002cation,)f(whilst)i(attrib)n
(ute)f(domain)f(rede\002nition)g(and)h(attrib)n(ute)g(hiding)523
1843 y(are)f(languages)e(f)o(acilities)j(for)e(programming)d(around)i
(defects)h(in)h(the)g(requirement)e(speci\002ca-)523
1943 y(tion)h(and)g(design)g(or)g(for)g(the)h(reuse)f(of)h(some)f
(classes)i(that)e(were)h(not)f(originally)f(designed)g(for)523
2042 y(program)18 b(being)h(de)n(v)o(eloped.)648 2142
y(After)e(this)i(introduction,)c(Section)i(2)h(introduces)e(the)i
(syntax)f(of)h(the)g(language.)e(The)h(seman-)523 2242
y(tics)22 b(of)e(the)h(language)e(is)i(gi)n(v)o(en)f(in)g(Section)h(3,)
f(with)h(the)g(discussion)f(about)g(beha)n(vioural)e(re\002ne-)523
2341 y(ment)23 b(of)g(OO)h(designs.)f(In)g(Section)g(4,)g(we)h(present)
f(some)g(initial)h(w)o(ork)e(to)n(w)o(ards)h(a)h(\(structural\))523
2441 y(re\002nement)e(calculus)g(for)h(OO)g(design)f(and)h
(programming.)c(W)-7 b(e)24 b(will)g(dra)o(w)e(some)h(conclusions)523
2540 y(in)d(Section)g(5.)523 2796 y Fx(2)99 b(Syntax)523
2986 y FG(In)22 b(our)g(model,)f(an)h(object)g(system)g(\(or)g
(program\))d Fs(S)28 b FG(is)23 b(of)f(the)g(form)g Fv(cdecls)d
Fr(\017)h Fv(P)o FG(,)j(where)e Fv(cdecls)523 3085 y
FG(is)g(a)g Fv(declar)o(ation)d FG(of)i(a)g(\002nite)h(number)d(of)i
(classes,)h(and)e Fv(P)i FG(is)g(called)f(the)g(main)f(method)g(and)h
(is)h(of)523 3185 y(the)g(form)g Ft(\()p Fu(glb)o Fs(;)14
b(c)p Ft(\))22 b FG(consisting)f(of)g(a)g(\002nite)h(set)g
Fu(glb)f FG(of)g Fv(global)f(variables)h FG(with)h(their)f(types)g(and)
523 3284 y(a)g(command)d Fs(c)p FG(.)i Fv(P)h FG(can)f(be)g(understood)
e(as)i(the)h Fq(main)g FG(method)e(if)i Fs(S)k FG(is)c(tak)o(en)f(as)h
(a)g(Ja)n(v)n(a)f(program.)523 3524 y Fw(2.1)82 b(Class)21
b(declarations)523 3680 y FG(A)28 b(declaration)d Fv(cdecls)i
FG(is)h(of)f(the)g(form:)f Fv(cdecls)36 b Ft(:=)f Fv(cdecl)27
b Fr(j)h Fv(cdecls)o Ft(;)14 b Fv(cdecl)o FG(,)28 b(where)e
Fv(cdecl)h FG(is)h(a)523 3779 y Fv(class)21 b(declar)o(ation)d
FG(of)i(the)g(follo)n(wing)f(form)648 3879 y Fp([)p Fq(private)q
Fp(])h Fq(class)f Fy(N)g Fq(extends)h Fy(M)f FB(f)659
3979 y Fq(private)h Fp(\()p Fo(U)1034 3987 y Fn(i)1078
3979 y Fo(u)1122 3987 y Fn(i)1170 3979 y Fp(=)h Fo(a)1292
3987 y Fn(i)1318 3979 y Fp(\))1348 3987 y Fn(i)p FD(:1)p
Fn(::m)1515 3979 y Fp(;)49 b Fq(protected)20 b Fp(\()p
Fo(V)2031 3987 y Fn(i)2075 3979 y Fo(v)2112 3987 y Fn(i)2160
3979 y Fp(=)h Fo(b)2274 3987 y Fn(i)2301 3979 y Fp(\))2331
3987 y Fn(i)p FD(:1)p Fn(::n)2481 3979 y Fp(;)49 b Fq(public)20
b Fp(\()p Fo(W)2908 3987 y Fn(i)2951 3979 y Fo(w)3006
3987 y Fn(i)3054 3979 y Fp(=)h Fo(c)3168 3987 y Fn(i)3195
3979 y Fp(\))3225 3988 y Fn(i)p FD(:1)p Fn(::k)3371 3979
y Fp(;)660 4078 y Fq(method)119 b Fo(m)1081 4086 y FD(1)1116
4078 y Fp(\()p Fo(T)p 1146 4091 56 4 v 1201 4098 a FD(11)1285
4078 y Fo(x)p 1285 4091 44 4 v 1328 4098 a FD(1)1363
4078 y Fo(;)13 b(T)p 1397 4091 56 4 v 1452 4098 a FD(12)1536
4078 y Fo(y)p 1536 4105 41 4 v 1577 4113 a FD(1)1611
4078 y Fo(;)g(T)p 1645 4091 56 4 v 1701 4098 a FD(13)1784
4078 y Fo(z)p 1784 4091 39 4 v 1823 4098 a FD(1)1858
4078 y Fp(\))p FB(f)p Fo(c)1959 4086 y FD(1)1994 4078
y FB(g)p Fp(;)h FB(\001)f(\001)g(\001)g Fp(;)g Fo(m)2271
4087 y Fn(`)2301 4078 y Fp(\()p Fo(T)p 2331 4091 56 4
v 2386 4098 a Fn(`)p FD(1)2465 4078 y Fo(x)p 2465 4091
44 4 v 20 x Fn(`)2539 4078 y Fo(;)g(T)p 2573 4091 56
4 v 2628 4098 a Fn(`)p FD(2)2707 4078 y Fo(y)p 2707 4105
41 4 v 2748 4113 a Fn(`)2778 4078 y Fo(;)g(T)p 2812 4091
56 4 v 2867 4098 a Fn(`)p FD(3)2947 4078 y Fo(z)p 2947
4091 39 4 v 2986 4098 a Fn(`)3016 4078 y Fp(\))p FB(f)p
Fo(c)3117 4087 y Fn(`)3147 4078 y FB(gg)648 4178 y FG(Note)20
b(that)581 4332 y Fw(\226)41 b FG(A)21 b(class)h(can)e(be)g(declared)f
(as)j Fq(private)g FG(or)e Fq(public)r FG(.)h(By)g(def)o(ault,)e(it)i
(is)h(assumed)e(as)h Fq(public)q FG(.)664 4431 y(W)-7
b(e)19 b(use)e(a)h(function)e Fy(anno)j FG(to)f(e)o(xtract)f(this)h
(information)d(from)h(a)i(class)g(declaration)e(such)h(that)664
4531 y Fy(anno)r Fp(\()p Fy(cdecl)p Fp(\))k FG(is)g Fy(true)g
FG(if)f Fy(cdecl)i FG(declares)e(a)g(pri)n(v)n(ate)f(class)j(and)d
Fy(false)i FG(otherwise.)581 4628 y Fw(\226)41 b Fy(N)21
b FG(and)e Fy(M)i FG(are)g(distinct)f(names)g(of)g(classes,)h(and)e
Fy(M)i FG(is)g(called)f(the)h(direct)e(superclass)h(of)g
Fy(N)p FG(.)581 4725 y Fw(\226)41 b FG(Attrib)n(utes)35
b(annotated)e(with)i Fq(private)h FG(are)f(pri)n(v)n(ate)e(attrib)n
(utes)i(of)f(the)h(class,)g(and)f(simi-)664 4825 y(larly)-5
b(,)17 b(the)g Fq(protected)k FG(and)c Fq(public)i FG(declarations)d
(for)h(the)h(protected)e(and)h(public)g(attrib)n(utes.)664
4924 y(T)-7 b(ypes)20 b(and)g(initial)g(v)n(alues)g(of)g(attrib)n(utes)
g(are)g(also)h(gi)n(v)o(en)e(in)h(the)g(declaration.)p
eop
%%Page: 4 4
4 3 bop 581 448 a Fw(\226)41 b FG(the)20 b Fq(method)i
FG(declaration)c(declares)h(the)h(methods,)f(their)g(v)n(alue)h
(parameters)e(\()p Fo(T)p 2951 461 56 4 v 3006 468 a
Fn(i)p FD(1)3082 448 y Fo(x)p 3082 461 44 4 v 3125 468
a Fn(i)3152 448 y FG(\),)h(result)664 548 y(parameters\()p
Fo(T)p 1058 561 56 4 v 1111 568 a Fn(i)p FD(2)1187 548
y Fo(y)p 1187 575 41 4 v 1227 582 a Fn(i)1254 548 y FG(\),)h(v)n
(alue-result)e(parameters)h(\()p Fo(T)p 2146 561 56 4
v 2201 568 a Fn(i)p FD(3)2276 548 y Fo(z)2312 556 y Fn(i)2339
548 y FG(\))h(and)f(bodies)g(\()p Fo(c)2825 556 y Fn(i)2852
548 y FG(\).)h(W)-7 b(e)21 b(sometimes)664 648 y(denote)d(a)i(method)d
(by)i Fo(m)p Fp(\()p Fy(par)o(as)p 1431 676 170 4 v 1
w Fp(\))p FB(f)p Fo(c)p FB(g)q FG(,)g(where)f Fy(par)o(as)p
2002 676 V 21 w FG(is)i(the)f(list)h(of)f(parameters)f(of)h
Fo(m)g FG(and)g Fo(c)h FG(is)664 747 y(the)g(body)f(command)f(of)i
Fo(m)p FG(.)581 839 y Fw(\226)41 b FG(The)20 b(body)f(of)h(a)g(method)f
Fo(c)1451 847 y Fn(i)1499 839 y FG(is)i(a)f(command)e(that)j(will)g(be)
f(de\002ned)f(later)-5 b(.)523 976 y(W)e(e)34 b(will)g(use)f(Ja)n(v)n
(a)g(con)m(v)o(ention)c(to)k(write)g(a)h(class)f(speci\002cation,)f
(and)g(assume)h(an)g(attrib)n(ute)523 1075 y Fq(protected)22
b FG(when)c(it)i(is)g(not)f(tagged)f(with)h Fq(private)j
FG(or)d Fq(public)q FG(.)g(W)-7 b(e)21 b(ha)n(v)o(e)d(these)i(dif)n
(ferent)d(kinds)523 1175 y(of)i(attrib)n(utes)h(to)f(sho)n(w)g(ho)n(w)g
(visibility)h(issues)g(can)f(be)h(dealt)f(with.)h(W)-7
b(e)20 b(can)g(ha)n(v)o(e)f(dif)n(ferent)e(kind)523 1275
y(of)j(methods)f(too)h(for)f(a)i(class.)523 1494 y Fw(2.2)82
b(Commands)523 1630 y FG(Our)32 b(language)f(supports)h(typical)g
(object-oriented)e(programming)f(constructs,)j(b)n(ut)g(we)h(also)523
1730 y(allo)n(w)20 b(some)g(commands)f(for)g(the)h(purpose)f(of)h
(speci\002cation)f(and)h(re\002nement:)664 1867 y Fo(c)i
Fp(::=)33 b Fy(skip)19 b FB(j)g Fy(c)o(haos)h FB(j)f
Fz(v)o(ar)h Fo(T)29 b FC(x=e)19 b FB(j)g Fz(end)f Fo(x)h
FB(j)g Fo(c)p Fp(;)13 b Fo(c)19 b FB(j)g Fo(c)e Fm(\001)g
Fo(b)g Fm(\003)g Fo(c)i FB(j)g Fo(c)e FB(u)g Fo(c)854
1959 y FB(j)i Fo(b)e FB(\003)h Fo(c)g FB(j)h Fo(l)q(e:m)p
Fp(\()p Fo(e)p 1270 1972 36 4 v(;)13 b(v)p 1340 1972
40 4 v 3 w(;)g(u)p 1414 1972 45 4 v Fp(\))19 b FB(j)g
Fo(l)q(e)i Fp(:=)g Fo(e)p FB(j)e Fy(C.ne)o(w)p Fp(\()p
Fo(x)p Fp(\)[)p Fo(e)p 2119 1972 36 4 v -1 w Fp(])523
2097 y FG(where)h Fo(b)i FG(is)f(a)h(Boolean)e(e)o(xpression,)f
Fs(e)i FG(is)h(an)e(e)o(xpression,)f(and)i Fo(l)q(e)g
FG(is)h(an)e(e)o(xpression)g(which)g(may)523 2197 y(appear)d(on)g(the)h
(left)g(hand)e(side)i(of)g(an)g(assignment)e(and)i(is)g(of)g(the)g
(form)e Fo(l)q(e)21 b Fp(::=)h Fo(x)c FB(j)h Fo(l)q(e:a)g
FG(where)e Fo(x)h FG(is)523 2296 y(a)i(simple)g(v)n(ariable)f(and)g
Fo(a)h FG(an)f(attrib)n(ute)h(of)f(an)h(object.)f(Unlik)o(e)g([30])g
(that)h(introduces)e(\223statement)523 2396 y(e)o(xpressions\224,)24
b(we)i(use)g Fo(l)q(e:m)p Fp(\()p Fo(e)p 1432 2409 V(;)13
b(v)p 1502 2409 40 4 v 3 w(;)g(u)p 1576 2409 45 4 v Fp(\))26
b FG(to)g(denote)f(a)h(call)h(of)e(method)f Fo(m)i FG(of)g(the)g
(object)f(denoted)523 2495 y(by)d(the)g(left-e)o(xpression)e
Fo(l)q(e)j FG(with)g(actual)f(v)n(alue)f(parameters)g
Fo(e)p 2330 2508 36 4 v 23 w FG(for)h(input)f(to)i(the)f(method,)f
(actual)523 2595 y(result)33 b(parameters)e Fo(v)p 1138
2608 40 4 v 36 w FG(for)h(the)g(return)g(v)n(alues,)f(and)h(v)n
(alue-result)f(parameters)g Fo(u)p 2943 2608 45 4 v 34
w FG(that)h(can)h(be)523 2695 y(changed)25 b(during)g(the)i(e)o(x)o
(ecution)d(of)j(the)g(method)e(call)i(and)f(with)h(their)g(\002nal)g(v)
n(alues)f(as)i(return)523 2794 y(v)n(alues)21 b(too;)f(and)h(use)g(the)
g(command)e Fy(C.ne)o(w)p Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p
1964 2807 36 4 v -1 w Fp(])j FG(to)f(create)g(a)h(ne)n(w)f(object)f(of)
h(class)h Fy(C)f FG(with)g(the)523 2894 y(initial)f(v)n(alues)g(of)g
(its)h(attrib)n(utes)f(assigned)g(to)g(the)g(v)n(alues)g(of)g(the)g(e)o
(xpressions)e(in)j Fo(e)p 2934 2907 V 20 w FG(and)f(assign)g(it)523
2994 y(to)g(v)n(ariable)f Fo(x)p FG(.)i(Thus,)e Fy(C.ne)o(w)p
Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 1500 3007 V -1 w Fp(])i
FG(uses)g Fo(x)f FG(with)h(type)e Fy(C)i FG(to)f(store)g(the)h(ne)n
(wly)e(created)h(object.)523 3213 y Fw(2.3)82 b(Expr)o(essions)523
3349 y FG(Expressions,)21 b(which)g(can)h(appear)f(on)h(the)g(right)f
(hand)g(sides)i(of)f(assignments,)f(are)h(constructed)523
3449 y(according)c(to)i(the)h(rules)f(belo)n(w)-5 b(.)664
3585 y Fs(e)23 b Ft(::=)g Fs(x)e Fr(j)g Fv(null)f Fr(j)g
Fv(self)h Fr(j)g Fs(e:a)g Fr(j)f Fs(e)35 b Fu(is)f Fv(C)21
b Fr(j)f Ft(\()p Fv(C)q Ft(\))p Fs(e)h Fr(j)g Fs(f)9
b Ft(\()p Fs(e)p Ft(\))523 3722 y FG(where)22 b Fv(null)g
FG(represents)g(the)g(special)h(object)f(of)g(the)g(special)h(class)g
Fv(NULL)h FG(that)f(is)g(a)g(subclass)g(of)523 3821 y(all)e(classes)g
(and)e(has)i Fv(null)f FG(as)g(its)i(unique)c(object,)h
Fv(self)i FG(will)g(be)f(used)g(to)g(denote)f(the)h(acti)n(v)o(e)g
(object)523 3921 y(in)g(the)f(current)f(scope)h(\(some)g(people)f(use)h
Fu(this)o FG(\),)g Fs(e:a)g FG(is)i(the)e Fs(a)p FG(-attrib)n(ute)g(of)
g Fs(e)p FG(,)g Ft(\()p Fv(C)q Ft(\))p Fs(e)g FG(is)i(the)e(type)523
4021 y(casting,)h Fs(e)g Fw(is)h Fv(C)i FG(is)e(the)g(type)e(test.)523
4257 y Fx(3)99 b(Semantics)523 4426 y FG(W)-7 b(e)28
b(no)n(w)e(sho)n(w)g(ho)n(w)g(to)g(use)h(the)g(basic)f(model)g(of)g
(the)h(UTP)f(to)h(de\002ne)f(the)h(semantics)f(of)g(our)523
4526 y(language.)e(W)-7 b(e)27 b(will)f(adopt)f(the)h(con)m(v)o(ention)
d(that)j(the)g(semantics)g Ft([)-14 b([)p Fr(E)7 b Ft(])-14
b(])27 b FG(of)e(an)h(element)f Fr(E)7 b FG(,)27 b(such)523
4625 y(as)i Fs(e)660 4637 y FF(1)734 4625 y Ft(=)37 b
Fs(e)875 4637 y FF(2)940 4625 y FG(or)27 b Fs(x)38 b
Ft(:=)f Fs(e)p FG(,)28 b(of)f(the)h(language)e(is)j(denoted)d(by)i
Fr(E)36 b FG(itself)28 b(in)g(a)g(semantic)g(de\002ning)523
4725 y(equation.)19 b(When)h Fr(E)28 b FG(appears)20
b(on)g(the)g(left)h(hand)e(side)i(of)f(a)h(de\002ning)e(equation,)g(it)
i(means)f(that)g(its)523 4825 y(semantics)f(is)h(de\002ned)d(as)j(the)f
(right)f(hand)g(side)h(of)g(the)f(equation.)g(When)g
Fr(E)27 b FG(appears)18 b(on)g(the)h(right)523 4924 y(hand)g(side,)h
(it)h(denotes)f(its)h Fv(de\002ned)d FG(semantics)j(of)f
Fr(E)7 b FG(.)p eop
%%Page: 5 5
5 4 bop 523 448 a Fw(3.1)82 b(Pr)o(ograms)19 b(ar)o(e)g(designs)523
583 y FG(In)j([18],)f(Hoare)h(and)g(He)g(proposed)f(a)h(state-based)g
(model)g(in)g(which)g(a)h(program)d(or)i(a)h(program)523
674 y(command)18 b(is)i(identi\002ed)f(as)h(a)g Fv(design)p
FG(,)f(represented)e(by)i(a)h(pair)g Fp(\()p Fo(\013;)13
b Fy(P)o Fp(\))p FG(,)20 b(where)f Fo(\013)h FG(denotes)f(the)h(set)523
765 y(of)g(v)n(ariables)f(of)h(the)g(program,)e(and)i
Fy(P)g FG(is)h(a)g(predicate)e(of)h(the)g(form)664 900
y Fo(p)p Fp(\()p Fo(x)p Fp(\))g FB(`)i Fy(R)o Fp(\()p
Fo(x;)13 b(x)1093 864 y Fl(0)1115 900 y Fp(\))21 b(=)1226
914 y Fk(df)1296 900 y Fp(\()p Fo(ok)f FB(^)d Fo(p)p
Fp(\()p Fo(x)p Fp(\)\))j FB(\))h Fp(\()p Fo(ok)1891 864
y Fl(0)1931 900 y FB(^)c Fy(R)p Fp(\()p Fo(x;)12 b(x)2196
864 y Fl(0)2218 900 y Fp(\)\))648 1042 y FG(Notice)20
b(that)581 1179 y Fw(\226)41 b FG(we)19 b(call)f Fo(\013)i
FG(the)e Fv(alphabet)e FG(of)i(the)g(design)g(and)g Fy(P)g
FG(the)g Fv(contr)o(act)g FG(of)g(the)g(design;)g Fo(\013)h
FG(declares)e(the)664 1278 y Fv(variables)22 b FG(\(including)d
(logical)j(ones\))f(whose)h Fv(values)f FG(form)g(the)h
Fv(state)g FG(of)g(the)g(program)e(at)i(a)664 1378 y(moment)h(of)g
(time,)h(and)f(the)h(contract)f(speci\002es)h(the)g Fv(behaviour)e
FG(of)i(the)g(program)d(in)j(terms)664 1478 y(of)c(what)g(change)f(in)h
(the)h(state)g(it)g(may)e(mak)o(e.)581 1571 y Fw(\226)41
b Fo(x)25 b FG(and)f Fo(x)922 1540 y Fl(0)969 1571 y
FG(stand)g(for)g(the)g(initial)h(and)f(\002nal)h(v)n(alues)f(of)g
(program)e(v)n(ariables)i Fo(x)h FG(in)f Fo(\013)p FG(,)h(respec-)664
1671 y(ti)n(v)o(ely)-5 b(.)581 1765 y Fw(\226)41 b FG(predicate)23
b Fo(p)p FG(,)i(called)f(the)h Fv(pr)m(econdition)d FG(of)i(the)g
(program,)e(characterises)i(the)h(initial)f(states)664
1864 y(in)d(which)e(the)h(acti)n(v)n(ation)f(of)h(the)h(program)d(will)
j(lead)f(its)h(e)o(x)o(ecution)d(to)i(termination.)581
1958 y Fw(\226)41 b FG(predicate)18 b Fy(R)o FG(,)h(called)g(the)g
Fv(post-condition)d FG(of)i(the)h(program,)d(relates)j(the)g(initial)g
(states)h(of)e(the)664 2058 y(program)g(to)j(its)g(\002nal)f(states,)h
(and)581 2152 y Fw(\226)41 b FG(we)27 b(describe)f(the)h(termination)e
(beha)n(viour)g(of)h(a)h(program)e(by)h(the)h(Boolean)f(v)n(ariables)g
Fo(ok)664 2251 y FG(and)c Fo(ok)886 2219 y Fl(0)909 2251
y FG(,)h(where)f(the)h(former)e(is)j(true)e(if)h(the)g(program)d(is)k
(properly)d(acti)n(v)n(ated)h(and)g(the)g(later)664 2351
y(becomes)d(true)h(if)h(the)f(e)o(x)o(ecution)e(of)i(the)g(program)e
(terminates)i(successfully)-5 b(.)523 2493 y(In)26 b(what)g(follo)n
(ws,)g(we)g(gi)n(v)o(e)f(formal)g(de\002nitions)h(of)g(sequential)f
(composition)f(of)i(designs)g(and)523 2593 y(design)20
b(re\002nement.)523 2719 y Fw(De\002nition)g(1.)41 b
Fv(F)-9 b(or)20 b(a)g(given)f(alphabet)f Fo(\013)i Fv(and)f(two)h
(contr)o(acts)f Fy(P)2435 2727 y FD(1)2490 2719 y Fv(and)g
Fy(P)2680 2727 y FD(2)2715 2719 y Fv(,)h(the)f(sequential)g(com-)523
2810 y(position)g Fy(P)857 2818 y FD(1)892 2810 y Fp(;)13
b Fy(P)971 2818 y FD(2)1027 2810 y Fv(is)21 b(de\002ned)d(as)j(the)f(r)
m(elation)g(composition)664 2936 y Fp(\()p Fy(P)740 2944
y FD(1)774 2936 y Fp(\()p Fo(x;)13 b(x)926 2900 y Fl(0)948
2936 y Fp(\);)g Fy(P)1057 2944 y FD(2)1092 2936 y Fp(\()p
Fo(x;)f(x)1243 2900 y Fl(0)1265 2936 y Fp(\)\))21 b(=)1406
2950 y Fk(df)1477 2936 y FB(9)p Fo(m)16 b FB(\001)i Fy(P)1688
2944 y FD(1)1723 2936 y Fp(\()p Fo(x;)12 b(m)p Fp(\))17
b FB(^)g Fy(P)2059 2944 y FD(2)2094 2936 y Fp(\()p Fo(m;)12
b(x)2269 2900 y Fl(0)2291 2936 y Fp(\))648 3071 y Fv(W)-8
b(e)21 b(also)f(de\002ne)f(the)h(composite)f(design)h
Fp(\()p Fo(\013;)13 b Fy(P)2021 3079 y FD(1)2056 3071
y Fp(\);)g(\()p Fo(\013;)g Fy(P)2278 3079 y FD(2)2313
3071 y Fp(\))21 b Fv(by)f Fp(\()p Fo(\013;)13 b Fy(P)2622
3079 y FD(1)2656 3071 y Fp(;)g Fy(P)2736 3079 y FD(2)2771
3071 y Fp(\))p Fv(.)523 3205 y FG(W)m(ithin)20 b(this)h(model,)e(the)h
(concept)f(of)h(re\002nement)f(is)i(de\002ned)e(as)i(predicate)e
(implication.)523 3339 y Fw(De\002nition)h(2.)41 b Fv(\()p
Fw(Design)20 b(r)o(e\002nement)p Fv(\))g(Design)g Fy(D)2026
3347 y FD(2)2082 3339 y Fp(=)2142 3353 y Fk(df)2212 3339
y Fp(\()p Fo(\013;)14 b Fy(P)2371 3347 y FD(2)2406 3339
y Fp(\))20 b Fv(is)i(a)e FG(re\002nement)f Fv(of)h(design)523
3439 y Fy(D)577 3447 y FD(1)633 3439 y Fp(=)693 3453
y Fk(df)763 3439 y Fp(\()p Fo(\013;)14 b Fy(P)922 3447
y FD(1)957 3439 y Fp(\))p Fv(,)24 b(denoted)e(by)i Fy(D)1476
3447 y FD(1)1532 3439 y FB(v)d Fy(D)1667 3447 y FD(2)1702
3439 y Fv(,)j(if)h FB(8)p Fo(x;)12 b(x)1982 3407 y Fl(0)2017
3439 y Fo(:)h(:)g(:)g(;)g(z)s(;)g(z)2265 3407 y Fl(0)2307
3439 y FB(\001)20 b Fp(\()p Fy(P)2424 3447 y FD(2)2486
3439 y FB(\))27 b Fy(P)2636 3447 y FD(1)2671 3439 y Fp(\))p
Fo(;)73 b Fv(wher)m(e)25 b Fo(x;)12 b(:)h(:)h(:)f(;)g(z)27
b Fv(ar)m(e)523 3538 y(variables)20 b(contained)e(in)i
Fo(\013)p Fv(.)h Fy(D)1431 3546 y FD(1)1487 3538 y FB(\021)g
Fy(D)1622 3546 y FD(2)1677 3538 y Fv(if)g(and)f(only)f(if)i
Fy(D)2174 3546 y FD(1)2230 3538 y FB(v)g Fy(D)2365 3546
y FD(2)2420 3538 y Fv(and)f Fy(D)2620 3546 y FD(2)2676
3538 y FB(v)h Fy(D)2811 3546 y FD(1)2845 3538 y Fv(.)523
3683 y Fw(De\002nition)f(3.)41 b Fv(\()p Fw(Data)25 b(r)o(e\002nement)p
Fv(\))g(Let)i Fo(\032)f Fv(be)g(a)g(mapping)e(\(that)h(can)g(also)h(be)
g(speci\002ed)f(as)h(a)523 3783 y(design\))21 b(fr)l(om)h
Fo(\013)1014 3791 y FD(2)1071 3783 y Fv(to)g Fo(\013)1207
3791 y FD(1)1242 3783 y Fv(.)g(Design)f Fy(D)1596 3791
y FD(2)1652 3783 y Fp(=)1712 3797 y Fk(df)1782 3783 y
Fp(\()p Fo(\013)1861 3791 y FD(2)1896 3783 y Fo(;)13
b Fy(P)1976 3791 y FD(2)2010 3783 y Fp(\))22 b Fv(is)h(a)f
FG(re\002nement)e Fv(of)i(design)f Fy(D)2961 3791 y FD(1)3017
3783 y Fp(=)3077 3797 y Fk(df)3147 3783 y Fp(\()p Fo(\013)3226
3791 y FD(1)3261 3783 y Fo(;)13 b Fy(P)3340 3791 y FD(1)3375
3783 y Fp(\))523 3883 y Fv(under)19 b Fo(\032)p Fv(,)i(denoted)d(by)i
Fy(D)1255 3891 y FD(1)1311 3883 y FB(v)1371 3891 y Fn(\032)1428
3883 y Fy(D)1482 3891 y FD(2)1517 3883 y Fv(,)g(if)h
Ft(\()p Fs(\032)p Ft(;)14 b Fv(P)1788 3895 y FF(1)1825
3883 y Ft(\))24 b Fr(v)e Ft(\()p Fv(P)2051 3895 y FF(2)2088
3883 y Ft(;)14 b Fs(\032)p Ft(\))p Fs(:)648 4028 y FG(A)19
b(program)f(command)f(usually)h(modi\002es)h(a)h(subset)f(of)g(the)h
(program)d(v)n(ariables)h(in)i Fo(\013)p FG(.)g(Let)f
Fy(V)523 4127 y FG(be)h(a)g(subset)g(of)f Fo(\013)i FG(,)f(the)f
(notation)g Fy(V)i Fp(:)g(\()p Fo(p)g FB(`)g Fy(R)p Fp(\))f
FG(denotes)f(the)h(\()p Fv(fr)o(amed)p FG(\))e(design)h
Fo(p)i FB(`)h Fp(\()p Fy(R)16 b FB(^)h Fo(w)p 3115 4140
58 4 v 3172 4096 a Fl(0)3216 4127 y Fp(=)k Fo(w)p 3297
4140 V 2 w Fp(\))p FG(,)523 4227 y(where)j Fo(w)p 751
4240 V 28 w FG(contains)g(all)i(v)n(ariables)e(in)h Fo(\013)g
FG(b)n(ut)g(those)g(in)g Fy(V)p FG(.)g Fy(V)g FG(is)h(called)f(the)g
(frame)f(of)g(the)h(design)523 4327 y Fo(p)c FB(`)g Fy(R)p
FG(.)e(In)g(e)o(xamples,)f(we)i(often)e(omit)h(the)h(frames)e(of)h
(designs)g(by)g(assuming)g(that)g(a)h(design)e(only)523
4426 y(changes)h(the)h(v)n(alue)g(of)g(a)g(v)n(ariable)g
Fo(x)g FG(if)g(its)i(primed)c(v)o(ersion)h Fo(x)2364
4394 y Fl(0)2407 4426 y FG(occurs)g(in)i(the)f(design.)648
4526 y(F)o(or)31 b(simplicity)-5 b(,)30 b(the)i(abo)o(v)o(e)e(model)h
(in)g([18])g(adopts)g(a)h(uni)n(v)o(ersal)e(data)h(type)g(and)g(allo)n
(ws)523 4625 y(neither)24 b(reference)e(types)i(nor)g(nested)g
(declaration.)f(This)h(assumption)f(will)i(not)f(be)h(applicable)523
4725 y(to)g(modelling)e(OO)h(designs)h(an)o(ymore.)d(Ho)n(we)n(v)o(er)m
(,)g(we)j(can)f(still)i(follo)n(w)e(this)h(classical)g(w)o(ay)g(of)523
4825 y(de\002ning)18 b(a)i(state-based)e(model)h(for)f(a)i(programming)
c(language)i(and)g(de\002ne)h(our)g(OOL)g(in)g(terms)523
4924 y(of)h Fv(values,)g(variables,)f(states,)i(e)n(xpr)m(essions,)f
(commands,)e(declar)o(ations)h(and)g(pr)l(o)o(gr)o(ams)p
FG(.)p eop
%%Page: 6 6
6 5 bop 523 448 a Fw(3.2)82 b(V)-8 b(alues,)21 b(Objects,)e(V)-8
b(ariables)21 b(and)f(States)523 608 y FG(Each)25 b(program)d(declares)
j(a)g(set)h Fq(cname)g FG(of)f(class)h(names,)e(a)i(partial)e(function)
g Fq(superclass)j FG(that)523 708 y(maps)i(a)g(class)g(name)f(in)h
Fq(cname)i FG(to)e(its)g Fv(dir)m(ect)g(super)m(class)p
FG(,)58 b(a)29 b(function)e Fq(attr)j FG(that)f(associates)523
807 y(each)21 b(class)h(name)f Fy(C)g FB(2)h Fq(cname)h
FG(with)e(the)h(set)g Fq(attr)q Fp(\()p Fy(C)p Fp(\))f
FG(of)g(its)i(attrib)n(utes,)e(and)g(a)g(function)f Fq(op)i
FG(that)523 907 y(associates)c(each)g Fy(C)j FB(2)g Fq(cname)f
FG(the)e(set)g Fq(op)q Fp(\()p Fy(C)o Fp(\))g FG(of)g(its)h(methods.)d
(W)-7 b(e)19 b(use)f FB(\026)g FG(to)g(denote)e(the)i(re\003e)o(xi)n(v)
o(e)523 1007 y(and)i(transiti)n(v)o(e)f(closure)h(of)g
Fq(superclass)j FG(and)c Fy(C)1944 1015 y FD(1)2000 1007
y FB(\026)i Fy(C)2131 1015 y FD(2)2186 1007 y FG(denotes)f(that)g
Fy(C)2656 1015 y FD(1)2711 1007 y FG(is)h(a)g(subclass)f(of)g
Fy(C)3282 1015 y FD(2)3317 1007 y FG(.)648 1106 y(W)-7
b(e)21 b(assume)g(a)g(set)g FB(T)41 b FG(of)20 b Fv(primitive)h(types)g
FG(and)f(an)g(in\002nite)h(set)g Fy(REF)f FG(of)g Fv(object)h
(identities)f FG(\(or)523 1206 y Fv(r)m(efer)m(ences)p
FG(\),)k(and)f Fy(null)f FB(2)f Fy(REF)o FG(.)j(A)h(v)n(alue)e(is)i
(either)e(a)i(member)d(of)i(a)g(primiti)n(v)o(e)f(type)g(in)h
FB(T)44 b FG(or)24 b(an)523 1305 y(object)i(identity)g(in)g
Fy(REF)o FG(.)h(Let)f(the)h(set)g(of)f(v)n(alues)g(be)h
Fy(V)l(AL)19 b Fp(=)2343 1319 y Fk(df)2414 1249 y Fj(S)2491
1305 y FB(T)36 b([)17 b Fy(REF)o FG(.)27 b(An)f Fv(object)g
Fo(o)h FG(is)h(an)523 1405 y(entity)22 b(de\002ned)f(by)h(the)g(follo)n
(wing)f(structure)g Fo(o)h Fp(::=)f Fy(null)h FB(j)g(h)p
Fy(r)m(ef)p Fo(;)13 b Fq(type)q Fo(;)g Fi(state)p FB(i)p
FG(,)22 b(where)g Fy(r)m(ef)g FB(2)f Fy(REF)o FG(,)523
1505 y(and)26 b Fq(type)h FG(is)g(a)f(class)h(name,)f(and)f
Fq(state)j FG(is)f(a)f(mapping)e(from)h Fq(attr)q Fp(\()p
Fq(type)q Fp(\))h FG(to)h Fy(V)l(AL)n FG(.)f(Gi)n(v)o(en)g(an)523
1604 y(object)d Fo(o)f Fp(=)f FB(h)p Fy(r)m(ef)p Fo(;)13
b Fy(C)p Fo(;)g(\033)s FB(i)o FG(,)24 b(we)g(use)g Fy(identity)p
Fp(\()p Fo(o)p Fp(\))g FG(to)g(denote)f(the)g(identity)g
Fy(r)m(ef)i FG(of)e Fo(o)p FG(,)h Fq(type)q Fp(\()p Fo(o)p
Fp(\))g FG(the)g(type)523 1704 y Fy(C)d FG(of)f(the)g(object)f
Fo(o)p FG(,)i(and)f Fq(state)q Fp(\()p Fo(o)p Fp(\)\()p
Fo(a)p Fp(\))g FG(the)g(v)n(alue)g Fo(\033)s Fp(\()p
Fo(a)p Fp(\))f FG(of)h(an)g(attrib)n(ute)g Fo(a)h FG(of)f(class)h
Fy(C)p FG(.)648 1804 y(Let)31 b FB(O)k FG(be)c(the)h(set)g(of)g(all)g
(objects,)f(including)f Fy(null)p FG(.)i(Notice)g(that)f(in\002nite)h
(recursi)n(v)o(e)e(and)523 1903 y(looping)18 b(constructions)g(are)i
(allo)n(wed,)e(such)i(as)g FB(h)p Fo(r)2010 1911 y Fn(i)2036
1903 y Fo(;)13 b Fy(C)p Fo(;)g(\033)2198 1911 y Fn(i)2224
1903 y FB(i)21 b FG(such)e(that)h Fo(\033)2636 1911 y
Fn(i)2662 1903 y Fp(\()p Fo(a)p Fp(\))h(=)g Fo(r)2900
1911 y Fn(i)2926 1903 y FG(,)f(where)f Fo(a)h FG(is)h(an)523
2003 y(attrib)n(ute)f(of)g Fy(C)g FG(that)h(is)g(type)e(of)h
Fy(C)h FG(too.)648 2102 y(The)e(follo)n(wing)g(notations)g(will)i(be)f
(emplo)o(yed)f(in)h(the)g(semantics)g(de\002nitions.)581
2261 y Fw(\226)41 b FG(Gi)n(v)o(en)15 b(a)g(non-empty)e(sequence)h
Fo(s)p 1628 2274 36 4 v 21 w Fp(=)21 b FB(h)p Fo(s)1832
2269 y FD(1)1866 2261 y Fo(;)13 b(::;)h(s)2013 2270 y
Fn(k)2051 2261 y FB(i)p FG(,)h(we)h(ha)n(v)o(e)f Fy(head)q
Fp(\()p Fo(s)p 2575 2274 V -1 w Fp(\))22 b(=)f Fo(s)2779
2269 y FD(1)2813 2261 y FG(,)16 b Fy(tail)o Fp(\()p Fo(s)p
2979 2274 V Fp(\))21 b(=)g FB(h)p Fo(s)3213 2269 y FD(2)3247
2261 y Fo(;)13 b(::;)h(s)3394 2270 y Fn(k)3432 2261 y
FB(i)p FG(.)664 2360 y(W)-7 b(e)22 b(use)e FB(j)p Fo(s)p
946 2373 V FB(j)h FG(to)f(denote)g(the)g(length)f(of)h
Fo(s)p FG(,)g(and)g Fo(\031)2054 2368 y Fn(i)2080 2360
y Fp(\()p Fo(s)p 2110 2373 V Fp(\))g FG(the)h Fo(ith)g
FG(element)e Fo(s)2757 2368 y Fn(i)2783 2360 y FG(,)i(for)e
Fo(i)j Fp(:)g(1)p Fo(;)13 b(::;)h(k)r FG(.)581 2458 y
Fw(\226)41 b FG(F)o(or)21 b(tw)o(o)g(sets)g Fo(S)26 b
FG(and)20 b Fo(S)1351 2466 y FD(1)1386 2458 y FG(,)h
Fo(S)1475 2466 y FD(1)1526 2458 y Fm(\004)c Fo(S)26 b
FG(is)21 b(the)g(set)h(obtained)d(by)h(remo)o(ving)e(elements)j(in)g
Fo(S)3188 2466 y FD(1)3244 2458 y FG(from)664 2558 y
Fo(S)t FG(.)g(Note)f(that)g Fm(\004)h FG(has)f(higher)f(associati)n
(vity)h(than)g(normal)f(set)i(operators)d(lik)o(e)j FB([)p
FG(,)f FB(\\)q FG(.)581 2648 y Fw(\226)41 b FG(F)o(or)20
b(a)h(mapping)d Fo(F)32 b Fp(:)22 b Fy(D)f FB(\000)-13
b(!)21 b Fy(E)p FG(,)41 b Fo(d)21 b FB(2)h Fy(D)e FG(and)g
Fo(r)j FB(2)f Fy(E)o FG(,)805 2841 y Fo(F)28 b FB(\010)17
b(f)p Fo(d)k FB(7!)h Fo(r)r FB(g)f Fp(=)1313 2855 y Fk(df)1383
2841 y Fo(F)1443 2805 y Fl(0)1615 2841 y FC(where)e Fo(F)1876
2805 y Fl(0)1898 2841 y Fp(\()p Fo(b)p Fp(\))i(=)2072
2855 y Fk(df)2143 2758 y Fj(n)2205 2795 y Fo(r)n(;)32
b FC(if)18 b Fo(b)j Fp(=)g Fo(d)p Fp(;)2205 2886 y Fo(F)11
b Fp(\()p Fo(b)p Fp(\))p Fo(;)32 b FC(if)18 b Fo(b)j
FB(2)h(f)p Fo(d)p FB(g)17 b Fm(\004)g Fy(D)p Fo(:)581
3037 y Fw(\226)41 b FG(F)o(or)20 b(an)g(object)g Fo(o)h
Fp(=)g FB(h)p Fy(r)m(ef)p Fo(;)14 b Fy(C)o Fo(;)g(\033)s
FB(i)o FG(,)21 b(an)f(attrib)n(ute)f Fo(a)i FG(of)f Fy(C)g
FG(and)g(a)h(v)n(alue)e Fo(d)p FG(,)805 3185 y Fy(r)m(ef)f
FB(\010)e(f)p Fo(a)22 b FB(7!)f Fo(d)p FB(g)g Fp(=)1337
3199 y Fk(df)1408 3185 y FB(h)p Fy(r)m(ef)p Fo(;)13 b
Fy(C)p Fo(;)g(\033)20 b FB(\010)d(f)p Fo(a)k FB(7!)g
Fo(d)p FB(gi)581 3335 y Fw(\226)41 b FG(F)o(or)20 b(a)h(set)g
Fo(S)k FB(\022)c(O)i FG(of)d(objects,)746 3482 y Fo(S)h
FB(])d(fh)p Fy(r)m(ef)p Fo(;)13 b Fy(C)p Fo(;)g(\033)s
FB(ig)21 b Fp(=)1345 3496 y Fk(df)1416 3482 y FB(f)p
Fo(o)e FB(j)g Fy(identity)p Fp(\()p Fo(o)p Fp(\))i(=)g
Fy(r)m(ef)q FB(g)c Fm(\004)g Fo(S)40 b FB([)c(fh)p Fy(r)m(ef)p
Fo(;)13 b Fy(C)p Fo(;)g(\033)s FB(ig)746 3574 y Fy(Ref)p
Fp(\()p Fo(S)t Fp(\))21 b(=)1038 3588 y Fk(df)1108 3574
y FB(f)p Fy(r)m(ef)f FB(j)f Fy(r)m(ef)g FC(is)f(the)h(identity)g(of)g
(an)g(object)h(in)e Fo(S)5 b FB(g)648 3725 y FG(Our)26
b(model)g(describes)g(the)h(beha)n(viour)e(of)i(an)f(OO)i(program)c(as)
k(a)f Fv(design)g FG(containing)d(the)523 3824 y(logical)g(v)n
(ariables)g(gi)n(v)o(en)f(in)h(Fig)h(1)g(as)g(its)g Fv(fr)m(ee)g
(variables)f FG(that)h(form)e(the)i(alphabet)e(of)h(the)h(pro-)523
3924 y(gram.)648 4024 y(The)14 b(semantic)h(model)g(will)h(ensure)e
(that)h(for)g(an)o(y)f Fs(o)2131 4036 y FF(1)2185 4024
y FG(and)g Fs(o)2360 4036 y FF(2)2414 4024 y FG(in)h
Fs(\006)5 b FG(,)15 b Fv(identity)o Ft(\()p Fs(o)2921
4036 y FF(1)2959 4024 y Ft(\))23 b(=)g Fv(identity)o
Ft(\()p Fs(o)3423 4036 y FF(2)3461 4024 y Ft(\))523 4123
y FG(implies)30 b Fu(type)o Ft(\()p Fs(o)1045 4135 y
FF(1)1082 4123 y Ft(\))42 b(=)f Fu(type)n Ft(\()p Fs(o)1508
4135 y FF(2)1546 4123 y Ft(\))31 b FG(and)f Fu(state)n
Ft(\()p Fs(o)2050 4135 y FF(1)2088 4123 y Ft(\))41 b(=)g
Fu(state)n Ft(\()p Fs(o)2557 4135 y FF(2)2595 4123 y
Ft(\))p FG(.)31 b(W)-7 b(e)31 b(therefore)d(can)i(use)523
4223 y(identity)j(of)g(an)g(object)g(to)h(refer)e(to)i(an)f(object)g
(in)h Fs(\006)5 b FG(.)33 b(In)g(the)g(rest)h(of)f(the)h(paper)m(,)e
(an)h(object)523 4323 y Fs(o)23 b Ft(=)g Fr(h)p Fv(r)m(ef)p
Fs(;)14 b Fv(C)q Fs(;)g(\033)s Fr(i)21 b FG(means)e(one)g(in)h
Fs(\006)25 b FG(if)20 b(there)f(is)i(no)e(confusion,)f(and)h(will)i
(use)f Fv(r)m(ef)p Fs(:a)g FG(to)g(denote)e(the)523 4422
y(v)n(alue)i(of)f Fu(state)n Ft(\()p Fs(o)p Ft(\)\()p
Fs(a)p Ft(\))p FG(,)j(and)e Fu(type)n Ft(\()p Fv(r)m(ef)q
Ft(\))h FG(to)f(denote)f Fu(type)n Ft(\()p Fs(o)p Ft(\))j
FG(\(i.e.)e Fv(C)p FG(\).)523 4665 y Fw(3.3)82 b(Ev)o(aluation)19
b(of)h(expr)o(essions)523 4825 y FG(The)29 b(e)n(v)n(aluation)e(of)i
(an)g(e)o(xpression)e Fo(e)i FG(determines)f(its)i(type)e
Fq(type)q Fp(\()p Fo(e)p Fp(\))h FG(and)g(its)h(v)n(alue)e(that)h(is)h
(a)523 4924 y(member)d(of)i Fq(type)q Fp(\()p Fo(e)p
Fp(\))f FG(if)h(this)g(type)g(is)g(primiti)n(v)o(e,)e(and)h(an)h
(object)f(of)h(the)f(current)g(type)g(that)h(is)p eop
%%Page: 7 7
7 6 bop 523 500 2919 4 v 521 592 4 92 v 602 564 a Fy(variable)p
928 592 V 306 w(r)m(epr)m(esentation)p 1810 592 V 874
w(description)p 3439 592 V 523 595 2919 4 v 521 686 4
92 v 614 659 a FA(cname)p 928 686 V 1810 686 V 1308 w
FC(the)19 b(set)g(of)g(classes)g(declared)h(so)f(f)o(ar)p
3439 686 V 523 690 2919 4 v 521 781 4 92 v 547 754 a
FA(pricname)p 928 781 V 1810 781 V 1284 w FC(the)g(set)g(of)g(pri)n(v)n
(ate)g(class)g(names)p 3439 781 V 523 784 2919 4 v 521
1492 4 708 v 587 1157 a FA(attr)p FC(\()p Fy(C)o FC(\))p
928 1492 V 234 w FB(fh)p Fo(a)1209 1165 y Fn(i)1256 1157
y Fp(:)j Fo(T)1344 1165 y Fn(i)1370 1157 y Fo(;)13 b(d)1444
1165 y Fn(i)1470 1157 y FB(ig)1538 1125 y Fn(m)1538 1171
y(i)p FD(=1)p 1810 1492 V 1823 836 a Fo(T)1868 844 y
Fn(i)1924 836 y FC(and)31 b Fo(d)2102 844 y Fn(i)2158
836 y FC(are)f(the)g(type)g(and)h(initial)e(v)n(alue)i(of)f(attrib)o
(ute)1823 928 y Fo(a)1864 936 y Fn(i)1890 928 y FC(,)42
b(and)h(will)f(be)g(referred)h(by)g Fq(decltype)q Fp(\()p
Fy(C)p Fo(:a)3223 936 y Fn(i)3250 928 y Fp(\))f FC(and)1823
1019 y Fq(initial)r Fp(\()p Fy(C)o Fo(:a)2239 1027 y
Fn(i)2266 1019 y Fp(\))21 b FC(respecti)n(v)o(ely)-5
b(.)23 b(W)-6 b(e)21 b(also)i(ab)o(use)f(the)g(nota-)1823
1110 y(tion)j Fo(a)33 b FB(2)g Fq(attr)p Fp(\()p Fy(C)p
Fp(\))25 b FC(and)g(use)h(it)e(to)h(denote)h FB(9)p Fo(T)6
b(;)13 b(d)21 b FB(\001)h Fp(\()p FB(h)p Fo(a)32 b Fp(:)1823
1202 y Fo(T)6 b(;)13 b(d)p FB(i)33 b(2)g Fq(attr)q Fp(\()p
Fy(C)p Fp(\)\))p FC(.)24 b(Again,)h(we)g(do)h(not)f(allo)n(w)g(attrib)o
(ute)1823 1293 y(hiding)g(\(or)e(rede\002nition\))h(in)g(a)f(subclass.)
i(W)-6 b(e)23 b(also)h(use)g(an)1823 1384 y(attrib)o(ute)e(name)i(to)e
(represent)i(its)e(v)n(alue)h(and)h(a)e(type)i(name)1823
1476 y(to)19 b(denote)h(the)f(set)g(of)f(its)h(le)o(gal)f(v)n(alues.)p
3439 1492 V 523 1495 2919 4 v 521 2316 4 822 v 632 1924
a FA(op)p FC(\()p Fy(C)o FC(\))p 928 2316 V 953 1781
a Fh(f)p FE(m)1046 1789 y Fg(1)1078 1781 y Fh(7!)953
1847 y FF(\()p FE(x)p 979 1858 38 3 v 18 x Fg(1)1049
1847 y FF(:)p Fk(T)p 1068 1858 33 3 v 18 x Fg(11)1161
1847 y FE(;)11 b(y)p 1192 1870 36 3 v 1228 1877 a Fg(1)1260
1847 y FF(:)p Fk(T)p 1279 1858 33 3 v 18 x Fg(12)1372
1847 y FE(;)g(z)p 1403 1858 35 3 v 1437 1865 a Fg(1)1469
1847 y FF(:)p Fk(T)p 1488 1858 33 3 v 18 x Fg(13)1581
1847 y FE(;)g Fk(D)1654 1855 y Fg(1)1687 1847 y FF(\))p
FE(;)953 1923 y(:::;)953 1989 y(m)1012 1998 y Ff(k)1048
1989 y Fh(7!)953 2056 y FF(\()p FE(x)p 979 2067 38 3
v 18 x Ff(k)1053 2056 y FF(:)p Fk(T)p 1072 2067 33 3
v 18 x Ff(k)q Fg(1)1169 2056 y FE(;)g(y)p 1200 2078 36
3 v 1235 2085 a Ff(k)1272 2056 y FF(:)p Fk(T)p 1291 2067
33 3 v 18 x Ff(k)q Fg(2)1387 2056 y FE(;)g(z)p 1418 2067
35 3 v 1453 2074 a Ff(k)1489 2056 y FF(:)p Fk(T)p 1508
2067 33 3 v 18 x Ff(k)q Fg(3)1604 2056 y FE(;)h Fk(D)1678
2065 y Ff(k)1714 2056 y FF(\))p Fh(g)p 1810 2316 4 822
v 1823 1546 a FC(each)67 b(method)f Fo(m)2383 1554 y
Fn(i)2475 1546 y FC(has)g Fo(x)p 2640 1559 44 4 v 20
x Fn(i)2710 1546 y FC(,)f Fo(y)p 2794 1573 41 4 v 2835
1580 a Fn(i)2927 1546 y FC(and)h Fo(z)p 3100 1559 39
4 v 3139 1566 a Fn(i)3231 1546 y FC(as)g(its)1823 1637
y(v)n(alue,)21 b(result)g(and)h(v)n(alue-result)f(parameters)h
(respecti)n(v)o(ely)-5 b(,)1823 1729 y(that)44 b(are)g(denoted)h(by)f
Fq(val)q Fp(\()p Fy(C)o Fo(:m)2798 1737 y Fn(i)2825 1729
y Fp(\))p FC(,)f Fq(res)p Fp(\()p Fy(C)p Fo(:m)3203 1737
y Fn(i)3229 1729 y Fp(\))p FC(,)h(and)1823 1820 y Fq(valres)r
Fp(\()p Fy(C)o Fo(:m)2227 1828 y Fn(i)2254 1820 y Fp(\))p
FC(,)28 b(and)j(the)e(beha)o(viour)i(of)e Fo(m)3075 1828
y Fn(i)3130 1820 y FC(is)g(de\002ned)1823 1911 y(by)20
b(the)f(design)h Fo(D)2304 1919 y Fn(i)2349 1911 y FC(referred)g(by)f
Fq(Def)q Fp(\()p Fy(C)p Fo(:m)2985 1919 y Fn(i)3011 1911
y Fp(\))p FC(.)37 b(Sometimes)1823 2003 y(we)28 b(simply)h(denote)g
(each)g(element)g(in)f Fq(op)p Fp(\()p Fy(C)p Fp(\))g
FC(as)g Fo(m)3287 2011 y Fn(i)3353 2003 y FB(7!)1823
2094 y Fp(\()p Fy(par)o(as)p 1853 2122 170 4 v 2022 2129
a Fn(i)2048 2094 y Fo(;)14 b(D)2146 2102 y Fn(i)2172
2094 y Fp(\))p FC(.)27 b(W)-6 b(e)28 b(also)g(sometimes)g(ab)o(use)h
(the)f(notation)1823 2194 y Fo(m)k FB(2)g Fq(op)q Fp(\()p
Fy(C)p Fp(\))24 b FC(and)h(use)g(it)f(to)h(denote)g FB(9)p
Fy(par)o(as)p 2890 2222 V 1 w Fo(;)13 b(D)24 b FB(\001)e
Fp(\()p Fo(m)32 b FB(7!)1823 2285 y Fp(\()p Fy(par)o(as)p
1853 2313 V 1 w Fo(;)13 b(D)r Fp(\))22 b FB(2)f Fq(op)q
Fp(\()p Fy(C)p Fp(\)\))p 3439 2316 4 822 v 523 2319 2919
4 v 521 2582 4 263 v 581 2466 a Fo(\006)t Fp(\()p Fy(C)p
Fp(\))p Fo(;)32 b(\006)p 928 2582 V 190 w(\006)25 b Fp(=)1203
2480 y Fk(df)1343 2395 y Fj([)1274 2569 y Fy(C)o Fl(2)p
Fe(cname)1510 2466 y Fo(\006)t Fp(\()p Fy(C)p Fp(\))p
1810 2582 V 1823 2376 a Fo(\006)t Fp(\()p Fy(C)p Fp(\))p
FC(:the)20 b(set)h(of)g(objects)g(of)f(class)h Fy(C)g
FC(that)f(currently)h(e)o(xist)1823 2467 y(in)e(the)g(e)o(x)o(ecution)h
(of)f(the)g(program.)1823 2558 y Fo(\006)t FC(:)f(system)g(state,)g
(also)g(called)g(current)h(con\002guration)g([30])p 3439
2582 V 523 2585 2919 4 v 521 2744 4 159 v 552 2683 a
Fd(superclass)p 928 2744 V 277 w FB(f)p Fy(N)q FB(7!)o
Fy(M)q Fo(;)32 b(:::)p FB(g)p 1810 2744 V 1823 2636 a
FC(a)20 b(partial)f(function)i(mapping)g(a)f(class)g(\()p
Fy(N)t FC(\))g(to)f(its)h Fy(dir)m(ect)h FC(su-)1823
2728 y(perclass)f(\()p Fy(M)s FC(\).)p 3439 2744 V 523
2747 2919 4 v 521 2906 4 159 v 659 2845 a FA(glb)p 928
2906 V 1810 2906 V 1823 2798 a FC(the)e(set)f(of)h(global)g(v)n
(ariables)g(declared)h(at)e(the)h(be)o(ginning)h(of)1823
2889 y(the)g(main)g(program)p 3439 2906 V 523 2909 2919
4 v 521 3183 4 274 v 592 3065 a FA(locvar)p 928 3183
V 1048 2973 a FB(f)p Fp(\()p Fo(x)1160 2981 y FD(1)1194
2973 y Fo(;)13 b FB(h)p Fo(T)1303 2981 y FD(11)1368 2973
y Fo(;)g(::;)h(T)1524 2981 y FD(1)p Fn(m)1613 2973 y
FB(i)p Fp(\))p Fo(;)1328 3064 y(:::;)1057 3156 y Fp(\()p
Fo(x)1131 3164 y Fn(n)1173 3156 y Fo(;)f FB(h)p Fo(T)1282
3164 y Fn(n)p FD(1)1354 3156 y Fo(;)g(::;)h(T)1510 3165
y Fn(nk)1587 3156 y FB(i)p Fp(\))p FB(g)p 1810 3183 V
1823 2972 a FC(the)22 b(set)f(of)h(local)f(v)n(ariables)h(which)g(are)g
(kno)n(wn)h(to)e(the)h(cur)o(-)1823 3063 y(rent)h(scope)h(of)f(the)g
(program.)h Fo(T)2694 3071 y Fn(i)p FD(1)2751 3063 y
FC(,)e(for)h Fo(i)30 b Fp(=)f(1)p Fo(;)13 b(::;)h(n)23
b FC(is)g(the)1823 3155 y(most)c(recently)h(declared)f(type)h(of)f
Fo(x)2791 3163 y Fn(i)p 3439 3183 V 523 3186 2919 4 v
521 3278 4 92 v 659 3250 a FA(var)p 928 3278 V 247 w
Fq(var)j Fp(=)g Fq(glb)17 b FB([)h Fq(locvar)p 1810 3278
V 3439 3278 V 523 3281 2919 4 v 521 3881 4 600 v 535
3599 a Fd(visibleattr)p 928 3881 V 1810 3881 V 1823 3332
a FC(the)23 b(set)g(of)g(attrib)o(utes)f(which)i(are)f(visible)g(from)g
(inside)g(the)1823 3423 y(current)32 b(class,)f(i.e.)f(all)h(its)g
(declared)h(attrib)o(utes)f(plus)g(the)1823 3515 y(protected)c(attrib)o
(utes)e(of)h(its)g(superclasses)h(and)f(all)g(public)1823
3606 y(attrib)o(utes.)20 b(Ev)o(ery)h(time)g(before)h(a)f(method)h(of)f
(an)g(object)h(is)1823 3697 y(e)o(x)o(ecuted,)f(this)e(set)g(is)h(set)f
(to)h(the)f(attrib)o(utes)g(of)h(the)g(class)f(of)1823
3788 y(the)26 b(object,)g(and)h(it)e(will)g(be)i(reset)e(after)h(the)g
(e)o(x)o(ecution)h(of)1823 3880 y(the)19 b(method.)p
3439 3881 V 523 3884 2919 4 v 521 4590 4 707 v 705 4214
44 4 v 705 4256 a Fo(x)p 928 4590 4 707 v 1810 4590 V
1823 3935 a FC(the)34 b(state)f(of)g(v)n(ariable)h Fo(x)48
b FB(2)h Fq(var)q FC(.)33 b(Since)g(a)g(local)g(v)n(ari-)1823
4026 y(able)28 b(can)g(be)g(redeclared,)g(its)f(state)g(usually)h
(comprises)g(a)1823 4118 y(nonempty)18 b(\002nite)e(sequence)i(of)e(v)n
(alues,)g(whose)h(\002rst)f(\(head\))1823 4209 y(element)28
b(represents)h(the)f(current)g(v)n(alue)g(of)g(the)g(v)n(ariable.)p
1823 4259 44 4 v 1823 4300 a Fo(x)e FC(for)h Fo(x)37
b FB(2)g Fq(glb)27 b FC(contains)h(at)f(most)g(one)g(v)n(alue)h(and)g
(thus)1823 4392 y(we)19 b(can)h(simply)f(use)g Fo(x)f
FC(to)h(denote)h(it.)e(A)h(primiti)n(v)o(e)g(v)n(ariable)1823
4483 y(tak)o(es)e(v)n(alues)f(of)g(primiti)n(v)o(e)g(type,)g(while)g
(an)g(object)h(v)n(ariable)1823 4574 y(can)j(store)e(an)i(object)f
Fy(name)h FC(or)e Fy(identity)h FC(as)g(its)f(v)n(alue.)p
3439 4590 4 707 v 523 4594 2919 4 v 1373 4776 a Fz(Fig)o(.)12
b(1.)19 b FC(The)g(Alphabet:)g(Logical)g(V)-8 b(ariables)p
eop
%%Page: 8 8
8 7 bop 523 448 a FG(attached)22 b(to)h Fo(e)p FG(.)g(The)f(e)n(v)n
(aluation)g(mak)o(es)g(use)h(of)g(the)g(state)g(of)g
Fo(\006)t FG(.)g(Ho)n(we)n(v)o(er)m(,)e(an)h(e)o(xpression)g(can)523
548 y(only)g(be)g(e)n(v)n(aluated)g(when)g(it)h(is)h(well-de\002ned.)c
(Some)j(well-de\002nedness)e(conditions)g(are)i(static)523
648 y(that)d(can)f(be)h(check)o(ed)e(at)i(compiling)e(time,)i(b)n(ut)g
(some)f(are)h(dynamic.)e(The)h(e)n(v)n(aluation)f(results)i(of)523
747 y(e)o(xpressions)f(are)h(gi)n(v)o(en)f(in)h(Fig.)h(2.)p
523 958 2902 4 v 521 1049 4 92 v 535 1022 a FC(Expression)p
876 1049 V 893 1049 V 985 w(Ev)n(aluation)p 3422 1049
V 523 1053 2902 4 v 521 1144 4 92 v 643 1117 a Fy(null)p
877 1144 V 893 1144 V 148 w FB(D)r Fp(\()p Fy(null)p
Fp(\))g(=)1225 1131 y Fk(df)1296 1117 y Fy(true)p Fo(;)84
b Fq(type)q Fp(\()p Fy(null)p Fp(\))21 b(=)1935 1131
y Fk(df)2006 1117 y Fy(NULL)o Fo(;)84 b Fq(value)q Fp(\()p
Fy(null)p Fp(\))21 b(=)2751 1131 y Fk(df)2822 1117 y
Fy(null)p 3422 1144 V 523 1147 2902 4 v 521 1787 4 640
v 679 1486 a Fo(x)p 877 1787 V 893 1787 V 918 1211 a
FB(D)r Fp(\()p Fo(x)p Fp(\))158 b(=)1301 1225 y Fk(df)1373
1211 y Fo(x)21 b FB(2)h Fq(var)17 b FB(^)h Fp(\()p Fq(decltype)q
Fp(\()p Fo(x)p Fp(\))j FB(2)g(T)37 b(_)17 b Fq(decltype)r
Fp(\()p Fo(x)p Fp(\))j FB(2)i Fq(cname)q Fp(\))h(\()p
FC(Static)o Fp(\))1241 1303 y FB(^)81 b Fq(decltype)r
Fp(\()p Fo(x)p Fp(\))39 b FB(2)22 b(T)40 b(\))21 b Fy(head)r
Fp(\()p 2259 1261 44 4 v Fo(x)o Fp(\))g FB(2)h Fq(decltype)r
Fp(\()p Fo(x)p Fp(\))223 b(\()p FC(Dynamic)p Fp(\))1241
1394 y FB(^)81 b Fq(decltype)r Fp(\()p Fo(x)p Fp(\))21
b FB(2)g Fq(cname)i FB(\))1373 1485 y Fy(head)q Fp(\()p
1548 1444 V Fo(x)p Fp(\))e FB(2)h Fy(Ref)o Fp(\()p Fo(\006)t
Fp(\()p Fq(decltype)r Fp(\()p Fo(x)p Fp(\)\)\))650 b(\()p
FC(Dynamic)p Fp(\))918 1623 y Fq(type)q Fp(\()p Fo(x)p
Fp(\))62 b(=)1301 1637 y Fk(df)1373 1518 y Fj(\032)1442
1577 y Fq(decltype)r Fp(\()p Fo(x)p Fp(\))71 b Fq(decltype)r
Fp(\()p Fo(x)p Fp(\))20 b FB(2)i(T)1442 1668 y Fq(type)q
Fp(\()p Fy(head)q Fp(\()p 1804 1626 V Fo(x)p Fp(\)\))h
FC(otherwise)918 1759 y Fq(value)q Fp(\()p Fo(x)p Fp(\))g(=)1301
1773 y Fk(df)1373 1759 y Fy(head)q Fp(\()p 1548 1718
V Fo(x)p Fp(\))p 3422 1787 4 640 v 523 1790 2902 4 v
521 2164 4 375 v 649 1996 a Fy(self)p 877 2164 V 893
2164 V 918 1854 a FB(D)r Fp(\()p Fy(self)p Fp(\))158
b(=)1361 1868 y Fk(df)1433 1854 y Fy(self)22 b FB(2)f
Fq(locvar)d FB(^)g Fq(decltype)r Fp(\()p Fy(self)o Fp(\))j
FB(2)h Fq(cname)i Fp(\()p FC(Static)o Fp(\))1301 1948
y FB(^)81 b Fy(head)r Fp(\()p 1609 1888 104 4 v Fy(self)o
Fp(\))22 b FB(2)f Fy(Ref)p Fp(\()p Fo(\006)t Fp(\()p
Fq(decltype)q Fp(\()p Fy(self)p Fp(\)\)\))145 b(\()p
FC(Dynamic)q Fp(\))918 2043 y Fq(type)q Fp(\()p Fy(self)p
Fp(\))62 b(=)1361 2057 y Fk(df)1433 2043 y Fq(type)q
Fp(\()p Fy(head)q Fp(\()p 1795 1982 V Fy(self)p Fp(\)\))918
2137 y Fq(value)q Fp(\()p Fy(self)p Fp(\))23 b(=)1361
2151 y Fk(df)1433 2137 y Fy(head)r Fp(\()p 1609 2076
V Fy(self)o Fp(\))p 3422 2164 4 375 v 523 2168 2902 4
v 521 2624 4 457 v 648 2415 a Fo(x:a)p 877 2624 V 893
2624 V 918 2232 a FB(D)r Fp(\()p Fo(x:a)p Fp(\))e(=)1226
2246 y Fk(df)1508 2232 y FB(D)r Fp(\()p Fo(x)p Fp(\))1433
2323 y FB(^)j Fq(decltype)r Fp(\()p Fo(x)p Fp(\))c FB(2)i
Fq(cname)c FB(^)f Fq(type)q Fp(\()p Fo(x)p Fp(\))p Fo(:a)k
FB(2)g Fq(visibleattr)26 b Fp(\()p FC(Static)o Fp(\))1433
2414 y FB(^)e Fy(head)q Fp(\()p 1683 2373 44 4 v Fo(x)o
Fp(\))e FB(6)p Fp(=)f Fy(null)918 2506 y Fq(type)q Fp(\()p
Fo(x:a)p Fp(\))g(=)1322 2520 y Fk(df)1508 2506 y Fq(type)q
Fp(\()p Fy(head)q Fp(\()p 1870 2464 V Fo(x)o Fp(\))p
Fo(:a)p Fp(\))918 2597 y Fq(value)q Fp(\()p Fo(x:a)p
Fp(\))g(=)1361 2611 y Fk(df)1508 2597 y Fy(head)q Fp(\()p
1683 2555 V Fo(x)o Fp(\))p Fo(:a)p 3422 2624 4 457 v
523 2628 2902 4 v 521 2902 4 274 v 640 2783 a(l)q(e:a)p
877 2902 V 893 2902 V 918 2692 a Fq(D)p Fp(\()p Fo(l)q(e:a)p
Fp(\))g(=)1220 2706 y Fk(df)1473 2692 y Fq(D)p Fp(\()p
Fo(l)q(e)p Fp(\))c FB(^)g Fq(type)q Fp(\()p Fo(l)q(e)p
Fp(\))p Fo(:a)k FB(2)g Fi(visibleattr)918 2783 y Fq(value)q
Fp(\()p Fo(l)q(e:a)p Fp(\))g(=)1377 2797 y Fk(df)1473
2783 y Fq(value)q Fp(\()p Fo(l)q(e)p Fp(\))p Fo(:a)918
2874 y Fq(type)q Fp(\()p Fo(l)q(e:a)p Fp(\))g(=)1338
2888 y Fk(df)1473 2874 y Fq(type)q Fp(\()p Fq(value)q
Fp(\()p Fo(l)q(e)p Fp(\))p Fo(:a)p Fp(\))p 3422 2902
V 523 2905 2902 4 v 521 3179 4 274 v 584 3061 a(\()p
Fo(e)e Fz(is)f Fy(C)p Fp(\))p 877 3179 V 893 3179 V 918
2969 a FB(D)r Fp(\()p Fo(e)h Fz(is)f Fy(C)p Fp(\))158
b(=)1430 2983 y Fk(df)1502 2969 y FB(D)r Fp(\()p Fo(e)p
Fp(\))17 b FB(^)h Fp(\()p Fq(type)p Fp(\()p Fo(e)p Fp(\))j
FB(2)h Fq(cname)q Fp(\))17 b FB(^)g Fp(\()p Fy(C)k FB(2)h
Fq(cname)q Fp(\))918 3060 y Fq(type)q Fp(\()p Fo(e)c
Fz(is)h Fy(C)p Fp(\))62 b(=)1430 3074 y Fk(df)1502 3060
y Fy(Bool)918 3151 y Fq(value)q Fp(\()p Fo(e)19 b Fz(is)f
Fy(C)p Fp(\))23 b(=)1430 3165 y Fk(df)1502 3151 y Fq(value)r
Fp(\()p Fo(e)p Fp(\))d FB(6)p Fp(=)h Fy(null)d FB(^)f
Fq(type)q Fp(\()p Fo(e)p Fp(\))k FB(\026)g Fy(C)p 3422
3179 V 523 3182 2902 4 v 521 3456 4 274 v 628 3338 a
Fp(\()p Fy(C)p Fp(\))p Fo(e)p 877 3456 V 893 3456 V 918
3246 a FB(D)r Fp(\(\()p Fy(C)p Fp(\))p Fo(e)p Fp(\))158
b(=)1403 3260 y Fk(df)1475 3246 y FB(D)r Fp(\()p Fo(e)19
b Fz(is)f Fy(C)p Fp(\))f FB(^)g Fq(value)q Fp(\()p Fo(e)i
Fz(is)f Fy(C)p Fp(\))918 3337 y Fq(type)q Fp(\(\()p Fy(C)p
Fp(\))p Fo(e)p Fp(\))62 b(=)1403 3351 y Fk(df)1475 3337
y Fq(type)q Fp(\()p Fo(e)p Fp(\))918 3429 y Fq(value)q
Fp(\(\()p Fy(C)p Fp(\))p Fo(e)p Fp(\))23 b(=)1403 3443
y Fk(df)1475 3429 y Fq(value)q Fp(\()p Fo(e)p Fp(\))p
3422 3456 V 523 3459 2902 4 v 521 3733 4 274 v 641 3615
a Fo(e=f)p 877 3733 V 893 3733 V 918 3523 a FB(D)r Fp(\()p
Fo(e=f)8 b Fp(\))159 b(=)1377 3537 y Fk(df)1524 3523
y FB(D)r Fp(\()p Fo(e)p Fp(\))17 b FB(^)g(D)r Fp(\()p
Fo(f)8 b Fp(\))17 b FB(^)h Fq(decltype)r Fp(\()p Fo(e)p
Fp(\))i(=)h Fy(Real)1449 3615 y FB(^)j Fq(decltype)q
Fp(\()p Fo(f)8 b Fp(\))22 b(=)f Fy(Real)c FB(^)g Fq(value)q
Fp(\()p Fo(f)8 b Fp(\))22 b FB(6)p Fp(=)f(0)918 3706
y Fq(value)q Fp(\()p Fo(e=f)8 b Fp(\))24 b(=)1377 3720
y Fk(df)1524 3706 y Fq(value)q Fp(\()p Fo(e)p Fp(\))p
Fo(=)p Fq(value)q Fp(\()p Fo(f)8 b Fp(\))p 3422 3733
V 523 3737 2902 4 v 1468 3919 a Fz(Fig)o(.)k(2.)19 b
FC(Ev)n(aluation)h(of)e(Expressions)523 4358 y Fw(3.4)82
b(Semantics)20 b(of)g(commands)523 4526 y FG(A)25 b(typical)f(aspect)g
(of)g(an)h(e)o(x)o(ecution)d(of)i(an)g(OO)h(program)d(is)k(about)d(ho)n
(w)h(objects)g(are)g(to)h(be)f(at-)523 4625 y(tached)17
b(to)h(program)e(v)n(ariables)i(\(or)f(entities)h([27]\).)f(An)h
(attachment)f(is)i(made)e(by)h(an)g(assignment,)523 4725
y(the)23 b(object)f(creation)g(or)h(parameter)e(passing)i(in)g(a)g
(method)f(in)m(v)n(ocation.)f(W)m(ith)i(the)g(approach)e(of)523
4825 y(UTP)-9 b(,)27 b(these)g(dif)n(ferent)e(cases)i(are)g(uni\002ed)f
(as)h(an)g(assignment)f(of)g(a)i(v)n(alue)e(to)g(a)i(program)c(v)n
(ari-)523 4924 y(able.)19 b(W)-7 b(e)21 b(shall)f(only)f(present)g(the)
g(semantic)g(de\002nitions)g(for)g(assignment,)f(object)i(creation)e
(and)p eop
%%Page: 9 9
9 8 bop 523 448 a FG(method)26 b(calls,)h(due)g(to)g(page)f(limit.)i
(All)f(other)g(programming)c(constructs)j(will)i(be)f(de\002ned)f(in)
523 548 y(e)o(xactly)c(the)h(same)g(w)o(ay)g(as)h(their)f(counter)n
(-parts)d(in)k(a)f(procedural)d(language,)h(thus)i(are)g(omitted)523
648 y(here.)c(W)-7 b(e)22 b(also)e(present)g(some)g(basic)g
(re\002nement)f(la)o(ws)i(for)e(commands.)523 739 y Fw(Assignments:)48
b FG(An)24 b(assignment)e Fo(l)q(e)f Fp(:=)h Fo(e)h FG(is)i
(well-de\002ned)d(if)i(both)e Fo(l)q(e)i FG(and)f Fo(e)h
FG(are)f(well-de\002ned)523 830 y(and)d(current)f(type)g(of)h
Fo(e)h FG(matches)e(the)i(declared)e(type)g(of)h Fo(l)q(e)664
973 y FB(D)r Fp(\()p Fo(l)q(e)i Fp(:=)f Fo(e)p Fp(\))g(=)1086
987 y Fk(df)1156 973 y FB(D)r Fp(\()p Fo(l)q(e)p Fp(\))c
FB(^)h(D)r Fp(\()p Fo(e)p Fp(\))f FB(^)g Fq(type)q Fp(\()p
Fo(e)p Fp(\))k FB(\026)g Fq(decltype)r Fp(\()p Fo(l)q(e)p
Fp(\))523 1124 y FG(Notice)f(that)g(this)g(requires)f(dynamic)f(type)h
(matching.)g(Ho)n(we)n(v)o(er)m(,)e(it)k(is)f Fv(safe)h
FG(to)f(replace)f(the)g(con-)523 1224 y(dition)j Fq(type)p
Fp(\()p Fo(e)p Fp(\))f FB(\026)g Fq(decltype)r Fp(\()p
Fo(l)q(e)p Fp(\))h FG(with)h Fq(decltype)r Fp(\()p Fo(e)p
Fp(\))d FB(\026)h Fq(decltype)r Fp(\()p Fo(l)q(e)p Fp(\))p
FG(,)h(as)h(the)g(semantics)f(will)523 1323 y(ensure)29
b(the)h(later)g(implies)g(the)g(former)-5 b(.)28 b(W)m(ith)i(the)g(use)
g(of)g(type)f(test)i FC(e)19 b Fz(is)f Fy(C)32 b FG(and)d(type)h
(casting)523 1423 y Fp(\()p Fy(C)p Fp(\))p Fo(e)o FG(,)24
b(changing)d(the)i(dynamic)f(type)h(matching)f(to)h(the)g(static)i
(matching)c(will)j(not)f(lose)h(e)o(xpres-)523 1523 y(si)n(v)o(e)c(po)n
(wer)f(either)-5 b(.)648 1614 y(There)24 b(are)i(tw)o(o)g(cases)h(of)e
(assignment.)g(The)g(\002rst)i(is)f(to)g(\(re-\)attach)e(a)i(v)n(alue)g
(to)f(a)i(v)n(ariable)523 1705 y(\(i.e.)17 b(change)e(the)i(current)f
(v)n(alue)g(of)h(the)g(v)n(ariable\),)e(b)n(ut)i(this)h(can)f(be)g
(done)f(only)g(when)g(the)h(type)g(of)523 1797 y(the)j(object)f(is)i
(consistent)f(with)g(the)g(declared)f(type)g(of)h(the)g(v)n(ariable.)f
(The)g(attachment)g(of)h(v)n(alues)523 1888 y(to)g(other)g(v)n
(ariables)f(are)h(not)g(changed.)664 2031 y Fo(x)h Fp(:=)g
Fo(e)g Fp(=)948 2045 y Fk(df)1019 2031 y FB(f)p Fo(x)p
FB(g)h Fp(:)f FB(D)r Fp(\()p Fo(x)g Fp(:=)h Fo(e)p Fp(\))f
FB(`)g Fp(\()p 1647 1989 44 4 v Fo(x)1690 1995 y Fl(0)1734
2031 y Fp(=)g FB(h)p Fq(value)q Fp(\()p Fo(e)p Fp(\))p
FB(i)16 b(\001)i Fy(tail)p Fp(\()p 2352 1989 V Fo(x)o
Fp(\)\))523 2182 y FG(As)k(we)g(do)g(not)f(allo)n(w)g(attrib)n(ute)h
(hiding/rede\002nition)c(in)k(subclasses)g(and)f(semantics)g(of)h
(assign-)523 2282 y(ment,)f(the)g(assignment)g(to)h(a)f(simple)h(v)n
(ariable)e(has)i(not)f(side-ef)n(fect,)f(and)h(thus)g(the)h(Hoare)f
(triple)523 2381 y FB(f)p Fo(o)598 2389 y FD(2)633 2381
y Fo(:a)h Fp(=)f(3)p FB(g)e Fo(o)930 2389 y FD(1)986
2381 y Fp(:=)j Fo(o)1126 2389 y FD(2)1179 2381 y FB(f)p
Fo(o)1254 2389 y FD(1)1289 2381 y Fo(:a)g Fp(=)f(3)p
FB(g)i FG(is)h(v)n(alid)e(in)g(our)g(model)g(for)g(v)n(ariables)f
Fo(o)2748 2389 y FD(1)2806 2381 y FG(of)h(class)i Fy(C)3133
2389 y FD(1)3190 2381 y FG(and)e Fo(o)3370 2389 y FD(2)523
2481 y FG(of)d Fy(C)662 2489 y FD(2)697 2481 y FG(,)h(where)f
Fy(C)1011 2489 y FD(2)1067 2481 y FB(\026)i Fy(C)1198
2489 y FD(1)1253 2481 y FG(and)e Fy(C)1443 2489 y FD(1)1497
2481 y FG(has)h Fo(a)g FG(as)h(protected)d(attrib)n(ute)h(of)h(inte)o
(ger)e(type.)h(This)h(has)g(made)523 2580 y(the)g(theory)e(much)h
(simpler)h(than)f(the)h(Haore-logic)d(based)j(semantics)g(for)f(OO)h
(programming)c(in)523 2680 y([30].)648 2771 y(The)25
b(second)g(case)h(is)h(to)f(modify)f(the)h(v)n(alue)f(of)g(an)h(attrib)
n(ute)g(of)f(an)h(object)f(attached)h(to)g(an)523 2863
y(e)o(xpression.)20 b(This)i(is)h(done)e(by)g(\002nding)g(the)g
(attached)g(object)h(in)g(the)f(system)i(state)f Fo(\006)k
FG(and)c(mod-)523 2954 y(ifying)j(its)i(state)g(accordingly)-5
b(.)22 b(Thus,)k(all)g(v)n(ariables)f(that)h(point)g(to)g(the)g
(identity)f(of)h(this)g(object)523 3045 y(will)21 b(be)f(updated.)629
3233 y Fo(l)q(e:a)p Fp(:=)o Fo(e)p Fp(=)927 3247 y Fk(df)1000
3233 y FB(f)p Fo(\006)t Fp(\()p Fq(decltype)r Fp(\()p
Fo(l)q(e)p Fp(\)\))p FB(g)p Fp(:)j FB(D)r Fp(\()p Fo(l)q(e:a)p
Fp(:=)p Fo(e)p Fp(\))p FB(`)2098 3128 y Fj(\022)2166
3187 y Fo(\006)t Fp(\()p Fq(decltype)q Fp(\()p Fo(l)q(e)p
Fp(\)\))2723 3155 y Fl(0)2745 3187 y Fp(=)p Fo(\006)t
Fp(\()p Fq(decltype)r Fp(\()p Fo(l)q(e)p Fp(\)\))2166
3278 y FB(])c Fp(\()p FB(f)p Fq(value)q Fp(\()p Fo(l)q(e)p
Fp(\))p FB(g\010f)p Fo(a)p FB(7!)p Fq(value)q Fp(\()p
Fo(e)p Fp(\))p FB(g)p Fp(\))3374 3128 y Fj(\023)648 3422
y FG(F)o(or)24 b(e)o(xample,)g(let)i Fo(x)f FG(be)g(a)g(v)n(ariable)g
(of)f(type)h Fy(C)h FG(such)e(that)i Fy(C)f FG(has)h(an)f(attrib)n(ute)
g Fo(d)g FG(of)g Fo(D)j FG(and)523 3522 y Fo(D)c FG(has)d(an)g(attrib)n
(ute)f Fo(a)h FG(of)g(inte)o(ger)e(type.)h Fo(x:d:a)h
Fp(:=)h(4)g FG(will)f(change)f(state)h(of)g Fo(x)f Fp(=)i
FB(h)p Fp(1)p Fo(;)13 b Fy(C)p Fo(;)g FB(f)p Fo(d)21
b FB(7!)h Fp(2)p FB(gi)p FG(,)523 3622 y(where)i(reference)e
Fp(2)k FG(is)f(the)f(identity)g(of)g FB(h)p Fp(2)p Fo(;)13
b(D)r(;)h FB(f)p Fo(a)21 b FB(7!)g Fp(3)p FB(gi)26 b
FG(to)e Fo(x)d Fp(=)g FB(h)p Fp(1)p Fo(;)14 b Fy(C)p
Fo(;)f FB(f)p Fo(d)21 b FB(7!)g Fp(2)p FB(gi)q FG(,)k(b)n(ut)f(the)g
Fp(2)i FG(is)523 3721 y(no)n(w)20 b(the)g(identity)f(of)h(the)g(object)
g FB(h)p Fp(2)p Fo(;)14 b(D)r(;)f FB(f)p Fo(a)22 b FB(7!)f
Fp(4)p FB(gi)p FG(.)648 3821 y(This)e(semantic)g(de\002nition)f(sho)n
(ws)i(the)f(side-ef)n(fect)f(of)h(an)h(assignment)e(and)h(does)g
(re\003ect)g(the)523 3920 y(OO)f(feature)f(pointed)g(out)h(by)f(Bro)o
(y)h(in)g([7])f(that)h(an)g(in)m(v)n(ocation)e(to)i(a)h(method)d(of)i
(an)g(object)f(which)523 4020 y(contains)22 b(such)g(an)g(assignment)f
(or)h(an)h(instance)f(creation)f(de\002ned)g(later)i(on,)e(changes)g
(the)i(state)523 4120 y Fo(\006)i FG(of)20 b(the)g(system.)523
4271 y Fw(Law)h(1)41 b Fp(\()p Fo(l)q(e)21 b Fp(:=)g
Fo(e)p Fp(;)13 b Fo(l)q(e)21 b Fp(:=)h Fo(f)8 b Fp(\()p
Fo(l)q(e)p Fp(\)\))21 b FB(\021)g Fp(\()p Fo(l)q(e)g
Fp(:=)g Fo(f)8 b Fp(\()p Fo(e)p Fp(\)\))523 4435 y Fw(Law)21
b(2)41 b Fp(\()p Fo(l)q(e)874 4443 y FD(1)929 4435 y
Fp(:=)22 b Fo(e)1068 4443 y FD(1)1102 4435 y Fp(;)13
b Fo(l)q(e)1196 4443 y FD(2)1252 4435 y Fp(:=)21 b Fo(e)1390
4443 y FD(2)1425 4435 y Fp(\))g FB(\021)g Fp(\()p Fo(l)q(e)1647
4443 y FD(2)1702 4435 y Fp(:=)h Fo(e)1841 4443 y FD(2)1875
4435 y Fp(;)13 b Fo(l)q(e)1969 4443 y FD(1)2025 4435
y Fp(:=)21 b Fo(e)2163 4443 y FD(1)2198 4435 y Fp(\))p
Fv(,)33 b(pr)l(o)o(vided)f Fo(l)q(e)2666 4443 y FD(1)2734
4435 y Fv(and)g Fo(l)q(e)2952 4443 y FD(2)3019 4435 y
Fv(ar)m(e)h(distinct)523 4534 y(simple)21 b(names)e(whic)o(h)h(do)g
(not)g(occur)g(in)g Fo(e)1773 4542 y FD(1)1828 4534 y
Fv(or)h Fo(e)1959 4542 y FD(2)1993 4534 y Fv(.)523 4690
y FG(Note)j(that)g(the)g(la)o(w)g(might)g(not)f(be)h(v)n(alid)g(if)g
Fo(l)q(e)1903 4698 y Fn(i)1954 4690 y FG(are)g(composite)f(names.)g(F)o
(or)h(instance,)f(the)h(fol-)523 4782 y(lo)n(wing)19
b(equation)g(is)i(not)f(v)n(alid)g(when)f Fo(x)i FG(and)e
Fo(y)24 b FG(ha)n(v)o(e)19 b(the)h(same)h(v)n(alue:)664
4924 y Fo(x:a)g Fp(:=)g(1;)33 b Fo(y)s(:a)21 b Fp(:=)g(2)40
b FB(\021)g Fo(y)s(:a)21 b Fp(=)g(2;)32 b Fo(x:a)21 b
Fp(=)g(1)p eop
%%Page: 10 10
10 9 bop 523 448 a Fw(Object)22 b(cr)o(eation)43 b FG(The)22
b(e)o(x)o(ecution)f(of)h Fy(C.ne)o(w)o Fp(\()p Fo(x)p
Fp(\)[)p Fo(e)p 2020 461 36 4 v Fp(])h FG(is)g(well-de\002ned)e(if)i
Fy(C)e FB(2)g Fq(cname)q FG(,)i(the)f(length)523 540
y(of)d(the)g(list)h Fo(e)p 854 553 V 20 w FG(of)e(the)h(e)o(xpressions)
f(is)i(the)f(same)h(as)f(the)h(number)d(of)i(attrib)n(utes)g(of)g
Fy(C)g FG(and)g(the)g(types)523 631 y(of)h(the)g(e)o(xpressions)f
(match)h(those)g(of)g(the)g(corresponding)d(attrib)n(utes)j(of)g
Fy(C)o FG(,)h(i.e.)676 788 y FB(D)r Fp(\()p Fy(C.ne)o(w)p
Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 1080 801 V -1 w Fp(]\))h(=)1248
802 y Fk(df)1318 788 y Fy(C)p FB(2)p Fq(cname)c FB(^)g(j)p
Fo(e)p 1722 801 V FB(j)p Fp(=)p Fy(size)p Fp(\()p Fq(attr)q
Fp(\()p Fy(C)o Fp(\)\))f FB(^)g(8)p Fo(i)p FB(\001)q
Fq(type)q Fp(\()p Fo(e)2676 796 y Fn(i)2701 788 y Fp(\))p
FB(\026)p Fq(decltype)r Fp(\()p Fy(C)p Fo(:a)3247 796
y Fn(i)3273 788 y Fp(\))523 946 y FG(The)g(command)e(\(re-\)declares)g
(v)n(ariable)i Fo(x)p FG(,)g(creates)g(a)h(ne)n(w)f(object,)f(attaches)
h(the)h(object)e(to)i Fo(x)f FG(and)523 1037 y(attaches)j(the)g
(initial)h(v)n(alues)f(of)g(the)g(attrib)n(utes)g(to)g(the)h(attrib)n
(utes)f(of)g Fo(x)g FG(too.)676 1176 y Fy(C.ne)o(w)p
Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 989 1189 V -1 w Fp(])i(=)1127
1190 y Fk(df)1197 1176 y FB(f)p Fq(var)q Fo(;)13 b(x;)g(\006)t
Fp(\()p Fy(C)o Fp(\))p FB(g)22 b Fp(:)676 1268 y FB(D)r
Fp(\()p Fy(C.ne)o(w)p Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p
1080 1281 V -1 w Fp(]\))g FB(`)f(9)p Fy(r)m(ef)g FB(62)h
Fy(Ref)o Fp(\()p Fo(\006)t Fp(\))p FB(\001)676 1303 y
Fj(0)676 1434 y(B)676 1479 y(B)676 1524 y(B)676 1569
y(B)676 1614 y(B)676 1659 y(B)676 1707 y(@)755 1359 y
Fp(\()p Fo(\006)t Fp(\()p Fy(C)o Fp(\))958 1327 y Fl(0)1002
1359 y Fp(=)f Fo(\006)t Fp(\()p Fy(C)o Fp(\))c FB([)h(fh)p
Fy(r)m(ef)p Fo(;)13 b Fy(C)p Fo(;)g FB(f)p Fo(a)1687
1367 y Fn(i)1735 1359 y FB(7!)21 b Fq(value)q Fp(\()p
Fo(e)2095 1367 y Fn(i)2121 1359 y Fp(\))p FB(gi)e(j)g
Fo(a)2319 1367 y Fn(i)2366 1359 y FB(2)j Fq(attr)q Fp(\()p
Fy(C)p Fp(\))p FB(g)p Fp(\))p FB(^)755 1450 y Fp(\(\()p
Fo(x)e FB(2)i Fq(glb)17 b FB(^)h Fp(\()p Fo(x)1229 1418
y Fl(0)1272 1450 y Fp(=)j Fy(r)m(ef)p Fp(\))755 1542
y FB(_)755 1633 y Fp(\()p Fo(x)p FB(2)o Fq(locvar)e FB(^)e
Fp(\()p 1230 1591 44 4 v Fo(x)1273 1601 y Fl(0)1296 1633
y Fp(=)o FB(h)p Fy(r)m(ef)q FB(i\001)p 1517 1591 V Fo(x)o
Fp(\)\))g FB(^)g Fp(\()p Fq(locvar)1971 1601 y Fl(0)1993
1633 y Fp(=)p FB(f)p Fo(x)p FB(g)p Fm(\004)p Fq(locvar)q
FB([f)p Fp(\()p Fo(x;)c FB(h)p Fy(C)p FB(i\001)p Fq(locvar)q
Fp(\()p Fo(x)p Fp(\)\))p FB(g)p Fp(\))755 1724 y FB(_)755
1816 y Fp(\()p Fo(x)20 b FB(62)i Fq(var)c FB(^)f Fp(\()p
1155 1774 V Fo(x)1198 1784 y Fl(0)1242 1816 y Fp(=)k
FB(h)p Fy(r)m(ef)p FB(i)p Fp(\))c FB(^)g Fp(\()p Fq(locvar)1843
1784 y Fl(0)1887 1816 y Fp(=)k Fq(locvar)e FB([)e(f)p
Fp(\()p Fo(x;)c FB(h)p Fy(C)p FB(i)p Fp(\))p FB(g)p Fp(\)\)\))3244
1303 y Fj(1)3244 1434 y(C)3244 1479 y(C)3244 1524 y(C)3244
1569 y(C)3244 1614 y(C)3244 1659 y(C)3244 1707 y(A)523
1974 y FG(W)-7 b(e)29 b(will)g(use)f Fy(C.ne)o(w)p Fp(\()p
Fo(x)p Fp(\))g FG(to)g(denote)f(the)h(command)e Fy(C.ne)o(w)p
Fp(\()p Fo(x)p Fp(\)[)p Fq(Initial)q Fp(\()p Fy(C)p Fo(:a)p
Fp(\))p 2419 2005 447 4 v -1 w(])j FG(that)g(creates)f(an)523
2073 y(instance)20 b(of)g Fy(C)g FG(with)h(the)f(def)o(ault)f(initial)i
(v)n(alues)f(of)g(its)h(attrib)n(utes.)523 2231 y Fw(Law)g(3)41
b Fv(If)20 b Fo(x)g Fv(and)g Fo(y)j Fv(ar)m(e)d(distinct,)g
Fo(x)h Fv(does)f(not)f(appear)g(in)i Fo(f)p 2246 2258
46 4 v 29 w Fv(and)e Fo(y)k Fv(does)d(not)g(appear)f(in)h
Fo(e)p 3159 2244 36 4 v Fv(,)664 2388 y Fy(C)714 2396
y FD(1)749 2388 y Fo(:)p Fy(ne)o(w)p Fp(\()p Fo(x)p Fp(\)[)p
Fo(e)p 1014 2401 V -1 w Fp(];)14 b Fy(C)1155 2396 y FD(2)1189
2388 y Fo(:)p Fy(ne)o(w)q Fp(\()p Fo(y)s Fp(\)[)p Fo(f)p
1452 2415 46 4 v 8 w Fp(])22 b FB(\021)f Fy(C)1670 2396
y FD(2)1705 2388 y Fo(:)p Fy(ne)o(w)q Fp(\()p Fo(y)s
Fp(\)[)p Fo(f)p 1968 2415 V 8 w Fp(];)13 b Fy(C)2118
2396 y FD(1)2153 2388 y Fo(:)p Fy(ne)o(w)p Fp(\()p Fo(y)s
Fp(\)[)p Fo(e)p 2415 2401 36 4 v -1 w Fp(])523 2562 y
Fw(Law)21 b(4)41 b Fv(If)20 b Fo(x)g Fv(is)i(not)d(fr)m(ee)i(in)g(the)f
(Boolean)e(e)n(xpr)m(ession)i Fo(b)p Fv(,)h(then)664
2719 y Fy(C.ne)o(w)p Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 977
2732 V -1 w Fp(];)14 b(\()p Fo(P)27 b Fm(\001)17 b Fo(b)g
Fm(\003)g Fo(Q)p Fp(\))k FB(\021)g Fp(\()p Fy(C.ne)o(w)o
Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 1913 2732 V Fp(];)13 b
Fo(P)e Fp(\))17 b Fm(\001)g Fo(b)g Fm(\003)f Fp(\()p
Fy(C.ne)o(w)p Fp(\()p Fo(x)p Fp(\)[)p Fo(e)p 2657 2732
V -1 w Fp(];)e Fo(Q)p Fp(\))523 2893 y Fw(Method)25 b(Call)51
b FG(Let)26 b Fo(v)s FG(,)f Fo(r)j FG(and)c Fo(v)s(r)k
FG(be)d(lists)h(of)f(e)o(xpressions.)e(The)i(command)e
Fo(l)q(e:m)p Fp(\()p Fo(v)s(;)13 b(r)n(;)g(v)s(r)r Fp(\))25
b FG(as-)523 2984 y(signs)e(the)h(v)n(alues)e(of)h(the)g(actual)g
(parameters)f Fo(v)27 b FG(and)22 b Fo(v)s(r)k FG(to)d(the)g(formal)f
(v)n(alue)h(and)f(v)n(alue-result)523 3076 y(parameters)d(of)g(the)h
(method)f Fo(m)h FG(of)f(the)h(object)g Fo(o)g FG(that)g
Fo(l)q(e)g FG(refers)g(to,)g(and)f(then)g(e)o(x)o(ecutes)g(the)h(body)
523 3167 y(of)25 b Fo(m)p FG(.)h(After)f(it)h(terminates,)f(the)g(v)n
(alue)g(of)g(the)g(result)h(and)f(v)n(alue-result)f(parameters)g(of)h
Fo(m)h FG(are)523 3258 y(passed)20 b(back)g(to)g(the)g(actual)g
(parameters)f Fo(r)k FG(and)c Fo(v)s(s)p FG(.)676 3414
y Fo(l)q(e:m)p Fp(\()p Fo(v)s(;)13 b(r)n(;)f(v)s(r)r
Fp(\))21 b(=)1183 3428 y Fk(df)1254 3414 y Fp(\()p FB(D)r
Fp(\()p Fo(l)q(e)p Fp(\))c FB(^)g Fq(type)q Fp(\()p Fo(l)q(e)p
Fp(\))k FB(2)g Fq(cname)d FB(^)g Fo(m)j FB(2)g Fq(op)q
Fp(\()p Fq(type)p Fp(\()p Fo(l)q(e)p Fp(\)\))g FB(\))676
3598 y(9)p Fy(N)16 b FB(\001)i Fp(\()p Fq(type)q Fp(\()p
Fo(l)q(e)p Fp(\))i(=)i Fy(N)o Fp(\))17 b FB(^)1398 3447
y Fj(0)1398 3582 y(@)1476 3506 y Fq(var)j Fy(N)e(self)j
Fp(=)g Fo(l)q(e;)13 b(T)2026 3514 y FD(1)2079 3506 y
Fo(x)21 b Fp(=)g Fo(v)s(;)14 b(T)2345 3514 y FD(2)2398
3506 y Fo(y)23 b Fp(=)e Fo(r)n(;)13 b(T)2652 3514 y FD(3)2705
3506 y Fo(z)24 b Fp(=)e Fo(v)s(r)r Fp(;)1476 3597 y Fo(\011)8
b Fp(\()p Fy(N)q Fo(:m)p Fp(\);)31 b Fo(r)n(;)13 b(v)s(r)23
b Fp(:=)e Fo(y)s(;)13 b(z)s Fp(;)1476 3688 y Fq(end)20
b Fy(self)p Fo(;)13 b(x;)f(y)s(;)h(z)2956 3447 y Fj(1)2956
3582 y(A)523 3847 y FG(where)k Fo(x;)c(y)s(;)f(z)21 b
FG(are)d(resp.)f(v)n(alue,)f(result)i(and)f(v)n(alue-result)f
(parameters)g(of)h(the)h(method)e Fo(m)h FG(of)h(class)523
3946 y Fq(type)q Fp(\()p Fo(l)q(e)p Fp(\))p FG(,)25 b(and)f
Fo(\011)8 b Fp(\()p Fy(N)p Fo(:m)p Fp(\))26 b FG(stands)f(for)f(the)h
(design)f(associated)h(with)g(method)f Fo(m)h FG(of)f(class)i
Fy(N)p FG(,)f(that)523 4046 y(will)c(be)f(de\002ned)f(in)i(the)f
(semantics)g(of)g(the)g(whole)g(program)e(in)i(Section)g(3.6.)523
4295 y Fw(3.5)82 b(Class)21 b(declarations)523 4460 y
FG(A)e(class)g(declaration)e Fy(cdecl)j FG(gi)n(v)o(en)d(in)h(Section)g
(2.1)g(is)h(well-de\002ned)e(if)i(the)f(follo)n(wing)f(conditions)523
4560 y(hold.)560 4725 y(1.)41 b Fy(N)21 b FG(has)f(not)g(been)g
(declared)e(before:)h Fy(N)j FB(62)f Fq(cname)q FG(.)560
4825 y(2.)41 b Fy(N)21 b FG(and)e Fy(M)i FG(are)g(distinct:)f
Fy(N)h FB(6)p Fp(=)g Fy(M)p FG(.)560 4924 y(3.)41 b(The)20
b(attrib)n(ute)g(names)g(in)g(the)g(class)h(are)g(distinct.)p
eop
%%Page: 11 11
11 10 bop 560 448 a FG(4.)41 b(The)20 b(method)f(names)h(in)g(the)g
(class)h(are)g(distinct.)560 540 y(5.)41 b(The)20 b(parameters)f(of)h
(e)n(v)o(ery)f(method)g(are)h(distinct.)648 666 y(Let)28
b FB(D)r Fp(\()p Fy(cdecl)q Fp(\))g FG(denote)f(the)h(conjunction)d(of)
j(the)g(abo)o(v)o(e)e(conditions)h(for)g(class)i(declaration)523
757 y Fy(cdecl)q FG(.)23 b(The)f(class)i(declaration)e
Fy(cdecl)i FG(adds)e(the)h(structural)f(information)f(of)i(class)g
Fy(N)h FG(to)f(the)g(state)523 849 y(of)d(the)g(program,)e(and)i(this)g
(role)g(is)h(characterised)e(by)h(the)g(follo)n(wing)f(design.)676
973 y Fy(cdecl)j Fp(=)915 987 y Fk(df)676 1065 y FB(f)p
Fq(cname)q Fo(;)13 b Fq(pricname)r Fo(;)g Fq(superclass)s
Fo(;)g Fq(pria)q Fo(;)g Fq(prota)q Fo(;)g Fq(puba)q FB(g)22
b Fp(:)f FB(D)r Fp(\()p Fy(cdecl)q Fp(\))h FB(`)676 1105
y Fj(0)676 1236 y(B)676 1281 y(B)676 1326 y(B)676 1371
y(B)676 1416 y(B)676 1461 y(B)676 1505 y(B)676 1550 y(B)676
1598 y(@)829 1156 y Fq(cname)1025 1124 y Fl(0)1069 1156
y Fp(=)f Fq(cname)d FB([)f(f)p Fy(N)q FB(g)755 1247 y(^)23
b Fq(pricname)1143 1216 y Fl(0)1187 1247 y Fp(=)e(\()p
Fq(pricname)d FB([)g(f)p Fy(N)p FB(g)f Fm(\001)g Fy(anno)r
Fp(\()p Fy(cdecl)p Fp(\))g Fm(\003)g Fq(pricname)r Fp(\))755
1339 y FB(^)23 b Fq(superclass)1221 1307 y Fl(0)1265
1339 y Fp(=)e Fq(superclass)e FB(\010)e(f)p Fy(N)22 b
FB(7!)f Fy(M)p FB(g)755 1430 y(^)i Fq(pria)986 1398 y
Fl(0)1030 1430 y Fp(=)e Fq(pria)d FB(\010)f(f)p Fy(N)k
FB(7!)g(fh)p Fo(u)p 1637 1443 45 4 v 22 w Fp(:)h Fo(U)p
1746 1443 61 4 v 8 w(;)13 b(a)p 1840 1443 41 4 v FB(igg)755
1521 y(^)23 b Fq(prota)1025 1490 y Fl(0)1069 1521 y Fp(=)e
Fq(prota)d FB(\010)f(f)p Fy(N)22 b FB(7!)f(fh)p Fo(v)p
1716 1534 40 4 v 24 w Fp(:)h Fo(V)p 1820 1534 62 4 v
17 w(;)13 b(b)p 1916 1534 33 4 v FB(igg)755 1613 y(^)23
b Fq(puba)986 1581 y Fl(0)1030 1613 y Fp(=)e Fq(puba)d
FB(\010)f(f)p Fy(N)k FB(7!)g(fh)p Fo(w)p 1637 1626 58
4 v 24 w Fp(:)h Fo(W)p 1759 1626 84 4 v 10 w(;)13 b(c)p
1876 1626 34 4 v FB(igg)755 1704 y(^)23 b Fq(op)908 1672
y Fl(0)951 1704 y Fp(=)e Fq(op)d FB(\010)f(f)p Fy(N)k
FB(7!)g(f)p Fp(\()p Fo(m)1548 1712 y FD(1)1604 1704 y
FB(7!)g Fp(\()p Fy(par)o(as)p 1732 1732 170 4 v 1 w Fp(\))1931
1712 y FD(1)1966 1704 y Fo(;)13 b(c)2033 1712 y FD(1)2068
1704 y Fp(\)\))p Fo(;)f FB(\001)i(\001)f(\001)g(\001)g(\001)g(\001)g
Fo(;)g Fp(\()p Fo(m)2498 1713 y Fn(`)2549 1704 y FB(7!)21
b Fp(\()p Fy(par)o(as)p 2677 1732 V 2846 1739 a Fn(`)2876
1704 y Fo(;)13 b(c)2943 1713 y Fn(`)2974 1704 y Fp(\)\))p
FB(gg)3122 1105 y Fj(1)3122 1236 y(C)3122 1281 y(C)3122
1326 y(C)3122 1371 y(C)3122 1416 y(C)3122 1461 y(C)3122
1505 y(C)3122 1550 y(C)3122 1598 y(A)648 1839 y FG(where)24
b(the)h(logical)g(v)n(ariables)f Fc(pria)p FG(,)g Fc(prota)h
FG(and)f Fc(puba)h FG(are)g(introduced)e(to)i(record)e(the)523
1939 y(declared)c(attrib)n(utes)h(of)f Fy(N)p FG(,)i(from)e(which)g
(the)h(state)h Fc(attr)f FG(can)f(later)h(be)g(constructed.)e
(Similarly)-5 b(,)523 2038 y(the)25 b(dynamic)f(beha)n(viour)f(of)h
(the)h(methods)f(cannot)g(be)h(de\002ned)f(before)g(the)h(dependenc)o
(y)d(rela-)523 2138 y(tion)j(among)f(classes)i(is)g(speci\002ed.)f(At)h
(the)f(moment,)e(the)j(logical)e(v)n(ariable)g Fq(op)q
Fp(\()p Fy(N)p Fp(\))h FG(binds)g(each)523 2237 y(method)17
b Fo(m)859 2245 y Fn(i)904 2237 y FG(to)h(code)g Fo(c)1196
2245 y Fn(i)1241 2237 y FG(rather)g(than)g(its)h(de\002nition)e(which)h
(will)h(be)f(calculated)g(in)g(the)h(end)e(of)h(the)523
2337 y(declaration)h(section.)648 2437 y Fw(Example)45
b FG(Consider)21 b(a)i(simple)f(bank)f(system)h(illustrated)g(by)f(the)
h(UML)h(class)g(diagram)d(in)523 2536 y(Figure)j(3.)h
Fv(Account)f FG(is)i(an)e(abstract)h(class)1774 2506
y Fb(1)1832 2536 y FG(and)g(has)g(tw)o(o)g(subclasses)h(of)e(current)g
(accounts)g Fv(CA)523 2636 y FG(and)28 b(sa)n(ving)g(accounts)f
Fv(SA)o FG(.)57 b(The)28 b(declaration)f(of)h(class)h
Fv(Account)n FG(,)f(denoted)f(by)h Fv(declAccount)m FG(,)655
3536 y
 currentpoint currentpoint translate 0.68532 0.67493 scale neg exch
neg exch translate
 655 3536 a @beginspecial 0 @llx 0 @lly 455 @urx
126 @ury 4550 @rwi @setspecial
%%BeginDocument: bankcd-new.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\qsc\work\unuiist-03\bankcd-new.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 455 126
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 455 126
%AI3_TileBox: 0 0 455 126
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 113.6400 m
  132.1200 113.6400 L
  132.1200 90.3600 L
  4.3200 90.3600 L
  4.3200 113.6400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 55.2000 98.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.1200 98.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.8800 98.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.3600 98.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 90.3600 m
  132.1200 90.3600 L
  132.1200 63.7200 L
  4.3200 63.7200 L
  4.3200 90.3600 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 55.5600 79.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.3200 79.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.0800 79.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.0000 79.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 49.8000 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.5600 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.3200 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.0800 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.6800 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.4400 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.4800 68.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 63.7200 m
  132.1200 63.7200 L
  132.1200 12.2400 L
  4.3200 12.2400 L
  4.3200 63.7200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 18.0000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 24.4800 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 26.6400 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 29.5200 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 35.2800 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 41.0400 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 44.6400 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.4000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.8800 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 60.4800 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.2400 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.4000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(D\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.6000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.4800 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.3600 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.1200 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.0400 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.8000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.5600 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 112.3200 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 115.2000 46.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 21.6000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 27.3600 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.1200 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 36.0000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.4800 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 48.2400 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.4000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.1600 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.9200 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.9600 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.7200 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.3200 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.0800 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 84.2400 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(D\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.4400 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.3200 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 97.2000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.8000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.5600 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 111.6000 34.5600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 12.6000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 18.3600 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 24.1200 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 29.8800 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 35.6400 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.1200 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 47.1600 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 52.2000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.8000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.5600 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.3200 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.2400 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.0000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.8800 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.7600 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 92.5200 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.4400 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.2000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 111.9600 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 117.7200 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.6000 23.0400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  4.3200 91.0800 m
  131.4000 91.0800 L
S
U
u
  4.3200 64.4400 m
  131.4000 64.4400 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  3.6000 11.5200 m
  132.8400 11.5200 L
  132.8400 114.3600 L
  3.6000 114.3600 L
  3.6000 11.5200 L
s
  68.2200 62.9400 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  188.8800 112.0800 m
  290.8800 112.0800 L
  290.8800 91.4400 L
  188.8800 91.4400 L
  188.8800 112.0800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 219.3600 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.8400 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.6000 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.3600 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.8400 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.3200 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 256.8000 98.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  188.8800 91.4400 m
  290.8800 91.4400 L
  290.8800 60.1200 L
  188.8800 60.1200 L
  188.8800 91.4400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 221.1600 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.9200 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.4000 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 239.1600 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.0400 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(:\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.9200 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 247.8000 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.9600 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.7200 78.3600 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.6000 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.3600 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.1200 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.2800 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.0400 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.8000 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.8400 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.6000 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(:\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.4800 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.3600 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.5200 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 263.2800 66.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  188.8800 60.1200 m
  290.8800 60.1200 L
  290.8800 13.9200 L
  188.8800 13.9200 L
  188.8800 60.1200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 199.6800 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.1600 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.3200 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.2000 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.9600 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.7200 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.3200 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 232.0800 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.5600 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.1600 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 247.9200 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.8400 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 261.6000 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.3600 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 273.1200 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.0000 39.2400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.4800 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.2400 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.0000 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.8800 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.3600 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.1200 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 239.2800 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 245.0400 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.8000 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.8400 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 261.6000 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.2000 27.7200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  188.8800 92.1600 m
  290.1600 92.1600 L
S
U
u
  188.8800 60.8400 m
  290.1600 60.8400 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  188.1600 13.2000 m
  291.6000 13.2000 L
  291.6000 112.8000 L
  188.1600 112.8000 L
  188.1600 13.2000 L
s
  239.8800 63.0000 m
B
U
u
  0.000 0.000 0.000 1.000 K
  132.8400 68.8800 m
  180.9600 68.8800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  188.1600 68.8800 m
  178.0800 65.2800 L
  178.0800 72.4800 L
  188.1600 68.8800 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
  303.4800 72.0000 m
  303.4800 54.0000 L
  291.2400 63.0000 L
  303.4800 72.0000 L
B
U
u
  0.000 0.000 0.000 1.000 K
  303.4800 63.0000 m
  327.6000 63.0000 L
S
U
u
  0.000 0.000 0.000 1.000 K
  327.6000 99.0000 m
  327.6000 27.0000 L
S
U
u
  0.000 0.000 0.000 1.000 K
  327.6000 99.0000 m
  357.8400 99.0000 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  357.8400 121.3200 m
  447.1200 121.3200 L
  447.1200 106.2000 L
  357.8400 106.2000 L
  357.8400 121.3200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 395.6400 110.5200 0 Tp
TP
102.564103 Tz
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 402.8400 110.5200 0 Tp
TP
102.564103 Tz
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  357.8400 106.2000 m
  447.1200 106.2000 L
  447.1200 91.0800 L
  357.8400 91.0800 L
  357.8400 106.2000 L
F
U
u
  0.000 0.000 0.000 0.000 k
  357.8400 91.0800 m
  447.1200 91.0800 L
  447.1200 75.9600 L
  357.8400 75.9600 L
  357.8400 91.0800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 362.5200 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 369.0000 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 371.1600 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 374.0400 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 379.8000 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 385.5600 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 389.1600 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 394.9200 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 401.4000 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 405.0000 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.7600 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 418.6800 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 424.4400 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 430.2000 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 435.9600 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 438.8400 79.9200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  357.8400 106.9200 m
  446.4000 106.9200 L
S
U
u
  357.8400 91.8000 m
  446.4000 91.8000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  357.1200 75.2400 m
  447.8400 75.2400 L
  447.8400 122.0400 L
  357.1200 122.0400 L
  357.1200 75.2400 L
s
  402.4800 98.6400 m
B
U
u
  0.000 0.000 0.000 1.000 K
  327.6000 27.3600 m
  360.7200 27.3600 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  360.7200 49.6800 m
  450.0000 49.6800 L
  450.0000 34.5600 L
  360.7200 34.5600 L
  360.7200 49.6800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 398.8800 38.8800 0 Tp
TP
102.564103 Tz
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 405.3600 38.8800 0 Tp
TP
102.564103 Tz
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  360.7200 34.5600 m
  450.0000 34.5600 L
  450.0000 19.4400 L
  360.7200 19.4400 L
  360.7200 34.5600 L
F
U
u
  0.000 0.000 0.000 0.000 k
  360.7200 19.4400 m
  450.0000 19.4400 L
  450.0000 4.3200 L
  360.7200 4.3200 L
  360.7200 19.4400 L
F
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  360.7200 35.2800 m
  449.2800 35.2800 L
S
U
u
  360.7200 20.1600 m
  449.2800 20.1600 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  360.0000 3.6000 m
  450.7200 3.6000 L
  450.7200 50.4000 L
  360.0000 50.4000 L
  360.0000 3.6000 L
s
  405.3600 27.0000 m
B
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 655 3536 a
 currentpoint currentpoint translate 1 0.68532 div 1 0.67493 div scale
neg exch neg exch translate
 655 3536 a 1638 3639 a Fz(Fig)o(.)11
b(3.)19 b FC(A)g(bank)h(system)523 3839 y FG(is)k(written)f(as)h(follo)
n(ws.)f(Note)g(that)h(we)f(allo)n(w)h(speci\002cation)e(notations)h
(\(designs\))f(to)h(appear)f(in)523 3939 y(methods)d(and)h(commands.)
676 4055 y Fi(class)f Fy(Account)h FB(f)676 4147 y Fi(protected)i
Fp(:)g Fy(Int)d(aNo)p Fo(;)13 b Fy(Int)19 b(balance)r
Fp(;)676 4238 y Fi(metho)r(d)j Fp(:)f Fy(g)o(etBal)q
Fp(\()p FB(;)p Fo(;)13 b Fy(Int)19 b Fo(b;)13 b FB(;)p
Fp(\))19 b FB(f)p Fo(b)i Fp(:=)h Fy(balance)q FB(g)p
Fp(;)1054 4329 y Fy(withdr)o(aw)p Fp(\()p Fy(Int)d Fo(x;)12
b FB(;)p Fo(;)i FB(;)p Fp(\))p FB(f)p Fy(balance)23 b
FB(\025)e Fo(x)g FB(`)g Fy(balance)2432 4297 y Fl(0)2476
4329 y Fp(=)g Fy(balance)d FB(\000)f Fo(x)p FB(gg)648
4465 y FG(The)i(declaration)g Fv(declCA)h FG(of)g Fv(CA)h
FG(is)g(gi)n(v)o(en)e(as)676 4590 y Fi(class)g Fy(CA)f
Fi(extends)g Fy(Account)676 4681 y Fi(metho)r(d)k Fp(:)f
Fy(withdr)o(aw)q Fp(\()p Fy(Int)d Fo(x;)13 b FB(;)p Fo(;)g
FB(;)p Fp(\))p FB(f)p Fy(balance)24 b Fp(:=)d Fy(balance)e
FB(\000)e Fo(x)p FB(g)676 4772 y(g)p 523 4837 473 4 v
550 4893 a Fa(1)598 4924 y FC(See)h([25])h(for)g(a)g(formal)g
(de\002nition)g(of)g(an)g(abstract)g(class.)p eop
%%Page: 12 12
12 11 bop 523 448 a FG(W)-7 b(e)29 b(can)e(write)h(the)g(declarations)e
(of)h Fv(SA)h FG(\(in)f(which)g(method)g Fv(withdr)o(aw)g
FG(is)i(just)f(inherited)e(the)523 548 y(from)f Fv(Account)n
FG(\))i(and)e Fv(Bank)h FG(\(which)f(has)h(a)h(set)g(of)f(accounts)f
(associated)h(with)g(it\))h(in)f(the)g(same)523 648 y(w)o(ay)-5
b(.)648 749 y(It)22 b(is)h(easy)g(to)f(see)h(that)g(both)e
Fv(declAccount)f FG(and)i Fv(declCA)g FG(are)h(well-formed.)d(The)h
(semantics)523 849 y(of)f Fv(declAccount)e FG(is)j(de\002ned)e(by)h
(the)g(follo)n(wing)f(design.)676 1031 y Fy(declAccount)j
Fp(=)g Fy(true)f FB(`)676 1064 y Fj(0)676 1198 y(@)755
1122 y Fq(cname)951 1090 y Fl(0)994 1122 y Fp(=)h Fq(cname)c
FB([)f(f)p Fy(Account)q FB(g)h(^)f Fq(prot)1921 1090
y Fl(0)1965 1122 y Fp(=)k FB(f)p Fy(Account)h FB(7!)f(fh)p
Fy(Int)e(aNo)q FB(i)p Fo(;)13 b FB(h)p Fq(int)19 b Fy(balance)r
FB(igg^)755 1213 y Fq(op)833 1182 y Fl(0)877 1213 y Fp(=)i
FB(f)p Fy(Account)h FB(7!)g(f)p Fy(g)o(etBal)g FB(7!)f
Fp(\()p FB(h;)p Fo(;)13 b Fy(Int)19 b Fo(b;)13 b FB(;i)p
Fo(;)g(b)2149 1182 y Fl(0)2193 1213 y Fp(=)21 b Fy(balance)q
Fp(\))p Fo(;)755 1305 y Fy(withdr)o(aw)g FB(7!)g Fp(\()p
FB(h)p Fy(Int)e Fo(x;)12 b FB(;)p Fo(;)i FB(;i)p Fo(;)f
Fy(balance)23 b FB(\025)e Fo(x)g FB(`)g Fy(balance)2278
1273 y Fl(0)2322 1305 y Fp(=)g Fy(balance)d FB(\000)f
Fo(x)p Fp(\))p FB(gg)3379 1064 y Fj(1)3379 1198 y(A)523
1488 y FG(The)j(semantics)g(of)g Fv(declCA)g FG(is)h(the)f(follo)n
(wing.)664 1807 y Fy(declCA)h Fp(=)h Fy(true)f FB(`)1197
1612 y Fj(0)1197 1744 y(B)1197 1788 y(B)1197 1836 y(@)1275
1670 y Fq(cname)1471 1638 y Fl(0)1515 1670 y Fp(=)g Fq(cname)d
FB([)g(f)p Fy(CA)p FB(g^)1275 1761 y Fq(superclass)1668
1729 y Fl(0)1711 1761 y Fp(=)j FB(f)p Fy(CA)h FB(7!)f
Fy(Account)q FB(g^)1275 1852 y Fq(op)1354 1821 y Fl(0)1397
1852 y Fp(=)h FB(f)p Fy(Account)g FB(7!)f(f)p Fy(withdr)o(aw)h
FB(7!)1275 1944 y Fp(\()p FB(h)p Fy(Int)d Fo(x;)12 b
FB(;)p Fo(;)i FB(;i)p Fo(;)f Fy(balance)1926 1912 y Fl(0)1970
1944 y Fp(=)21 b Fy(balance)d FB(\000)f Fo(x)p Fp(\))p
FB(gg)2543 1612 y Fj(1)2543 1744 y(C)2543 1788 y(C)2543
1836 y(A)523 2126 y FG(The)25 b(semantics)g(of)f Fv(declSA)g
FG(and)h Fv(declBank)e FG(for)h(classes)j Fv(SA)d FG(and)h
Fv(Bank)f FG(can)h(be)f(de\002ned)g(in)h(the)523 2226
y(same)20 b(w)o(ay)-5 b(.)648 2328 y(A)30 b(class)g(declaration)e
(section)i Fy(cdecls)h FG(comprises)d(a)i(sequence)f(of)g(class)i
(declarations.)d(Its)523 2427 y(semantics)22 b(is)g(de\002ned)f(from)g
(the)h(semantics)f(of)h(a)g(single)g(class)g(declaration)e(gi)n(v)o(en)
h(abo)o(v)o(e,)42 b(and)523 2527 y(the)19 b(semantics)f(of)g
(sequential)g(composition.)e(Ho)n(we)n(v)o(er)m(,)h(the)h(follo)n(wing)
f(well-de\002nedness)g(con-)523 2626 y(ditions)j(need)f(to)i(be)f
(enforced)e(onto)h(a)i(declaration)e(section:)560 2818
y(1.)41 b(All)21 b(class)g(names)f(used)g(must)g(be)g(declared)f(in)i
(the)f(declaration)e(section;)560 2919 y(2.)41 b(An)o(y)20
b(superclass)g(of)g(a)g(declared)f(class)i(is)g(declared)e(too;)560
3021 y(3.)41 b(The)20 b(function)e Fc(superclass)h FG(does)h(not)g
(induce)f(circularity;)560 3122 y(4.)41 b(No)20 b(attrib)n(utes)g(of)g
(a)h(class)g(can)f(be)g(rede\002ned)f(in)h(its)i(subclasses;)560
3224 y(5.)41 b(No)20 b(method)f(is)i(allo)n(wed)f(to)g(rede\002ne)f
(its)j(signature)d(in)h(its)h(subclass.)523 3414 y(The)i(formal)g
(de\002nitions)g(for)g(these)h(conditions)e(are)i(omitted)f(here)g(due)
g(to)h(page)f(limitation.)g(In)523 3513 y(what)d(follo)n(ws)g(we)g
(denote)g(them)f(as)i FB(D)1668 3521 y FD(1)1703 3513
y FG(,)g Fo(:)13 b(:)g(:)p FG(,)21 b FB(D)1935 3521 y
FD(5)1970 3513 y FG(,)f(respecti)n(v)o(ely)-5 b(.)523
3771 y Fw(3.6)82 b(The)21 b(semantics)g(of)f(a)g(pr)o(ogram)523
3938 y FG(Let)28 b Fy(cdecls)h FG(be)f(a)g(class)g(declaration)f
(section)g(and)g Fy(P)h FG(main)f(method)g(of)g(the)h(form)f
Fp(\()p Fq(glb)p Fo(;)13 b(c)p Fp(\))p FG(,)28 b(the)523
4029 y(meaning)18 b(of)h(a)g(program)e Fp(\()p Fy(cdecls)h
FB(\017)f Fy(P)p Fp(\))i FG(is)i(de\002ned)d(as)i(the)f(composition)e
(of)i(the)g(meaning)f(of)h(class)523 4121 y(declarations)c
Fy(cdecls)i FG(\(de\002ned)d(in)i(Section)g(3.5\),)e(the)i(design)f
Fy(init)p FG(,)h(and)g(the)g(meaning)e(of)h(command)523
4212 y Fy(P)p FG(:)664 4377 y Fy(cdecls)j FB(\017)f Fy(P)k
Fp(=)1050 4391 y Fk(df)1121 4377 y Fy(cdecls)q Fp(;)31
b Fy(init)p Fp(;)h Fq(cname)1709 4341 y Fl(0)1753 4377
y Fp(=)21 b Fq(pricname)e Fm(\004)d Fq(cname)r Fp(;)31
b Fo(c)648 4548 y FG(where)19 b(the)h(design)g Fy(init)g
FG(performs)f(the)h(follo)n(wing)f(tasks)560 4722 y(1.)41
b(to)21 b(check)e(the)h(well-de\002nedness)f(of)h(the)g(declaration)f
(section,)560 4823 y(2.)41 b(to)21 b(decide)e(the)h(v)n(alues)g(of)g
Fq(attr)i FG(and)d Fq(visibleattr)k FG(from)d(those)g(of)g
Fq(pria)p FG(,)h Fq(prota)h FG(and)d Fq(puba)q FG(,)560
4924 y(3.)41 b(to)21 b(de\002ne)e(the)h(meaning)f(of)h(e)n(v)o(ery)f
(method)g(body)f Fo(c)p FG(,)p eop
%%Page: 13 13
13 12 bop 560 448 a FG(4.)41 b(to)18 b(check)e(the)i
(well-de\002nedness)d(of)i Fq(glb)q FG(,)h(i.e.)f(its)i(consistenc)o(y)
d(with)h(the)g(class)i(declarations:)805 643 y FB(D)r
Fp(\()p Fq(glb)q Fp(\))i(=)1125 657 y Fk(df)1196 643
y FB(8)p Fp(\()p Fo(x)f Fp(:)i Fo(T)11 b Fp(\))21 b FB(2)g
Fq(glb)d FB(\001)f Fo(T)32 b FB(2)22 b Fp(\()p FB(T)36
b([)17 b Fp(\()p Fq(pricname)i Fm(\004)e Fq(cname)q Fp(\)\))523
828 y FG(The)j(design)f Fy(init)i FG(is)g(formalised)e(as:)676
1021 y Fy(init)i Fp(=)857 1035 y Fk(df)927 1021 y FB(f)p
Fq(visibleattr)s Fo(;)13 b Fq(attr)q Fo(;)g Fq(op)q FB(g)21
b Fp(:)676 1113 y FB(D)735 1121 y FD(1)787 1113 y FB(^)c(D)914
1121 y FD(2)966 1113 y FB(^)g(D)1093 1121 y FD(3)1145
1113 y FB(^)g(D)1272 1121 y FD(4)1324 1113 y FB(^)h(D)1452
1121 y FD(5)1504 1113 y FB(^)f(D)r Fp(\()p Fq(glb)q Fp(\))k
FB(`)676 1154 y Fj(0)676 1285 y(B)676 1330 y(B)676 1378
y(@)829 1218 y Fq(visibleattr)1261 1187 y Fl(0)1304 1218
y Fp(=)1454 1147 y Fj([)1385 1321 y Fy(N)p Fl(2)p Fe(cname)1609
1218 y FB(f)p Fy(N)p Fo(:a)e FB(j)g Fo(a)i FB(2)g Fq(puba)q
Fp(\()p Fy(N)p Fp(\))p FB(g)755 1398 y(^)i(8)p Fy(N)e
FB(2)g Fq(cname)e FB(\001)e Fq(attr)1424 1366 y Fl(0)1446
1398 y Fp(\()p Fy(N)p Fp(\))k(=)g Fq(pria)q Fp(\()p Fy(N)p
Fp(\))c FB([)2010 1342 y Fj(S)2074 1398 y FB(f)p Fq(prota)r
Fp(\()p Fy(M)p Fp(\))g FB([)g Fq(puba)q Fp(\()p Fy(M)p
Fp(\))h FB(j)h Fy(N)j FB(\026)f Fy(M)p FB(g)755 1489
y(^)i Fq(op)908 1457 y Fl(0)930 1489 y Fp(\()p Fy(N)p
Fp(\))e(=)g FB(f)p Fo(m)g FB(7!)g Fp(\()p Fy(par)o(as)p
1397 1517 170 4 v 1 w Fo(;)13 b(\011)8 b Fp(\()p Fy(N)q
Fo(:m)p Fp(\)\))18 b FB(j)h Fp(\()p Fo(m)i FB(7!)g Fp(\()p
Fy(par)o(as)p 2190 1517 V 1 w Fo(;)13 b(c)p Fp(\)\))21
b FB(2)h Fq(op)p Fp(\()p Fy(M)p Fp(\))17 b FB(^)h Fy(N)j
FB(\026)g Fy(M)p FB(g)3130 1154 y Fj(1)3130 1285 y(C)3130
1330 y(C)3130 1378 y(A)648 1679 y FG(where)e(the)h(f)o(amily)g(of)g
(designs)g Fo(\011)8 b Fp(\()p Fy(N)p Fo(:m)p Fp(\))21
b FG(is)g(de\002ned)e(in)h(the)g(rest)h(of)f(this)h(section.)648
1780 y(The)e(f)o(amily)h(of)g(designs)g Fo(\011)8 b Fp(\()p
Fy(N)p Fo(:m)p Fp(\))21 b FG(captures)e(the)h(dynamic)f(binding)f(and)i
(is)h(de\002ned)e(by)h(a)h(set)523 1871 y(of)f(recursi)n(v)o(e)f
(equations,)f(which)i(contains)g(for)f(each)h(class)h
Fy(N)g FB(2)h Fq(cname)q FG(,)e(each)g(class)h Fy(M)g
FG(such)f(that)523 1962 y Fy(N)h FB(\026)g Fy(M)q FG(,)f(and)g(e)n(v)o
(ery)e(method)h Fo(m)i FB(2)h Fq(op)p Fp(\()p Fy(M)p
Fp(\))f FG(and)f(equation)664 2157 y Fo(\011)8 b Fp(\()p
Fy(N)p Fo(:m)p Fp(\))22 b(=)f Fo(F)1070 2180 y Fy(N)o
Fn(:m)1197 2157 y Fp(\()p Fo(\011)8 b Fp(\))118 b FC(where)20
b Fq(supercalss)r Fp(\()p Fy(N)p Fp(\))h(=)g Fy(M)648
2350 y FG(where)e Fo(F)32 b FG(is)21 b(constructed)d(according)g(to)j
(the)f(follo)n(wing)e(rules:)526 2545 y(\(1\))40 b Fo(m)22
b FG(is)h(not)e(de\002ned)f(in)i Fy(N)p FG(,)g(b)n(ut)g(in)f(a)h
(superclass,)g(i.e.)f Fo(m)g FB(62)h Fq(op)p Fp(\()p
Fy(N)p Fp(\))17 b FB(^)g Fo(m)k FB(2)h([f)p Fq(op)q Fp(\()p
Fy(M)p Fp(\))c FB(j)h Fy(N)i FB(\026)h Fy(M)p FB(g)p
FG(.)664 2636 y(The)e(de\002ning)f(equation)g(for)g(this)i(case)g(is)g
(simply)805 2830 y Fo(F)854 2854 y Fy(N)p Fn(:m)982 2830
y Fp(\()p Fo(\011)8 b Fp(\))21 b(=)1178 2844 y Fk(df)1249
2830 y Fy(Set)p Fp(\()p Fy(N)p Fp(\);)13 b Fo(\036)1530
2854 y Fy(N)1583 2830 y Fp(\()p Fi(b)r(o)r(dy)r Fp(\()p
Fy(M)q Fo(:m)p Fp(\)\);)f Fy(Reset)664 3016 y FG(where)27
b(the)h(design)f Fy(Set)q Fp(\()p Fy(N)o Fp(\))i FG(\002nds)e(out)h
(all)g(attrib)n(utes)g(visible)g(to)g(class)h Fy(N)f
FG(in)g(order)e(for)h(the)664 3107 y(in)m(v)n(ocation)21
b(of)i(method)e Fo(m)i FG(of)g Fy(N)g FG(to)g(be)g(e)o(x)o(ecuted)e
(properly)-5 b(,)20 b(whereas)i Fy(Reset)i FG(resets)f(the)g(en-)664
3198 y(vironment)18 b(to)j(be)f(the)g(set)h(of)f(v)n(ariables)f(that)h
(are)h(accessible)f(to)g(the)g(main)g(program)e(only:)817
3391 y Fy(Set)p Fp(\()p Fy(N)p Fp(\))j(=)1099 3405 y
Fk(df)1170 3391 y FB(f)p Fq(visibleattr)r FB(g)h Fp(:)g
Fy(true)g FB(`)817 3532 y Fq(visibleattr)1248 3500 y
Fl(0)1292 3532 y Fp(=)1373 3427 y Fj(\022)1441 3483 y
FB(f)p Fy(N)q Fo(:a)c FB(j)h Fo(a)i FB(2)h Fq(pria)q
Fp(\()p Fy(N)o Fp(\))p FB(g)c([)2175 3427 y Fj(S)2239
3506 y Fy(N)p Fl(\026)p Fy(M)2403 3483 y FB(f)p Fy(M)q
Fo(:a)h FB(j)g Fo(a)i FB(2)g Fq(prota)q Fp(\()p Fy(M)p
Fp(\))p FB(g[)1441 3524 y Fj(S)1505 3603 y Fy(M)q Fl(2)p
Fe(cname)1746 3580 y FB(f)p Fy(M)p Fo(:a)e FB(j)g Fo(a)i
FB(2)g Fq(puba)q Fp(\()p Fy(M)p Fp(\))p FB(g)3178 3427
y Fj(\023)817 3808 y Fy(Reset)g Fp(=)1060 3822 y Fk(df)1132
3808 y FB(f)p Fq(visibleattr)s FB(g)h Fp(:)g Fy(true)f
FB(`)h Fq(visibleattr)2346 3777 y Fl(0)2390 3808 y Fp(=)2471
3753 y Fj(S)2535 3832 y Fy(M)p Fl(2)p Fe(cname)2775 3808
y FB(f)p Fy(M)q Fo(:a)d FB(j)g Fo(a)i FB(2)g Fq(puba)q
Fp(\()p Fy(M)p Fp(\))p FB(g)664 4029 y FG(The)15 b(function)f
Fo(\036)1148 4052 y Fy(N)1217 4029 y FG(renames)g(the)i(attrib)n(utes)f
(and)f(methods)h(of)f(class)j Fy(N)e FG(in)h(the)f(code)f
Fi(b)r(o)r(dy)s Fp(\()p Fy(N)o Fo(:m)p Fp(\))664 4128
y FG(by)29 b(adding)e(object)h(reference)f Fy(self)i
FG(that)g(represents)f(the)h Fv(active)g FG(object)f(that)h(is)h(e)o(x)
o(ecuting)664 4228 y(its)j(method.)e(The)g(de\002nition)g(of)h
Fo(\036)1738 4251 y Fy(N)1824 4228 y FG(is)h(gi)n(v)o(en)e(in)h(Fig.)g
(4.)g(Note)g(that)g Fy(Set)h FG(and)e Fy(Reset)i FG(are)664
4328 y(used)23 b(to)h(ensure)f(data)g(encapsulation)f(that)i(is)g
(controlled)e(by)h Fq(visibleattr)k FG(and)c(the)g(well-)664
4427 y(formedness)c(condition)f(of)i(an)g(e)o(xpression.)526
4528 y(\(2\))40 b Fo(m)23 b FG(is)g(a)g(method)e(de\002ned)h(in)h
(class)g Fy(N)p FG(.)g(In)f(this)h(case,)g(the)f(beha)n(viour)f(of)h
(the)h(method)e Fy(N)o Fo(:m)j FG(is)664 4619 y(captured)19
b(by)h(its)h(body)e Fi(b)r(o)r(dy)r Fp(\()p Fy(N)p Fo(:m)p
Fp(\))h FG(and)g(the)g(en)m(vironment)d(in)j(which)g(it)h(is)g(e)o(x)o
(ecuted)805 4814 y Fo(F)854 4837 y Fy(N)p Fn(:m)982 4814
y Fp(\()p Fo(\011)8 b Fp(\))21 b(=)1178 4828 y Fk(df)1249
4814 y Fy(Set)p Fp(\()p Fy(N)p Fp(\);)13 b Fo(\036)1530
4837 y Fy(N)1583 4814 y Fp(\()p Fi(b)r(o)r(dy)r Fp(\()p
Fy(N)p Fo(:m)p Fp(\)\);)g Fy(Reset)p eop
%%Page: 14 14
14 13 bop 632 397 2665 4 v 632 397 V 630 489 4 92 v 839
461 a Fy(P)p 1091 489 V 683 w Fo(\036)1614 485 y Fy(N)1668
461 y Fp(\()p Fy(P)o Fp(\))p 2247 489 V 2264 489 V 591
w Fy(P)p 2507 489 V 390 w Fo(\036)2846 485 y Fy(N)2899
461 y Fp(\()p Fy(P)p Fp(\))p 3294 489 V 632 492 2665
4 v 632 512 V 630 603 4 92 v 802 576 a Fy(skip)p 1091
603 V 689 w(skip)p 2247 603 V 2264 603 V 569 w(c)o(haos)p
2507 603 V 344 w(c)o(haos)p 3294 603 V 632 607 2665 4
v 632 607 V 630 698 4 92 v 672 671 a(P)717 679 y FD(1)769
671 y Fm(\001)17 b Fo(b)g Fm(\003)f Fy(P)1018 679 y FD(2)p
1091 698 V 1262 671 a Fo(\036)1308 694 y Fy(N)1362 671
y Fp(\()p Fy(P)1438 679 y FD(1)1472 671 y Fp(\))h Fo(/)h(\036)1621
694 y Fy(N)1674 671 y Fp(\()p Fo(b)p Fp(\))f Fo(.)g(\036)1885
694 y Fy(N)1939 671 y Fp(\()p Fy(P)2015 679 y FD(2)2049
671 y Fp(\))p 2247 698 V 2264 698 V 211 w Fy(P)2335 679
y FD(1)2370 671 y Fp(;)c Fy(P)2450 679 y FD(2)p 2507
698 V 2555 671 a Fo(\036)2601 694 y Fy(N)2655 671 y Fp(\()p
Fy(P)2730 679 y FD(1)2765 671 y Fp(\);)g Fy(Set)p Fp(\()p
Fy(N)p Fp(\);)g Fo(\036)p Fp(\()p Fy(P)3185 679 y FD(2)3220
671 y Fp(\))p 3294 698 V 632 701 2665 4 v 632 701 V 630
793 4 92 v 739 765 a Fy(P)785 773 y FD(1)837 765 y FB(u)k
Fy(P)950 773 y FD(2)p 1091 793 V 1388 765 a Fo(\036)1434
788 y Fy(N)1488 765 y Fp(\()p Fy(P)1564 773 y FD(1)1598
765 y Fp(\))g FB(u)g Fo(\036)1759 788 y Fy(N)1813 765
y Fp(\()p Fy(P)1889 773 y FD(2)1923 765 y Fp(\))p 2247
793 V 2264 793 V 358 w Fo(b)g FB(\003)h Fy(P)p 2507 793
V 57 w Fo(\036)2566 788 y Fy(N)2620 765 y Fp(\()p Fo(b)p
Fp(\))e FB(\003)i Fp(\()p Fo(\036)2861 788 y Fy(N)2914
765 y Fp(\()p Fy(P)p Fp(\);)13 b Fy(Set)p Fp(\()p Fy(N)p
Fp(\)\))p 3295 793 V 632 796 2665 4 v 632 796 V 630 887
4 92 v 644 860 a Fq(var)19 b Fo(x)i Fp(:)g Fo(T)32 b
Fp(=)21 b Fo(e)p 1091 887 V 291 w Fq(var)f Fo(x)h Fp(:)g
Fo(T)32 b Fp(=)21 b Fo(\036)1820 883 y Fy(N)1874 860
y Fp(\()p Fo(e)p Fp(\))p 2247 887 V 2264 887 V 327 w
Fq(end)e Fo(x)p 2507 887 V 335 w Fq(end)h Fo(x)p 3294
887 V 632 891 2665 4 v 632 891 V 630 982 4 92 v 717 954
a Fy(C.ne)o(w)o Fp(\()p Fo(x)p Fp(\))p 1091 982 V 438
w Fy(C.ne)o(w)o Fp(\()p Fo(\036)1709 978 y Fy(N)1763
954 y Fp(\()p Fo(x)p Fp(\)\))p 2247 982 V 2264 982 V
380 w Fo(l)q(e)h Fp(:=)h Fo(e)p 2507 982 V 136 w(\036)2679
978 y Fy(N)2733 954 y Fp(\()p Fo(l)q(e)p Fp(\))f(:=)g
Fo(\036)3022 978 y Fy(N)3076 954 y Fp(\()p Fo(e)p Fp(\))p
3294 982 V 632 985 2665 4 v 632 985 V 630 1076 4 92 v
649 1049 a Fo(l)q(e:m)p Fp(\()p Fo(v)s(;)13 b(r)n(;)g(v)s(r)r
Fp(\))p 1091 1076 V 61 w Fo(\036)1183 1072 y Fy(N)1236
1049 y Fp(\()p Fo(l)q(e)p Fp(\))p Fo(:m)p Fp(\()p Fo(\036)1521
1072 y Fy(N)1575 1049 y Fp(\()p Fo(v)s Fp(\))p Fo(;)f(\036)1754
1072 y Fy(N)1808 1049 y Fp(\()p Fo(r)r Fp(\))p Fo(;)h(\036)1985
1072 y Fy(N)2038 1049 y Fp(\()p Fo(v)s(r)r Fp(\)\))p
2247 1076 V 2264 1076 V 121 w Fo(l)q(e:a)p 2507 1076
V 314 w(\036)2808 1072 y Fy(N)2861 1049 y Fp(\()p Fo(l)q(e)p
Fp(\))p Fo(:a)p 3294 1076 V 632 1080 2665 4 v 632 1080
V 630 1171 4 92 v 690 1144 a(m)p Fp(\()p Fo(v)s(;)f(r)n(;)h(v)s(r)r
Fp(\))p 1091 1171 V 160 w Fy(self)o Fo(:m)p Fp(\()p Fo(\036)1463
1167 y Fy(N)1517 1144 y Fp(\()p Fo(v)s Fp(\))p Fo(;)g(\036)1697
1167 y Fy(N)1750 1144 y Fp(\()p Fo(r)r Fp(\))p Fo(;)g(\036)1927
1167 y Fy(N)1981 1144 y Fp(\()p Fo(v)s(r)r Fp(\)\))p
2247 1171 V 2264 1171 V 181 w Fy(null)p 2507 1171 V 399
w(null)p 3294 1171 V 632 1174 2665 4 v 632 1174 V 630
1266 4 92 v 810 1238 a(self)p 1091 1266 V 705 w(self)p
2247 1266 V 2264 1266 V 594 w Fo(f)8 b Fp(\()p Fo(e)p
Fp(\))p 2507 1266 V 294 w Fo(f)g Fp(\()p Fo(\036)2873
1262 y Fy(N)2927 1238 y Fp(\()p Fo(e)p Fp(\)\))p 3294
1266 V 632 1269 2665 4 v 632 1269 V 630 1458 4 189 v
840 1382 a Fo(x)p 1091 1458 V 1104 1299 a Fj(n)1167 1333
y Fy(self)p Fo(:x;)55 b(x)21 b FB(2)1549 1277 y Fj(S)1613
1356 y Fy(N)p Fl(\026)p Fy(M)1790 1333 y Fq(attrname)r
Fp(\()p Fy(M)p Fp(\))1167 1430 y Fo(x;)180 b Fy(otherwise)p
2247 1458 V 2264 1458 V 2507 1458 V 3294 1458 V 632 1461
2665 4 v 632 1461 V 1541 1596 a Fz(Fig)o(.)12 b(4.)19
b FC(The)f(De\002nition)h(of)g Fo(\036)2333 1619 y Fy(N)523
1972 y Fx(4)99 b(Re\002nement)523 2172 y FG(W)-7 b(e)25
b(w)o(ould)e(lik)o(e)h(the)g(re\002nement)f(calculus)h(to)g(co)o(v)o
(er)e(not)i(only)f(the)h(early)f(de)n(v)o(elopment)e(stages)523
2271 y(of)e(requirements)f(analysis)h(and)g(speci\002cation)g(b)n(ut)g
(also)h(the)f(later)h(stages)f(of)h(design)e(and)h(imple-)523
2371 y(mentation.)j(This)h(section)g(presents)f(the)h(initial)h
(results)f(of)g(our)f(e)o(xploration)f(on)i(three)f(kinds)h(of)523
2471 y(re\002nement:)560 2637 y(1.)41 b(Re\002nement)20
b(relation)f(between)h(object)f(systems.)560 2737 y(2.)41
b(Re\002nement)20 b(relation)f(between)h(declaration)e(sections.)560
2837 y(3.)41 b(Re\002nement)20 b(relation)f(between)h(commands.)648
3003 y(From)c(no)n(w)h(on,)g(we)g(assume)g(the)h(main)e(method)g(of)h
(each)g(program)e(does)i(not)g(use)g(direct)g(\002eld)523
3103 y(access,)25 b(that)h(is,)f(e)o(xpressions)f(of)h(the)g(form)f
Fy(le)o(.a)p FG(.)h(This)g(assumption)f(actually)g(does)h(not)g(reduce)
523 3202 y(the)16 b(e)o(xpressi)n(v)o(eness)e(of)i(the)g(language,)e
(as)j(we)f(can)g(al)o(w)o(ays)g(use)h Fy(g)o(etF)m(ield)f
FG(and)g Fy(setF)m(ield)f FG(methods)g(to)523 3302 y(replace)k(direct)h
(\002eld)g(access)g(where)g(necessary)-5 b(.)18 b(In)i(what)g(follo)n
(ws,)f(we)h(gi)n(v)o(e)f(formal)g(de\002nitions)523 3402
y(for)h(the)g(abo)o(v)o(e-mentioned)15 b(re\002nement)k(relations.)523
3568 y Fw(De\002nition)h(4.)41 b Fv(Let)30 b Fo(S)1181
3576 y FD(1)1246 3568 y Fv(and)e Fo(S)1447 3576 y FD(2)1512
3568 y Fv(ar)m(e)i(object)f(pr)l(o)o(gr)o(ams)g(whic)o(h)g(have)g(the)g
(same)h(set)g(of)g(global)523 3660 y(variables)17 b Fq(glb)q
Fv(,)h(let)g Fo(I)6 b(v)s(ar)1264 3668 y Fn(S)1302 3679
y Ff(i)1331 3660 y Fv(,)18 b Fo(i)k Fp(=)f(1)p Fo(;)14
b Fp(2)p Fv(,)k(be)g(the)g(set)g(of)g(all)g(other)g(variables)f(that)g
(ar)m(e)h(fr)m(ee)h(in)f Fo(P)3236 3668 y Fn(i)3280 3660
y Fv(and)523 3751 y Fo(I)6 b(v)s(ar)681 3719 y Fl(0)679
3766 y Fn(S)717 3777 y Ff(i)764 3751 y Fv(be)18 b(the)g(set)g(of)g
(their)g(primed)g(ver)o(sions.)g Fo(S)1965 3759 y FD(1)2018
3751 y Fv(is)g(a)g FG(re\002nement)f Fo(S)2572 3759 y
FD(2)2606 3751 y Fv(,)h(denoted)e(by)i Fo(S)3070 3759
y FD(1)3126 3751 y FB(w)3186 3759 y Fn(sy)r(s)3303 3751
y Fo(S)3350 3759 y FD(2)3384 3751 y Fv(,)523 3842 y(if)j(its)g
(behaviour)e(is)i(mor)m(e)f(contr)l(ollable)f(and)g(pr)m(edictable)g
(than)g(that)h(of)h Fo(S)2726 3850 y FD(2)2760 3842 y
Fv(:)664 3992 y Fo(S)711 4000 y FD(1)767 3992 y FB(w)827
4000 y Fk(sys)923 3992 y Fo(S)970 4000 y FD(2)1026 3992
y Fp(=)1086 4006 y Fk(df)1157 3992 y FB(8)p Fq(glb)p
Fo(;)13 b Fq(glb)1469 3956 y Fl(0)1508 3992 y FB(\001)k
Fp(\()p FB(9)p Fo(I)6 b(v)s(ar)1775 4000 y Fn(S)1813
4010 y Fg(1)1848 3992 y Fo(;)13 b(I)6 b(v)s(ar)2040 3956
y Fl(0)2038 4005 y Fn(S)2076 4015 y Fg(1)2128 3992 y
FB(\001)18 b Fo(S)2214 4000 y FD(1)2248 3992 y Fp(\))j
FB(\))g Fp(\()p FB(9)p Fo(I)6 b(v)s(ar)2626 4000 y Fn(S)2664
4010 y Fg(2)2699 3992 y Fo(;)13 b(I)6 b(v)s(ar)2891 3956
y Fl(0)2889 4005 y Fn(S)2927 4015 y Fg(2)2979 3992 y
FB(\001)17 b Fo(S)3064 4000 y FD(2)3099 3992 y Fp(\))523
4167 y FG(This)29 b(indicates)f(the)h(e)o(xternal)e(beha)n(viour)g(of)h
Fo(S)1955 4175 y FD(1)1989 4167 y FG(,)h(that)g(is,)g(the)g(pairs)g(of)
f(pre-)g(and)g(post)g(global)523 4267 y(states,)21 b(is)g(a)g(subset)f
(of)g(that)g(of)g Fo(S)1483 4275 y FD(2)1518 4267 y FG(.)523
4434 y Fw(De\002nition)g(5.)41 b Fv(Let)28 b FC(cdecls)1319
4442 y FD(1)1382 4434 y Fv(and)f FC(cdecls)1721 4442
y FD(2)1784 4434 y Fv(be)h(two)g(declar)o(ation)e(sections.)h(W)-8
b(e)29 b(say)e FC(cdecls)3217 4442 y FD(1)3280 4434 y
Fv(is)h(a)523 4525 y FG(re\002nement)g Fv(of)h FC(cdecls)1189
4533 y FD(2)1224 4525 y Fv(,)g(denoted)f(by)h FC(cdecls)1862
4533 y FD(1)1918 4525 y FB(w)1978 4534 y Fn(class)2143
4525 y FC(cdecls)2330 4533 y FD(2)2364 4525 y Fv(,)h(if)g(the)f(former)
h(can)f(r)m(eplace)f(the)523 4616 y(later)21 b(in)f(any)g(object)f
(system:)664 4766 y FC(cdecls)851 4774 y FD(1)907 4766
y FB(w)967 4780 y Fk(class)1108 4766 y FC(cdecls)1295
4774 y FD(2)1351 4766 y Fp(=)1411 4780 y Fk(df)1481 4766
y FB(8)p Fy(P)e FB(\001)g Fp(\()p FC(cdecls)1842 4774
y FD(1)1893 4766 y FB(\017)h Fy(P)j FB(w)2076 4774 y
Fk(sys)2172 4766 y FC(cdecls)2359 4774 y FD(2)2410 4766
y FB(\017)d Fy(P)p Fp(\))523 4924 y Fv(wher)m(e)j Fy(P)f
Fv(stands)g(for)h(a)f(main)g(method)f Fp(\()p Fq(glb)p
Fo(;)14 b(c)p Fp(\))p Fv(.)p eop
%%Page: 15 15
15 14 bop 523 448 a FG(Intuiti)n(v)o(ely)-5 b(,)18 b(it)j(states)g
(that)f Fy(cdecls)1506 456 y FD(1)1561 448 y FG(supports)f(at)i(least)g
(the)f(same)h(set)g(of)e(services)i(as)g Fy(cdecls)3198
456 y FD(2)3233 448 y FG(.)523 605 y Fw(De\002nition)f(6.)41
b Fv(Let)27 b Fy(P)1176 613 y FD(1)1238 605 y Fv(and)e
Fy(P)1434 613 y FD(2)1495 605 y Fv(be)h(main)g(methods)f(with)i(the)f
(same)g(global)f(variables,)g(and)g Fo(c)3370 613 y FD(1)523
696 y Fv(and)19 b Fo(c)701 704 y FD(2)757 696 y Fv(be)h(commands.)f(W)
-8 b(e)21 b(de\002ne)676 836 y Fy(P)721 844 y FD(1)777
836 y FB(w)837 850 y Fk(cmd)959 836 y Fy(P)1005 844 y
FD(2)1061 836 y Fp(=)1121 850 y Fk(df)1191 836 y FB(8)p
FC(cdecls)d FB(\001)f Fp(\()p FC(cdecls)h FB(\017)f Fy(P)1811
844 y FD(1)1846 836 y Fp(\))k FB(w)1957 844 y Fk(sys)2053
836 y Fp(\()p FC(cdecls)d FB(\017)f Fy(P)2388 844 y FD(2)2422
836 y Fp(\))676 927 y Fo(c)709 935 y FD(1)765 927 y FB(w)k
Fo(c)879 935 y FD(2)935 927 y Fp(=)995 941 y Fk(df)1066
927 y FB(8)p Fo(v)p 1109 940 40 4 v 2 w(;)13 b(v)p 1182
940 V 1222 895 a Fl(0)1262 927 y FB(\001)k Fp(\()p Fo(c)1363
935 y FD(1)1419 927 y FB(\))k Fo(c)1550 935 y FD(2)1585
927 y Fp(\))523 1072 y Fv(wher)m(e)g FC(cdecls)g Fv(is)g(a)f(declar)o
(ation)f(section,)h(and)f Fo(v)p 1914 1085 V 24 w Fv(and)g
Fo(v)p 2120 1085 V 2160 1041 a Fl(0)2203 1072 y Fv(ar)m(e)h(fr)m(ee)h
(variables)f(in)g Fo(c)2926 1080 y FD(1)2982 1072 y Fv(and)f
Fo(c)3160 1080 y FD(2)3195 1072 y Fv(.)523 1237 y FG(Intuiti)n(v)o(ely)
-5 b(,)22 b(it)j(denotes)e(that)i Fy(P)1450 1245 y FD(1)1510
1237 y FG(does)f(better)g(than)f Fy(P)2114 1245 y FD(2)2149
1237 y FG(,)h(i.e.)g(ensures)g(a)h(stronger)e(postcondition)523
1337 y(with)d(a)h(weak)o(er)f(precondition,)d(under)i(the)h(same)g(en)m
(vironment.)648 1436 y(W)-7 b(e)30 b(ha)n(v)o(e)f(already)f(gi)n(v)o
(en)g(some)h(re\002nement)e(la)o(ws)j(for)f(re\002ning)f(program)f
(commands)g(in)523 1536 y(Section)17 b(3.4,)g(which)g(are)h(to)g
(ensure)f(the)g(correctness)g(of)g(the)h(semantic)g(model.)e(In)i(what)
f(follo)n(ws,)523 1636 y(we)23 b(\002rst)g(gi)n(v)o(e)e(a)i(group)d(of)
i(re\002nement)f(la)o(ws)i(that)f(in)h(f)o(act)f(formalize)f
(principles)h(of)g(ref)o(actoring)523 1735 y([13].)14
b(After)h(that,)g(we)h(will)g(present)e(three)h(re\002nement)f(la)o(ws)
i(which)f(capture)f(three)h(k)o(e)o(y)f(principles)523
1835 y(and)20 b(patterns)h(in)g(object-oriented)d(design,)i(that)h(are)
g(well)h(kno)n(wn)d(as)j(the)f Fv(Expert)g(P)-7 b(attern)p
FG(,)21 b Fv(High)523 1934 y(Cohesion)e(P)-7 b(attern)21
b FG(and)e Fv(Low)i(Coupling)e(P)-7 b(attern)20 b FG([22,)12
b(24].)648 2034 y(W)-7 b(e)19 b(\002rst)f(introduce)e(some)i
(notations.)e(W)-7 b(e)20 b(use)e Fy(N)o Fp([)p Fy(supc)r
Fo(;)13 b Fy(pri)p Fo(;)g Fy(pr)m(ot)p Fo(;)h Fy(pub)q
Fo(;)f Fy(ops)q Fp(])18 b FG(to)g(denote)f(a)h(well-)523
2134 y(formed)j(class)j(declaration)e(that)h(declares)f(the)h(class)h
Fy(N)g FG(that)f(has)g Fy(supc)h FG(as)g(its)g(direct)f(superclass;)523
2233 y Fy(pri)p FG(,)h Fy(pr)m(ot)f FG(and)g Fy(pub)i
FG(as)f(its)g(sets)g(of)f(pri)n(v)n(ate,)e(protected)h(and)h(public)f
(attrib)n(utes;)h(and)f Fy(ops)j FG(as)f(its)g(set)523
2333 y(of)d(methods.)f Fy(supc)j FG(is)f(al)o(w)o(ays)g(of)f(either)g
(a)h(class)g(name)f Fy(M)p FG(,)g(when)g Fy(M)h FG(is)g(the)g(direct)f
(superclass)g(of)523 2433 y Fy(N)p FG(,)h(or)g FB(;)h
FG(when)f Fy(N)h FG(has)f(no)g(superclass.)f(W)-7 b(e)24
b(may)d(also)i(only)e(refer)h(to)g(some,)g(or)g(e)n(v)o(en)f(none)g(of)
h Fy(M)p FG(,)523 2532 y Fy(pri)p FG(,)d Fy(pr)m(ot)p
FG(,)g Fy(pub)q FG(,)g Fy(ops)h FG(when)e(we)h(talk)f(about)g(a)h
(class)g(declaration.)e(F)o(or)h(e)o(xample,)f Fy(N)i
FG(denotes)f(a)h(class)523 2632 y(declaration)j(for)g
Fy(N)p FG(,)h(and)g Fy(N)p Fp([)p Fy(pri)p Fp(])h FG(a)g(class)g
(declaration)d(that)i(declares)g(the)g(class)h Fy(N)f
FG(that)h(has)f Fy(pri)h FG(as)523 2731 y(its)d(pri)n(v)n(ate)e(attrib)
n(utes.)523 2896 y Fw(Law)i(5)41 b Fv(The)20 b(or)m(der)g(of)g(the)h
(class)f(declar)o(ations)f(in)h(a)h(declar)o(ation)d(section)i(is)h
(not)f(essential:)664 3046 y Fy(N)714 3054 y FD(1)749
3046 y Fp(;)13 b Fo(:)g(:)g(:)g Fp(;)g Fy(N)969 3054
y Fn(n)1033 3046 y Fp(=)21 b Fy(N)1164 3054 y Fn(i)1186
3064 y Fg(1)1223 3046 y Fp(;)13 b Fo(:)g(:)g(:)g Fp(;)g
Fy(N)1443 3054 y Fn(i)1465 3062 y Ff(n)648 3204 y Fv(wher)m(e)20
b Fy(N)918 3212 y Fn(i)965 3204 y Fv(is)h(a)f(class)h(declar)o(ation)e
(and)g Fo(i)1864 3212 y FD(1)1899 3204 y Fo(;)13 b(:)g(:)g(:)g(;)g(i)
2095 3212 y Fn(n)2159 3204 y Fv(is)21 b(a)f(permutation)f(of)h
FB(f)p Fp(1)p Fo(;)14 b(:)f(:)h(:)f(;)g(n)p FB(g)q Fv(.)523
3377 y FG(A)20 b(la)o(w)g(lik)o(e)f(this)h(may)f(look)g(utterly)g(tri)n
(vial,)g(b)n(ut)g(it)i(is)f(not)f(so)h(ob)o(vious)e(for)h(a)g(semantic)
h(de\002nition)523 3477 y(of)g(a)h(class)h(declaration)d(to)i
(guarantee)e(this)i(la)o(w)-5 b(.)20 b(F)o(or)g(e)o(xample,)f(if)i(the)
g(the)g(pre-condition)c(of)j(the)523 3576 y(class)27
b(declaration)d(requires)g(that)i(the)f(direct)g(superclass)h(has)f
(been)g(declared,)f(this)i(la)o(w)g(w)o(ould)523 3676
y(not)20 b(hold.)648 3776 y(The)f(ne)o(xt)h(la)o(w)g(says)h(that)f
(more)g(services)g(may)g(come)f(from)g(more)h(classes.)523
3934 y Fw(Law)h(6)41 b Fv(If)20 b(a)g(class)h(name)f
Fy(N)g Fv(is)h(not)f(in)h FC(cdecls)p Fv(,)g FC(cdecls)h
FB(v)f Fy(N)p Fp([)p Fy(M)p Fo(;)14 b Fy(pri)p Fo(;)f
Fy(pr)m(ot)p Fo(;)g Fy(pub)q Fo(;)g Fy(ops)q Fp(];)h
FC(cdecls)p Fo(:)523 4092 y FG(Introducing)j(a)k(pri)n(v)n(ate)e
(attrib)n(ute)h(has)g(no)g(ef)n(fect.)523 4250 y Fw(Law)h(7)41
b Fv(If)29 b(neither)g Fy(N)h Fv(nor)f(any)g(of)h(its)g(super)m
(classes)g(and)e(subclasses)h(in)h FC(cdecls)h Fv(has)e
Fo(x)g Fv(as)h(an)523 4350 y(attrib)n(ute)20 b Fy(N)p
Fp([)p Fy(pri)q Fp(];)13 b FC(cdecls)22 b FB(v)f Fy(N)p
Fp([)p Fy(pri)d FB([)f(f)p Fo(T)29 b(x)21 b Fp(=)g Fo(d)p
FB(g)p Fp(];)14 b FC(cdecls)q Fv(.)523 4508 y FG(Changing)19
b(a)h(pri)n(v)n(ate)f(attrib)n(ute)h(into)g(a)h(protected)d(one)i(may)g
(support)f(more)g(services.)523 4666 y Fw(Law)i(8)41
b Fy(N)o Fp([)p Fy(pri)18 b FB([)f(f)p Fo(T)30 b(x)21
b Fp(=)g Fo(d)p FB(g)p Fo(;)13 b Fy(pr)m(ot)p Fp(];)h
FC(cdecls)22 b FB(v)f Fy(N)p Fp([)p Fy(pri)p Fo(;)13
b Fy(pr)m(ot)18 b FB([)f(f)p Fo(T)29 b(x)21 b Fp(=)g
Fo(d)p FB(g)p Fp(];)14 b FC(cdecls)q Fv(.)523 4825 y
FG(Similarly)-5 b(,)18 b(changing)e(a)j(protected)e(attrib)n(ute)h(to)h
(a)g(public)f(attrib)n(ute)g(re\002nes)g(the)h(declaration)e(too.)648
4924 y(Adding)h(a)j(ne)n(w)f(method)f(can)h(re\002ne)g(a)g
(declaration.)p eop
%%Page: 16 16
16 15 bop 523 448 a Fw(Law)21 b(9)41 b Fv(If)24 b Fo(m)h
Fv(is)g(not)f(de\002ned)f(in)h Fy(N)p Fv(,)h(let)g Fo(m)p
Fp(\()p Fy(par)o(as)q Fp(\))p FB(f)p Fo(c)p FB(g)g Fv(be)g(a)f(method)f
(with)i(distinct)g(par)o(ameter)o(s)523 540 y Fy(par)o(as)d
Fv(and)d(a)h(command)f Fo(c)p Fv(.)i(Then)664 702 y Fy(N)p
Fp([)p Fy(ops)q Fp(];)14 b FC(cdecls)22 b FB(v)f Fy(N)p
Fp([)p Fy(ops)d FB([)f(f)p Fo(m)p Fp(\()p Fy(par)o(as)q
Fp(\))p FB(f)p Fo(c)p FB(gg)p Fp(];)e FC(cdecls)648 872
y Fv(pr)l(o)o(vided)k(that)h(ther)m(e)g(is)h(no)f(super)m(class)g(of)h
Fy(N)f Fv(in)h FC(cdecls)p Fv(.)523 1052 y Fw(Law)g(10)40
b Fv(W)-8 b(e)21 b(can)f(r)m(e\002ne)g(a)g(method)f(to)h(r)m(e\002ne)g
(a)g(declar)o(ation.)f(If)h Fo(c)2501 1060 y FD(1)2557
1052 y FB(v)h Fo(c)2671 1060 y FD(2)2706 1052 y Fv(,)664
1215 y Fy(N)p Fp([)p Fy(ops)d FB([)f(f)p Fo(m)p Fp(\()p
Fy(par)o(as)q Fp(\))p FB(f)p Fo(c)1330 1223 y FD(1)1366
1215 y FB(gg)p Fp(];)d FC(cdecls)22 b FB(v)f Fy(N)p Fp([)p
Fy(ops)d FB([)f(f)p Fo(m)p Fp(\()p Fy(par)o(as)q Fp(\))p
FB(f)p Fo(c)2453 1223 y FD(2)2488 1215 y FB(gg)p Fp(];)e
FC(cdecls)648 1402 y FG(Inheritance)j(introduces)g(re\002nement.)523
1565 y Fw(Law)j(11)40 b Fv(If)21 b(none)e(of)h(the)g(attrib)n(utes)h
(of)f Fy(N)h Fv(is)g(de\002ned)d(in)j Fy(M)g Fv(or)f(any)g(super)m
(class)g(of)g Fy(M)h Fv(in)g FC(cdecls)p Fv(,)664 1728
y Fy(N)p Fp([)p FB(;)p Fo(;)14 b Fy(pri)p Fo(;)f Fy(pr)m(ot)p
Fo(;)h Fy(pub)q Fo(;)f Fy(ops)q Fp(];)g FC(cdecls)22
b FB(v)f Fy(N)p Fp([)p Fy(M)q Fo(;)13 b Fy(pri)p Fo(;)g
Fy(pr)m(ot)p Fo(;)g Fy(pub)q Fo(;)h Fy(ops)p Fp(];)g
FC(cdecls)648 1897 y FG(W)-7 b(e)21 b(can)f(introduce)e(a)j(superclass)
f(as)h(gi)n(v)o(en)e(in)h(the)g(follo)n(wing)f(la)o(w)-5
b(.)523 2060 y Fw(Law)21 b(12)40 b Fv(Let)32 b Fy(C)1013
2068 y FD(1)1069 2060 y Fp(=)21 b Fy(N)p Fp([)p FB(;)p
Fo(;)13 b Fy(pri)18 b FB([)f Fo(S;)c Fy(pr)m(ot)p Fo(;)g
Fy(pub)q Fo(;)g Fy(ops)q Fp(])q Fv(,)31 b Fy(C)2076 2068
y FD(2)2132 2060 y Fp(=)21 b Fy(N)p Fp([)p FB(f)p Fy(M)q
FB(g)p Fo(;)13 b Fy(pri)p Fo(;)g Fy(pr)m(ot)q Fo(;)g
Fy(pub)q Fo(;)g Fy(ops)q Fp(])p Fv(.)31 b(Assume)h Fy(M)523
2151 y Fv(is)21 b(not)f(declar)m(ed)f(in)i FC(cdecls)p
Fv(,)664 2314 y Fy(C)714 2322 y FD(1)749 2314 y Fp(;)13
b FC(cdecls)22 b FB(v)f Fy(C)1122 2322 y FD(2)1156 2314
y Fp(;)13 b Fy(M)q Fp([)p FB(;)p Fo(;)h FB(;)p Fo(;)f(S;)g
FB(;)p Fo(;)h FB(;)p Fp(];)f FC(cdecls)523 2484 y FG(W)-7
b(e)21 b(can)f(mo)o(v)o(e)f(some)h(attrib)n(utes)g(of)g(a)h(class)g(to)
f(its)h(superclass.)523 2664 y Fw(Law)g(13)40 b Fv(If)21
b(all)f(the)g(subclasses)h(of)f Fy(M)h Fv(b)n(ut)f Fy(N)h
Fv(do)e(not)h(have)g(attrib)n(utes)g(in)h Fo(S)t Fv(,)f(then)664
2827 y Fy(M)p Fp([)p Fy(pr)m(ot)869 2846 y FD(1)904 2827
y Fp(];)13 b Fy(N)p Fp([)p FB(f)p Fy(M)q FB(g)p Fo(;)g
Fy(pr)m(ot)18 b FB([)f Fo(S)t Fp(];)c FC(cdecls)23 b
FB(v)e Fy(M)p Fp([)p Fy(pr)m(ot)2010 2846 y FD(1)2062
2827 y FB([)c Fo(S)t Fp(];)d Fy(N)p Fp([)p FB(f)p Fy(M)q
FB(g)p Fo(;)f Fy(pr)m(ot)p Fp(];)h FC(cdecls)523 3014
y FG(W)-7 b(e)19 b(can)e(mo)o(v)o(e)f(the)i(common)d(attrib)n(utes)j
(of)f(the)h(direct)f(subclasses)h(of)f(a)h(class)g(to)g(the)g(class)g
(itself.)523 3194 y Fw(Law)j(14)40 b Fv(If)21 b Fy(M)g
Fv(has)f Fy(N)1166 3202 y FD(1)1200 3194 y Fo(;)13 b(:)g(:)h(:)f(;)g
Fy(N)1421 3203 y Fn(k)1479 3194 y Fv(as)21 b(its)g(dir)m(ect)g
(subclasses,)676 3355 y Fy(M)p Fp([)p Fy(pr)m(ot)q Fp(];)13
b Fy(N)986 3363 y FD(1)1020 3355 y Fp([)p Fy(pr)m(ot)1163
3375 y Fn(i)1206 3355 y FB([)18 b Fo(S)t Fp(];)13 b Fo(:)g(:)h(:)f
Fp(;)g Fy(N)1568 3364 y Fn(k)1606 3355 y Fp([)p Fy(pr)m(ot)1748
3375 y Fn(k)1803 3355 y FB([)18 b Fo(S)t Fp(];)13 b FC(cdecls)676
3446 y FB(v)21 b Fy(M)p Fp([)p Fy(pr)m(ot)d FB([)f Fo(S)t
Fp(];)d Fy(N)1203 3454 y FD(1)1238 3446 y Fp([)p Fy(pr)m(ot)1381
3466 y FD(1)1415 3446 y Fp(];)g Fo(:)f(:)g(:)g Fp(;)g
Fy(N)1657 3455 y Fn(k)1695 3446 y Fp([)p Fy(pr)m(ot)1838
3466 y Fn(k)1876 3446 y Fp(];)g FC(cdecls)523 3627 y
FG(W)-7 b(e)21 b(can)f(mo)o(v)o(e)f(some)h(methods)f(of)h(a)h(class)g
(to)f(its)h(superclass.)523 3789 y Fw(Law)g(15)40 b Fv(Let)26
b Fo(m)p Fp(\()p Fy(par)o(as)p Fp(\))p FB(f)p Fo(c)p
FB(g)h Fv(be)e(a)g(methods)f(of)h Fy(N)p Fv(,)g(b)n(ut)g(not)g(a)g
(method)f(of)h(its)h(dir)m(ect)f(super)m(class)523 3881
y Fy(M)p Fv(.)c(Assume)f(that)g Fo(c)h Fv(only)f(in)m(volves)f(the)i
(pr)l(otected)e(attrib)n(utes)i(of)f Fy(M)p Fv(,)h(then)676
4041 y Fy(M)p Fp([)p Fy(ops)q Fp(];)14 b Fy(N)o Fp([)p
FB(f)p Fy(M)q FB(g)p Fo(;)g Fy(ops)1267 4061 y FD(1)1318
4041 y FB([)k(f)p Fo(m)p Fp(\()p Fy(par)o(as)p 1523 4069
170 4 v 1 w Fp(\))p FB(f)p Fo(c)p FB(gg)p Fp(];)c FC(cdecls)676
4136 y FB(v)21 b Fy(M)p Fp([)p Fy(ops)d FB([)g(f)p Fo(m)p
Fp(\()p Fy(par)o(as)p 1166 4164 V 1 w Fp(\))p FB(f)p
Fo(c)p FB(gg)p Fp(];)c Fy(N)p Fp([)p FB(f)p Fy(M)q FB(g)p
Fo(;)g Fy(ops)1916 4156 y FD(1)1951 4136 y Fp(];)f FC(cdecls)523
4303 y FG(W)-7 b(e)21 b(can)f(remo)o(v)o(e)f(a)h(redundant)e(method)h
(from)g(a)i(subclass.)523 4483 y Fw(Law)g(16)40 b Fv(Assume)30
b(that)g Fy(N)h Fv(has)f Fy(M)g Fv(as)h(its)g(dir)m(ect)f(super)m
(class)g(and)f Fo(m)p Fp(\()p Fy(par)o(as)q Fp(\))p FB(f)p
Fo(c)p FB(g)22 b(2)g Fy(ops)c FB(\\)f Fy(ops)3350 4503
y FD(1)3384 4483 y Fv(,)523 4574 y(and)i Fo(c)i Fv(only)f(in)m(volves)g
(the)g(pr)l(otected)f(attrib)n(utes)i(of)f Fy(M)p Fv(,)676
4735 y Fy(M)p Fp([)p Fy(ops)q Fp(];)14 b Fy(N)o Fp([)p
FB(f)p Fy(M)q FB(g)p Fo(;)g Fy(ops)1267 4754 y FD(1)1301
4735 y Fp(];)g FC(cdecls)22 b FB(v)f Fy(M)p Fp([)p Fy(ops)q
Fp(];)14 b Fy(N)p Fp([)p FB(f)p Fy(M)q FB(g)p Fo(;)f
Fy(ops)2237 4754 y FD(1)2271 4735 y FB(nf)p Fo(m)p Fp(\()p
Fy(par)o(as)p 2445 4763 V 2 w Fp(\))p FB(f)p Fo(c)p FB(gg)p
Fp(];)i FC(cdecls)648 4924 y FG(W)-7 b(e)21 b(can)f(remo)o(v)o(e)e(an)o
(y)i(unused)f(pri)n(v)n(ate)g(attrib)n(utes.)p eop
%%Page: 17 17
17 16 bop 523 448 a Fw(Law)21 b(17)40 b Fv(If)21 b Fp(\()p
Fo(T)29 b(x)p Fp(\))20 b Fv(is)h(a)f(private)g(attrib)n(ute)g(of)h
Fy(N)o Fp([)p Fy(pri)q Fp(])g Fv(that)f(is)h(not)f(used)g(in)g(any)g
(command)e(of)j Fy(N)p Fv(,)664 621 y Fy(N)p Fp([)p Fy(pri)q
Fp(];)13 b FC(cdecls)22 b FB(v)f Fy(N)p Fp([)p Fy(pri)p
FB(nf)p Fo(T)30 b(x)21 b Fp(=)g Fo(d)p FB(g)p Fp(];)14
b FC(cdecls)523 798 y FG(W)-7 b(e)21 b(can)f(remo)o(v)o(e)f(an)o(y)g
(unused)g(protected)g(attrib)n(utes.)523 991 y Fw(Law)i(18)40
b Fv(If)21 b Fp(\()p Fo(T)29 b(x)20 b Fp(=)i Fo(d)p Fp(\))e
Fv(is)h(a)f(pr)l(otected)g(attrib)n(ute)g(of)g Fy(N)p
Fp([)p Fy(pr)m(ot)p Fp(])i Fv(that)d(is)j(not)d(used)h(in)h(any)e
(command)523 1082 y(of)h Fy(N)h Fv(and)e(any)h(subclass)g(of)g
Fy(N)p Fv(,)664 1255 y Fy(N)p Fp([)p Fy(pr)m(ot)q Fp(];)13
b FC(cdecls)22 b FB(v)f Fy(N)p Fp([)p Fy(pr)m(ot)p FB(nf)p
Fo(T)30 b(x)21 b Fp(=)g Fo(d)p FB(g)p Fp(];)14 b FC(cdecls)523
1452 y FG(The)22 b(e)o(xpert)e(patterns)i(says)g(that)g(a)g(class)h(is)
g(allo)n(wed)e(to)h(dele)o(gate)f(some)g(tasks)i(to)f(its)h(associated)
523 1552 y(classes)e(that)g(contain)e(the)h(information)e(for)h(the)i
(tasks.)523 1745 y Fw(Law)g(19)40 b Fp(\()p Fi(Exp)r(ert)19
b(P)n(attern)h(for)f(Resp)r(onsibilit)n(y)k(Assignmen)n(t)o
Fp(\))h Fv(Suppose)d Fy(M)p Fp([)p Fy(ops)3140 1764 y
FD(1)3175 1745 y Fp(])j Fv(is)g(de-)523 1836 y(\002ned)19
b(in)i Fy(cdecls)p Fv(,)g Fo(m)p Fp(\()p Fy(par)o(as)1285
1856 y FD(1)1320 1836 y Fp(\))p FB(f)p Fo(c)1421 1844
y FD(1)1456 1836 y FB(g)h(2)f Fy(ops)1692 1856 y FD(1)1727
1836 y Fv(,)f(and)g Fp(\()p Fy(M)e Fo(o)p Fp(\))j Fv(be)f(an)g(attrib)n
(ute)g(of)g Fy(N)p Fv(,)h(then)676 2009 y Fy(N)p Fp([)p
Fy(ops)d FB([)f(f)p Fo(n)p Fp(\()p Fy(par)o(as)r Fp(\))p
FB(f)p Fo(c)p Fp([)e(~)-53 b Fo(c)1375 2017 y FD(1)1410
2009 y Fp(])p FB(gg)p Fp(];)15 b Fy(cdecls)22 b FB(v)f
Fy(N)p Fp([)p Fy(ops)d FB([)f(f)p Fo(n)p Fp(\()p Fy(par)o(as)r
Fp(\))p FB(f)p Fo(c)p Fp([)p Fo(o:m)p Fp(])p FB(gg)p
Fp(];)f Fy(cdecls)648 2186 y Fv(Her)m(e)24 b Fo(c)868
2194 y FD(1)928 2186 y Fv(is)i(obtained)c(fr)l(om)40
b Fp(~)-53 b Fo(c)1535 2194 y FD(1)1595 2186 y Fv(by)24
b(r)m(eplacing)f Fo(o:x)i Fv(with)g Fo(x)p Fv(,)g(that)f(is,)h
Fo(c)2711 2194 y FD(1)2767 2186 y Fp(=)36 b(~)-53 b Fo(c)2881
2194 y FD(1)2916 2186 y Fp([)p Fo(x=o:x)p Fp(])p Fv(.)25
b(Notice)523 2285 y(that)40 b Fp(~)-53 b Fo(c)711 2293
y FD(1)772 2285 y Fv(does)25 b(not)h(r)m(efer)g(to)g(any)f(attrib)n
(ute)g(of)h Fy(N)p Fv(.)g(While)f Fo(c)p Fp([)16 b(~)-54
b Fo(c)2308 2293 y FD(1)2344 2285 y Fp(])26 b Fv(denotes)f(that)40
b Fp(~)-53 b Fo(c)2859 2293 y FD(1)2920 2285 y Fv(occur)o(s)26
b(as)g(part)523 2385 y(of)19 b(command)e Fo(c)p Fv(,)j(and)e
Fo(c)p Fp([)p Fo(o:m)p Fp(])j Fv(denotes)d(that)g(the)h(command)f
(obtained)f(fr)l(om)i Fo(c)p Fp([)d(~)-54 b Fo(c)2843
2393 y FD(1)2879 2385 y Fp(])20 b Fv(by)e(substituting)523
2485 y Fo(o:m)j Fv(for)35 b Fp(~)-52 b Fo(c)821 2493
y FD(1)855 2485 y Fv(.)21 b(Note)g(also)f(that)g Fy(par)o(as)1553
2504 y FD(1)1609 2485 y FB(\022)h Fy(par)o(as)q Fv(.)523
2682 y FG(This)c(la)o(w)g(is)h(illustrated)f(by)f(the)h(UML)g(class)h
(diagram)e(in)h(Figure)f(5.)h(It)g(will)g(become)f(an)h(equation)523
2782 y(if)k Fo(x)f FG(is)h(a)g(public)e(attrib)n(ute)h
Fo(M)8 b FG(.)1246 4059 y
 currentpoint currentpoint translate 0.66963 0.60173 scale neg exch
neg exch translate
 1246 4059 a @beginspecial 0
@llx 0 @lly 254 @urx 212 @ury 2540 @rwi @setspecial
%%BeginDocument: fundecomp.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\nus\unuiist\COOL\fundecomp.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 254 212
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 254 212
%AI3_TileBox: 0 0 254 212
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 193.0800 m
  87.1200 193.0800 L
  87.1200 176.5200 L
  4.3200 176.5200 L
  4.3200 193.0800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 41.7600 181.5600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 176.5200 m
  87.1200 176.5200 L
  87.1200 149.2800 L
  4.3200 149.2800 L
  4.3200 176.5200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 37.4400 159.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 43.2000 159.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(:\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.0800 159.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 149.2800 m
  87.1200 149.2800 L
  87.1200 114.4800 L
  4.3200 114.4800 L
  4.3200 149.2800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 16.5600 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 22.3200 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 25.2000 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 28.8000 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 34.5600 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 37.4400 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 43.2000 126.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 47.5200 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 51.1200 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.8800 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 59.7600 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.8000 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.4000 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.2800 129.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  4.3200 177.2400 m
  86.4000 177.2400 L
S
U
u
  4.3200 150.0000 m
  86.4000 150.0000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  3.6000 113.7600 m
  87.8400 113.7600 L
  87.8400 193.8000 L
  3.6000 193.8000 L
  3.6000 113.7600 L
s
  45.7200 153.7800 m
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  16.2000 187.9200 m
  28.0800 187.9200 L
  28.0800 207.8400 L
  16.2000 207.8400 L
  16.2000 187.9200 L
n
  22.1400 197.8800 m
F
U
%AI5_File:
%AI5_BeginRaster
[ 1.5600 0.0000 0.0000 -1.5600 121.6800 81.6000 ] 0 0 18 15 18 15 8 3 0 0 0 0
XI
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFF000000000000000000000000000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%AI5_EndRaster
B
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  121.6800 81.4800 m
  149.8800 81.4800 L
  149.8800 105.0000 L
  121.6800 105.0000 L
  121.6800 81.4800 L
n
  135.7800 93.2400 m
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  4.3200 74.4000 m
  87.1200 74.4000 L
  87.1200 51.6000 L
  4.3200 51.6000 L
  4.3200 74.4000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 41.0400 59.6400 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 51.6000 m
  87.1200 51.6000 L
  87.1200 30.9600 L
  4.3200 30.9600 L
  4.3200 51.6000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 43.2000 37.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 30.9600 m
  87.1200 30.9600 L
  87.1200 4.3200 L
  4.3200 4.3200 L
  4.3200 30.9600 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 24.8400 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 34.2000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 37.0800 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 40.6800 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.4400 12.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.7600 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 54.3600 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 59.4000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.0000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  4.3200 52.3200 m
  86.4000 52.3200 L
S
U
u
  4.3200 31.6800 m
  86.4000 31.6800 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  3.6000 3.6000 m
  87.8400 3.6000 L
  87.8400 75.1200 L
  3.6000 75.1200 L
  3.6000 3.6000 L
s
  45.7200 39.3600 m
B
U
u
  0.000 0.000 0.000 1.000 K
  45.7200 111.1200 m
  45.7200 82.3200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  45.7200 75.1200 m
  42.1200 85.2000 L
  49.2000 85.2000 L
  45.7200 75.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  166.3200 193.0800 m
  249.1200 193.0800 L
  249.1200 176.5200 L
  166.3200 176.5200 L
  166.3200 193.0800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 203.7600 181.5600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 176.5200 m
  249.1200 176.5200 L
  249.1200 149.2800 L
  166.3200 149.2800 L
  166.3200 176.5200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 199.4400 159.3600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.2000 159.3600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(:\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.0800 159.3600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 149.2800 m
  249.1200 149.2800 L
  249.1200 114.4800 L
  166.3200 114.4800 L
  166.3200 149.2800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 185.0400 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.8000 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.6800 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 197.2800 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.0400 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.9200 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.6800 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.5600 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 223.9200 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.8000 127.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 177.2400 m
  248.4000 177.2400 L
S
U
u
  166.3200 150.0000 m
  248.4000 150.0000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  165.6000 113.7600 m
  249.8400 113.7600 L
  249.8400 193.8000 L
  165.6000 193.8000 L
  165.6000 113.7600 L
s
  207.7200 153.7800 m
B
U
u
  0.000 0.000 0.000 1.000 K
  207.7200 113.7600 m
  207.7200 84.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  207.7200 77.7600 m
  204.1200 87.8400 L
  211.2000 87.8400 L
  207.7200 77.7600 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  166.3200 74.4000 m
  249.1200 74.4000 L
  249.1200 51.6000 L
  166.3200 51.6000 L
  166.3200 74.4000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 203.0400 59.6400 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 51.6000 m
  249.1200 51.6000 L
  249.1200 30.9600 L
  166.3200 30.9600 L
  166.3200 51.6000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 205.2000 37.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 30.9600 m
  249.1200 30.9600 L
  249.1200 4.3200 L
  166.3200 4.3200 L
  166.3200 30.9600 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 186.8400 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.2000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 199.0800 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.6800 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.4400 12.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.7600 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.3600 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.4000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.0000 15.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  166.3200 52.3200 m
  248.4000 52.3200 L
S
U
u
  166.3200 31.6800 m
  248.4000 31.6800 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  165.6000 3.6000 m
  249.8400 3.6000 L
  249.8400 75.1200 L
  165.6000 75.1200 L
  165.6000 3.6000 L
s
  207.7200 39.3600 m
B
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1246 4059 a
 currentpoint currentpoint translate 1 0.66963 div 1 0.60173 div scale
neg exch neg exch translate
 1246 4059 a 1227 4163 a Fz(Fig)o(.)k(5.)18
b FC(Object-oriented)i(Functional)f(decomposition)648
4390 y FG(T)-7 b(o)33 b(understand)e(the)i(abo)o(v)o(e)f(la)o(w)-5
b(,)32 b(let)i(us)g(consider)e(a)h(simple)h(e)o(xample)d(from)i(the)g
(afore-)523 4489 y(mentioned)18 b(bank)h(system)i(in)f(Section)g(3.5.)
648 4584 y(Consider)26 b(method)g Fy(g)o(etBalance)j
FG(of)e(class)i Fv(Bank)p FG(.)d(Initially)-5 b(,)26
b(we)i(might)e(ha)n(v)o(e)h(the)g(follo)n(wing)523 4676
y(design)20 b(for)f(it:)676 4847 y Fy(g)o(etBalance)q
Fp(\()p Fy(Int)g(aID)p Fo(;)13 b Fy(Int)19 b(r)m(es)p
Fo(;)13 b FB(;)p Fp(\))22 b(=)1667 4861 y Fk(df)676 4938
y FB(9)p Fy(a)f FB(2)h Fo(\006)t Fp(\()p Fy(Account)p
Fp(\))17 b FB(\001)h Fy(a.aNo)k Fp(=)f Fy(aID)g FB(`)g(9)p
Fy(a)h FB(2)f Fo(\006)t Fp(\()p Fy(Account)q Fp(\))c
FB(\001)g Fy(a)q Fo(:)p Fy(aNo)22 b Fp(=)f Fy(aID)h FB(\))f
Fy(r)m(es)2970 4907 y Fl(0)3014 4938 y Fp(=)g Fy(a.balance)p
eop
%%Page: 18 18
18 17 bop 523 448 a FG(Note)18 b(that)g(it)h(requires)e(the)h(attrib)n
(utes)g(of)f(class)i Fv(Account)e FG(to)h(be)g(visible)g(\(public\))e
(to)i(other)f(classes)523 540 y(\(lik)o(e)j Fv(Bank)q
FG(\).)f(Applying)g(La)o(w)h(19)g(to)g(it,)h(we)f(can)g(get)g(the)h
(follo)n(wing)d(design:)676 692 y Fy(g)o(etBalance)q
Fp(\()p Fy(Int)h(aID)p Fo(;)13 b Fy(Int)19 b(r)m(es)p
Fo(;)13 b FB(;)p Fp(\))22 b(=)1667 706 y Fk(df)676 783
y FB(9)p Fy(a)f FB(2)h Fo(\006)t Fp(\()p Fy(Account)p
Fp(\))17 b FB(\001)h Fy(a.aNo)p Fp(=)p Fy(aID)k FB(`)f(9)p
Fy(a)g FB(2)h Fo(\006)t Fp(\()p Fy(Account)p Fp(\))17
b FB(\001)h Fy(a)p Fo(:)p Fy(aNo)q Fp(=)p Fy(aID)j FB(\))g
Fy(r)m(es)2885 752 y Fl(0)2907 783 y Fp(=)p Fy(a.g)o(etBalance)q
Fp(\(\))523 938 y FG(The)f(re\002nement)f(dele)o(gates)g(the)h(task)g
(of)g(balance)g(lookup)e(to)i(the)h Fv(Account)f FG(class.)648
1037 y(It)g(is)h(important)d(to)i(note)g(that)g(method)f(in)m(v)n
(ocation,)e(or)j(in)g(another)f(term,)g(object)h(interaction)523
1137 y(tak)o(es)g(time.)f(Therefore,)d(this)k(object-oriented)d
(re\002nement)g(\(and)i(the)g(one)g(described)f(in)h(La)o(w)g(21)523
1237 y(later\))24 b(usually)g(e)o(xchanges)e(ef)n(\002cienc)o(y)h(for)h
(\223simplicity\224,)g(ease)h(of)f(reuse)g(and)g(maintainability)-5
b(,)523 1336 y(and)20 b(data)g(encapsulation.)648 1436
y(After)j(functionalities)g(are)g(dele)o(gated)f(to)i(associated)g
(classes,)g(data)g(encapsulation)e(can)i(be)523 1536
y(applied)k(to)i(increase)f(security)g(and)g(maintainability)-5
b(.)27 b(The)i(visibility)g(of)g(an)g(attrib)n(ute)g(can)h(be)523
1635 y(changed)c(from)g(public)h(to)h(protected,)e(or)h(from)g
(protected)f(to)i(pri)n(v)n(ate)e(under)h(certain)g(circum-)523
1735 y(stances.)20 b(This)h(is)g(captured)d(in)j(the)f(follo)n(wing)f
(la)o(w)-5 b(.)523 1912 y Fw(Law)21 b(20)40 b Fp(\()p
Fi(Data)19 b(Encapsulation)r Fp(\))i Fv(Suppose)d Fy(M)p
Fp([)p Fy(pri)q Fo(;)13 b Fy(pr)m(ot)p Fo(;)g Fy(pub)r
Fp(])p Fv(,)20 b(and)g Fp(\()p Fo(T)2708 1920 y FD(1)2761
1912 y Fy(a)2798 1920 y FD(1)2854 1912 y Fp(=)h Fo(d)2975
1920 y FD(1)3009 1912 y Fp(\))h FB(2)f Fy(pub)q Fv(,)523
2012 y Fp(\()p Fo(T)598 2020 y FD(2)651 2012 y Fy(a)688
2020 y FD(2)744 2012 y Fp(=)g Fo(d)865 2020 y FD(2)900
2012 y Fp(\))g FB(2)g Fy(pr)m(ot)q Fv(.)560 2164 y(1.)41
b(If)19 b(no)f(oper)o(ations)f(of)i(other)g(classes)g(have)f(e)n(xpr)m
(essions)h(of)g(the)f(form)i Fy(le)o(.a)2809 2172 y FD(1)2844
2164 y Fv(,)f(e)n(xcept)g(for)g(those)664 2255 y(of)i(subclasses)f(of)g
Fy(M)p Fv(,)h(we)g(have)817 2407 y Fy(M)p Fp([)p Fy(pri)q
Fo(;)13 b Fy(pr)m(ot)p Fo(;)g Fy(pub)q Fp(];)h Fy(cdecls)22
b FB(v)f Fy(M)p Fp([)p Fy(pri)q Fo(;)13 b Fy(pr)m(ot)k
FB([)g(f)p Fo(T)2128 2415 y FD(1)2182 2407 y Fy(a)2219
2415 y FD(1)2275 2407 y Fp(=)k Fo(d)2396 2415 y FD(1)2430
2407 y FB(g)p Fo(;)14 b Fy(pub)q FB(nf)p Fo(T)2736 2415
y FD(1)2790 2407 y Fy(a)2827 2415 y FD(1)2883 2407 y
Fp(=)21 b Fo(d)3004 2415 y FD(1)3039 2407 y FB(g)p Fp(];)14
b Fy(cdecls)560 2559 y Fv(2.)41 b(If)21 b(no)e(oper)o(ations)g(of)h
(any)g(other)g(classes)h(have)f(e)n(xpr)m(essions)g(of)g(the)h(form)f
Fy(le)o(.a)2967 2567 y FD(2)3002 2559 y Fv(,)g(we)h(have)817
2711 y Fy(M)p Fp([)p Fy(pri)q Fo(;)13 b Fy(pr)m(ot)p
Fo(;)g Fy(pub)q Fp(];)h Fy(cdecls)22 b FB(v)f Fy(M)p
Fp([)p Fy(pri)d FB([)f(f)p Fo(T)1973 2719 y FD(2)2026
2711 y Fy(a)2064 2719 y FD(2)2120 2711 y Fp(=)k Fo(d)2241
2719 y FD(2)2275 2711 y FB(g)p Fo(;)14 b Fy(pr)m(ot)p
FB(nf)p Fo(T)2590 2719 y FD(2)2644 2711 y Fy(a)2681 2719
y FD(2)2737 2711 y Fp(=)21 b Fo(d)2858 2719 y FD(2)2892
2711 y FB(g)p Fo(;)14 b Fy(pub)q Fp(];)g Fy(cdecls)523
2888 y FG(After)j(applying)e(La)o(w)j(19)e(e)o(xhausti)n(v)o(ely)f
(\(i.e.)i(the)h(e)o(xpert)e(pattern\))g(to)h(the)h(class)g
Fy(Bank)g FG(for)f(method)523 2987 y Fy(g)o(etBalance)q
FG(,)28 b(we)g(can)g(then)f(apply)g(La)o(w)g(20)h(to)g(the)f(class)i
(diagram)d(on)h(the)h(right)f(hand)g(side)h(of)523 3087
y(Figure)19 b(5)i(to)f(achie)n(v)o(e)f(the)h(encapsulation)e(of)h(the)i
(attrib)n(ute)e Fv(balance)g FG(of)g(the)h(class)h Fv(Account)p
FG(.)e(The)523 3187 y(attrib)n(ute)h Fv(aNo)g FG(can)g(be)g
(encapsulated)f(in)h(a)h(similar)f(w)o(ay)-5 b(.)648
3286 y(Another)27 b(principle)g(of)h(object-oriented)d(design)j(is)h
(to)g(mak)o(e)f(classes)h(simple)g(and)f(highly)523 3386
y(cohesi)n(v)o(e.)15 b(This)i(means)f(that)h(the)g(responsibilities)f
(\(or)g(functionalities\))f(of)h(a)h(class,)h(i.e.)f(its)g(meth-)523
3486 y(ods,)25 b(should)g(be)g(strongly)f(related)h(and)g(focused.)f(W)
-7 b(e)27 b(therefore)c(often)i(need)g(to)h(decompose)d(a)523
3585 y(comple)o(x)18 b(class)k(into)e(a)g(number)f(of)g(associated)h
(classes,)i(so)e(that)g(the)h(system)f(will)h(be)581
3746 y Fw(\226)41 b FG(easy)20 b(to)h(comprehend)581
3844 y Fw(\226)41 b FG(easy)20 b(to)h(reuse)581 3943
y Fw(\226)41 b FG(easy)20 b(to)h(maintain)581 4042 y
Fw(\226)41 b FG(less)21 b(delicate)f(and)g(less)h(ef)n(fected)e(by)h
(changes)523 4203 y(W)-7 b(e)21 b(capture)e(the)i Fv(High)e(Cohesion)h
FG(design)f(pattern)h([22])f(by)h(the)g(follo)n(wing)e(re\002nement)h
(rule.)523 4365 y Fw(Law)i(21)40 b Fp(\()p Fi(High)20
b(Cohesion)f(P)n(attern)q Fp(\))g Fv(Assume)g Fy(M)p
Fp([)p Fo(pr)r(i;)13 b(op)p Fp(])19 b Fv(is)h(a)f(well-formed)g(class)g
(declar)o(a-)523 4465 y(tion,)d Fo(pr)r(i)21 b Fp(=)g
FB(f)p Fo(x;)13 b(y)s FB(g)k Fv(ar)m(e)g(\(or)f(lists)i(of\))f(attrib)n
(utes)f(of)h Fy(M)p Fv(,)g Fo(m)2193 4473 y FD(1)2227
4465 y FB(f)p Fo(c)2298 4473 y FD(1)2334 4465 y Fp(\()p
Fo(x)p Fp(\))p FB(g)k(2)g Fo(op)c Fv(only)f(contains)g(attrib)n(ute)523
4564 y Fo(x)p Fv(,)h(method)f Fo(m)935 4572 y FD(2)969
4564 y FB(f)p Fo(c)1040 4572 y FD(2)1075 4564 y Fp([)p
Fo(m)1164 4572 y FD(1)1199 4564 y Fp(])p FB(g)22 b(2)f
Fo(op)d Fv(can)e(only)h(c)o(hang)o(e)e Fo(x)i Fv(by)g(calling)f
Fo(m)2472 4572 y FD(1)2524 4564 y Fv(\(or)h(though)e(it)j(does)f(not)f
(have)523 4664 y(to)k(c)o(hang)o(e)f(it)i(at)f(all\).)g(Then)560
4825 y(1.)41 b Fy(M)22 b FB(v)f Fy(M)p Fp([)p Fo(pr)r(i)1014
4833 y Fn(new)1132 4825 y Fo(;)13 b(op)1242 4833 y Fn(new)1359
4825 y Fp(];)h Fy(M)1477 4833 y FD(1)1511 4825 y Fp([)p
Fo(pr)r(i)1634 4833 y FD(1)1669 4825 y Fo(;)f(op)1779
4833 y FD(1)1813 4825 y Fp(];)h Fy(M)1931 4833 y FD(2)1966
4825 y Fp([)p Fo(pr)r(i)2089 4833 y FD(2)2123 4825 y
Fo(;)f(op)2233 4833 y FD(2)2268 4825 y Fp(])p Fv(,)664
4924 y(wher)m(e)p eop
%%Page: 19 19
19 18 bop 537 1783 a
 currentpoint currentpoint translate 0.6358 0.56885 scale neg exch
neg exch translate
 537 1783 a @beginspecial 0 @llx
0 @lly 535 @urx 299 @ury 5350 @rwi @setspecial
%%BeginDocument: class-decomp.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\nus\unuiist\COOL\class-decomp.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 535 299
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 535 299
%AI3_TileBox: 0 0 535 299
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  21.9600 283.9200 m
  104.7600 283.9200 L
  104.7600 265.9200 L
  21.9600 265.9200 L
  21.9600 283.9200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 58.6800 271.6800 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  21.9600 265.9200 m
  104.7600 265.9200 L
  104.7600 239.2800 L
  21.9600 239.2800 L
  21.9600 265.9200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 60.8400 255.1200 0 Tp
TP
97.142857 Tz
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 60.8400 243.6000 0 Tp
TP
97.142857 Tz
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  21.9600 239.2800 m
  104.7600 239.2800 L
  104.7600 198.4800 L
  21.9600 198.4800 L
  21.9600 239.2800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 40.3200 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 49.6800 221.0400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 54.0000 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.8800 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 60.4800 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.2400 221.0400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.5600 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.1600 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.2000 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.8000 223.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 36.7200 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.0800 206.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.4000 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 53.2800 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.8800 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 62.6400 206.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.9600 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.8400 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.2000 206.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.5200 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.4000 208.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  21.9600 266.6400 m
  104.0400 266.6400 L
S
U
u
  21.9600 240.0000 m
  104.0400 240.0000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  21.2400 197.7600 m
  105.4800 197.7600 L
  105.4800 284.6400 L
  21.2400 284.6400 L
  21.2400 197.7600 L
s
  63.3600 241.2000 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  149.7600 285.0000 m
  220.6800 285.0000 L
  220.6800 267.0000 L
  149.7600 267.0000 L
  149.7600 285.0000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 180.4800 272.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  149.7600 267.0000 m
  220.6800 267.0000 L
  220.6800 235.8000 L
  149.7600 235.8000 L
  149.7600 267.0000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 256.2000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.4800 253.9200 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.8000 256.2000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.6800 256.2000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.4400 253.9200 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 242.4000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.4800 240.1200 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.8000 242.4000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.6800 242.4000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.4400 240.1200 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  149.7600 235.8000 m
  220.6800 235.8000 L
  220.6800 195.0000 L
  149.7600 195.0000 L
  149.7600 235.8000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 159.9600 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.3200 217.5600 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.6400 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 176.5200 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.1200 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.8800 217.5600 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.2000 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.0800 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.4400 217.5600 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.7600 220.0800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 159.9600 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.3200 202.8000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.6400 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 176.5200 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.1200 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.8800 202.8000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.2000 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.0800 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.4400 202.8000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.7600 205.3200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  149.7600 267.7200 m
  219.9600 267.7200 L
S
U
u
  149.7600 236.5200 m
  219.9600 236.5200 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  149.0400 194.2800 m
  221.4000 194.2800 L
  221.4000 285.7200 L
  149.0400 285.7200 L
  149.0400 194.2800 L
s
  185.2200 240.0000 m
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  33.8400 275.2800 m
  45.7200 275.2800 L
  45.7200 295.2000 L
  33.8400 295.2000 L
  33.8400 275.2800 L
n
  39.7800 285.2400 m
F
U
%AI5_File:
%AI5_BeginRaster
[ 1.5600 0.0000 0.0000 -1.5600 115.5600 229.4400 ] 0 0 18 15 18 15 8 3 0 0 0 0
XI
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFF000000000000000000000000000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%AI5_EndRaster
B
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  115.5600 229.3200 m
  143.7600 229.3200 L
  143.7600 252.8400 L
  115.5600 252.8400 L
  115.5600 229.3200 L
n
  129.6600 241.0800 m
F
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  189.2400 195.1200 m
  192.4800 187.2000 L
  189.2400 179.2800 L
  186.1200 187.2000 L
  189.2400 195.1200 L
B
U
u
0 XR

  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  189.3600 195.1200 m
  189.3600 193.3200 L
  186.8400 187.2000 L
  189.3600 180.9600 L
  191.8800 187.2000 L
  189.3600 193.3200 L
  189.3600 195.1200 L
  192.6000 187.2000 L
  189.3600 179.1600 L
  186.1200 187.2000 L
  189.3600 195.1200 L
F
U
u
 [1 2 ] 0 d
0.2500 w
  0.000 0.000 0.000 1.000 K
  74.2800 169.2000 m
  74.2800 169.2000 L
S
U
u
  0.000 0.000 0.000 1.000 K
  74.2800 169.2000 m
  74.2800 169.2000 L
S
U
u
  74.2800 169.2000 m
  74.2800 169.2000 L
S
U
u
  74.2800 169.2000 m
  74.2800 169.2000 L
S
U
1 XR

  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
*u
  5.8800 161.8800 m
  5.8800 183.7200 L
  142.6800 183.7200 L
  142.6800 154.8000 L
  23.1600 154.8000 L
  23.1600 161.8800 L
  5.8800 161.8800 L
  5.8800 161.8800 L
F
u
  5.8800 161.8800 m
  23.1600 161.8800 L
  23.1600 154.8000 L
  5.8800 161.8800 L
  5.8800 161.8800 L
F
U
*U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  5.8800 161.8800 m
  23.1600 161.8800 L
  23.1600 154.8000 L
  5.8800 161.8800 L
S
U
u
  5.8800 161.8800 m
  5.8800 183.7200 L
  142.6800 183.7200 L
  142.6800 154.8000 L
  23.1600 154.8000 L
  23.1600 161.8800 L
  5.8800 161.8800 L
S
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  3.6000 153.6000 m
  145.2000 153.6000 L
  145.2000 184.6800 L
  3.6000 184.6800 L
  3.6000 153.6000 L
n
  74.4000 169.1400 m
F
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  144.7200 167.7600 m
  182.1600 167.7600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  189.3600 167.7600 m
  179.2800 164.1600 L
  179.2800 171.3600 L
  189.3600 167.7600 L
B
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  189.3600 179.1600 m
  189.3600 143.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  96.8400 138.2400 m
  235.0800 138.2400 L
S
U
u
  0.000 0.000 0.000 1.000 K
  189.3600 144.0000 m
  189.3600 138.2400 L
S
U
u
  0.000 0.000 0.000 1.000 K
  96.8400 138.2400 m
  96.8400 113.7600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  235.0800 138.2400 m
  235.0800 113.7600 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  47.2800 120.4800 m
  130.0800 120.4800 L
  130.0800 102.4800 L
  47.2800 102.4800 L
  47.2800 120.4800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 81.8400 108.6000 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.2000 106.4400 0 Tp
TP
107.407407 Tz
/_Helvetica-Bold 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  47.2800 102.4800 m
  130.0800 102.4800 L
  130.0800 78.7200 L
  47.2800 78.7200 L
  47.2800 102.4800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 86.1600 87.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  47.2800 78.7200 m
  130.0800 78.7200 L
  130.0800 37.9200 L
  47.2800 37.9200 L
  47.2800 78.7200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 65.6400 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.0000 53.1600 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.3200 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.2000 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.8000 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.5600 53.1600 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.8800 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.4800 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 104.5200 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 108.1200 55.6800 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  47.2800 103.2000 m
  129.3600 103.2000 L
S
U
u
  47.2800 79.4400 m
  129.3600 79.4400 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  46.5600 37.2000 m
  130.8000 37.2000 L
  130.8000 121.2000 L
  46.5600 121.2000 L
  46.5600 37.2000 L
s
  88.6800 79.2000 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  167.5200 122.4000 m
  250.3200 122.4000 L
  250.3200 104.4000 L
  167.5200 104.4000 L
  167.5200 122.4000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 202.0800 110.5200 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.4400 108.3600 0 Tp
TP
107.407407 Tz
/_Helvetica-Bold 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  167.5200 104.4000 m
  250.3200 104.4000 L
  250.3200 75.4800 L
  167.5200 75.4800 L
  167.5200 104.4000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 206.4000 93.6000 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.3200 82.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.2400 79.8000 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.5600 82.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.4400 82.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.2000 79.8000 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  167.5200 75.4800 m
  250.3200 75.4800 L
  250.3200 34.6800 L
  167.5200 34.6800 L
  167.5200 75.4800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 175.8000 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.1600 49.9200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.4800 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.3600 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.9600 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.7200 49.9200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.0400 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.9200 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.6800 49.9200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.0000 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.8800 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.2400 49.9200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 235.5600 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.4400 52.4400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  167.5200 105.1200 m
  249.6000 105.1200 L
S
U
u
  167.5200 76.2000 m
  249.6000 76.2000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  166.8000 33.9600 m
  251.0400 33.9600 L
  251.0400 123.1200 L
  166.8000 123.1200 L
  166.8000 33.9600 L
s
  208.9200 78.5400 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  320.7600 265.9200 m
  403.5600 265.9200 L
  403.5600 247.9200 L
  320.7600 247.9200 L
  320.7600 265.9200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 357.4800 253.6800 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  320.7600 247.9200 m
  403.5600 247.9200 L
  403.5600 221.2800 L
  320.7600 221.2800 L
  320.7600 247.9200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 359.6400 237.1200 0 Tp
TP
97.142857 Tz
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.6400 225.6000 0 Tp
TP
97.142857 Tz
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  320.7600 221.2800 m
  403.5600 221.2800 L
  403.5600 180.4800 L
  320.7600 180.4800 L
  320.7600 221.2800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 339.1200 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 348.4800 203.0400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 352.8000 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 355.6800 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.2800 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 365.0400 203.0400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 369.3600 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 372.9600 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 378.0000 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.6000 205.5600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 335.5200 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 344.8800 188.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 349.2000 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 352.0800 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 355.6800 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 361.4400 188.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 365.7600 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 368.6400 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 378.0000 188.2800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 382.3200 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 385.2000 190.8000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  320.7600 248.6400 m
  402.8400 248.6400 L
S
U
u
  320.7600 222.0000 m
  402.8400 222.0000 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  320.0400 179.7600 m
  404.2800 179.7600 L
  404.2800 266.6400 L
  320.0400 266.6400 L
  320.0400 179.7600 L
s
  362.1600 223.2000 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  459.2400 267.0000 m
  530.1600 267.0000 L
  530.1600 249.0000 L
  459.2400 249.0000 L
  459.2400 267.0000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 489.9600 254.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  459.2400 249.0000 m
  530.1600 249.0000 L
  530.1600 225.2400 L
  459.2400 225.2400 L
  459.2400 249.0000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 481.9200 235.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 489.8400 232.8000 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 494.1600 235.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 497.0400 235.0800 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 502.8000 232.8000 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  459.2400 225.2400 m
  530.1600 225.2400 L
  530.1600 184.4400 L
  459.2400 184.4400 L
  459.2400 225.2400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 469.4400 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 478.8000 207.0000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.1200 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 486.0000 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 489.6000 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 495.3600 207.0000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 499.6800 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 502.5600 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 511.9200 207.0000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 516.2400 209.5200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 469.4400 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 478.8000 192.2400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.1200 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 486.0000 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 489.6000 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 495.3600 192.2400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 499.6800 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 502.5600 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 511.9200 192.2400 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 516.2400 194.7600 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  459.2400 249.7200 m
  529.4400 249.7200 L
S
U
u
  459.2400 225.9600 m
  529.4400 225.9600 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  458.5200 183.7200 m
  530.8800 183.7200 L
  530.8800 267.7200 L
  458.5200 267.7200 L
  458.5200 183.7200 L
s
  494.7000 225.7200 m
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  332.6400 257.2800 m
  344.5200 257.2800 L
  344.5200 277.2000 L
  332.6400 277.2000 L
  332.6400 257.2800 L
n
  338.5800 267.2400 m
F
U
%AI5_File:
%AI5_BeginRaster
[ 1.5600 0.0000 0.0000 -1.5600 416.0400 212.0400 ] 0 0 18 15 18 15 8 3 0 0 0 0
XI
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFF000000000000000000000000000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000FFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%AI5_EndRaster
B
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  416.0400 211.9200 m
  444.2400 211.9200 L
  444.2400 235.4400 L
  416.0400 235.4400 L
  416.0400 211.9200 L
n
  430.1400 223.6800 m
F
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  116.6400 3.4800 m
  131.1600 3.4800 L
  131.1600 19.4400 L
  116.6400 19.4400 L
  116.6400 3.4800 L
n
  123.9000 11.4600 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 116.6400 7.2000 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.2400 7.2000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 127.4400 7.2000 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  494.5200 183.7200 m
  494.5200 146.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  494.5200 139.0800 m
  490.9200 149.1600 L
  498.0000 149.1600 L
  494.5200 139.0800 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  447.4800 134.6400 m
  530.2800 134.6400 L
  530.2800 116.6400 L
  447.4800 116.6400 L
  447.4800 134.6400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 482.0400 122.7600 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 491.4000 120.6000 0 Tp
TP
107.407407 Tz
/_Helvetica-Bold 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  447.4800 116.6400 m
  530.2800 116.6400 L
  530.2800 87.7200 L
  447.4800 87.7200 L
  447.4800 116.6400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 486.3600 105.8400 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 476.2800 94.3200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 484.2000 92.0400 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.5200 94.3200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 491.4000 94.3200 0 Tp
TP
94.871795 Tz
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 497.1600 92.0400 0 Tp
TP
96.296296 Tz
/_Helvetica 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  447.4800 87.7200 m
  530.2800 87.7200 L
  530.2800 46.9200 L
  447.4800 46.9200 L
  447.4800 87.7200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 463.6800 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 473.0400 69.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 477.3600 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 480.2400 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.8400 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 489.6000 69.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 493.9200 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 496.8000 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 506.1600 69.4800 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.4800 72.0000 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 455.7600 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 465.1200 54.7200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 469.4400 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 472.3200 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 475.9200 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 481.6800 54.7200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 486.0000 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.8800 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 494.6400 54.7200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 498.9600 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 501.8400 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 511.2000 54.7200 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 515.5200 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 518.4000 57.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  447.4800 117.3600 m
  529.5600 117.3600 L
S
U
u
  447.4800 88.4400 m
  529.5600 88.4400 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  446.7600 46.2000 m
  531.0000 46.2000 L
  531.0000 135.3600 L
  446.7600 135.3600 L
  446.7600 46.2000 L
s
  488.8800 90.7800 m
B
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  321.4800 132.7200 m
  404.2800 132.7200 L
  404.2800 114.7200 L
  321.4800 114.7200 L
  321.4800 132.7200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 356.0400 120.8400 0 Tp
TP
/_Helvetica-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 365.4000 118.6800 0 Tp
TP
107.407407 Tz
/_Helvetica-Bold 7.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  321.4800 114.7200 m
  404.2800 114.7200 L
  404.2800 90.9600 L
  321.4800 90.9600 L
  321.4800 114.7200 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 360.3600 99.2400 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  321.4800 90.9600 m
  404.2800 90.9600 L
  404.2800 50.1600 L
  321.4800 50.1600 L
  321.4800 90.9600 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 339.8400 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 349.2000 65.4000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 353.5200 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 356.4000 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
({\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 360.0000 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 365.7600 65.4000 0 Tp
TP
93.548387 Tz
/_Helvetica 7.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 370.0800 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 373.6800 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 378.7200 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 382.3200 67.9200 0 Tp
TP
93.023256 Tz
/_Helvetica 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  321.4800 115.4400 m
  403.5600 115.4400 L
S
U
u
  321.4800 91.6800 m
  403.5600 91.6800 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  320.7600 49.4400 m
  405.0000 49.4400 L
  405.0000 133.4400 L
  320.7600 133.4400 L
  320.7600 49.4400 L
s
  362.8800 91.4400 m
B
U
u
  0.000 0.000 0.000 1.000 K
  412.4400 91.4400 m
  446.7600 91.0800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  405.0000 91.4400 m
  415.2000 94.9200 L
  415.0800 87.8400 L
  405.0000 91.4400 L
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  421.2000 3.4800 m
  437.1600 3.4800 L
  437.1600 19.4400 L
  421.2000 19.4400 L
  421.2000 3.4800 L
n
  429.1800 11.4600 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 421.2000 7.2000 0 Tp
TP
83.636364 Tz
/_Times-Roman 13.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 425.5200 7.2000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.7200 7.2000 0 Tp
TP
83.636364 Tz
/_Times-Roman 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
u
  9.3600 164.2800 m
  139.0800 164.2800 L
  139.0800 180.0000 L
  9.3600 180.0000 L
  9.3600 164.2800 L
n
  74.2200 172.1400 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 9.3600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 13.6800 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 20.1600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 24.4800 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 29.5200 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.1200 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.4800 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 48.9600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(:\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 52.5600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.3600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.2400 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.1200 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.4400 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.9200 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.8000 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.2800 166.5600 0 Tp
TP
88.571429 Tz
/_Times-Roman 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 93.6000 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(=\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.8000 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 107.2800 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 110.1600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 116.6400 166.5600 0 Tp
TP
88.571429 Tz
/_Times-Roman 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.9600 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 123.8400 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 130.3200 166.5600 0 Tp
TP
88.571429 Tz
/_Times-Roman 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 134.6400 169.2000 0 Tp
TP
87.234043 Tz
/_Times-Roman 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 537 1783 a
 currentpoint currentpoint translate 1 0.6358 div 1 0.56885 div scale
neg exch neg exch translate
 537 1783 a 1541 1886 a Fz(Fig)o(.)12
b(6.)19 b FC(Class)f(Decomposition)722 2125 y Fw(\226)41
b Fo(pr)r(i)907 2133 y Fn(new)1046 2125 y Fp(=)21 b FB(f)p
Fy(M)1228 2133 y FD(1)1281 2125 y Fo(o)1318 2133 y FD(1)1353
2125 y Fo(;)13 b Fy(M)1449 2133 y FD(2)1502 2125 y Fo(o)1539
2133 y FD(2)1574 2125 y FB(g)722 2236 y Fw(\226)41 b
Fo(op)881 2244 y Fn(new)1020 2236 y Fp(=)21 b FB(f)p
Fo(m)1207 2244 y FD(1)1242 2236 y FB(f)p Fo(o)1317 2244
y FD(1)1352 2236 y Fo(:m)1441 2244 y FD(1)1475 2236 y
FB(g)p Fo(;)14 b(m)1616 2244 y FD(2)1650 2236 y FB(f)p
Fo(o)1725 2244 y FD(2)1760 2236 y Fo(:m)1849 2244 y FD(2)1884
2236 y FB(gg)722 2347 y Fw(\226)41 b Fo(pr)r(i)907 2355
y FD(1)963 2347 y Fp(=)21 b FB(f)p Fo(x)p FB(g)p Fv(,)g
Fo(op)1282 2355 y FD(1)1337 2347 y Fp(=)g FB(f)p Fo(m)1524
2355 y FD(1)1559 2347 y FB(f)p Fo(c)1630 2355 y FD(1)1665
2347 y Fp(\()p Fo(x)p Fp(\))p FB(gg)722 2457 y Fw(\226)41
b Fo(pr)r(i)907 2465 y FD(2)963 2457 y Fp(=)21 b FB(f)p
Fo(y)s(;)13 b Fy(M)1219 2465 y FD(1)1272 2457 y Fo(o)1309
2465 y FD(1)1344 2457 y FB(g)q Fv(,)20 b Fo(op)1500 2465
y FD(2)1556 2457 y Fp(=)h FB(f)p Fo(m)1743 2465 y FD(2)1777
2457 y FB(f)p Fo(c)1848 2465 y FD(2)1884 2457 y Fp([)p
Fo(o)1942 2465 y FD(1)1977 2457 y Fo(:m)2066 2465 y FD(1)2100
2457 y Fp(])p FB(gg)664 2590 y Fv(suc)o(h)32 b(that)g
FB(8)p Fo(o)21 b Fp(:)h Fy(M)17 b FB(\001)g Fp(\()p Fo(o:o)1396
2598 y FD(1)1453 2590 y Fp(=)k Fo(o:o)1629 2598 y FD(2)1664
2590 y Fo(:o)1722 2598 y FD(1)1757 2590 y Fp(\))33 b
Fv(is)g(an)f(in)m(variant)f(of)h Fy(M)q Fv(.)g(This)h(in)m(variant)e
(has)h(to)h(be)664 2690 y(established)20 b(by)g(the)g(constructor)o(s)g
(of)g(these)h(thr)m(ee)f(classes.)664 2800 y(This)h(r)m(e\002nement)e
(is)i(illustr)o(ated)f(by)g(the)g(dia)o(gr)o(am)f(in)i(F)l(igur)m(e)f
(6\(a\).)560 2911 y(2.)41 b Fy(M)22 b FB(v)f Fy(M)p Fp([)p
Fo(pr)r(i)1014 2919 y Fn(new)1132 2911 y Fo(;)13 b(op)1242
2919 y Fn(new)1359 2911 y Fp(];)h Fy(M)1477 2919 y FD(1)1511
2911 y Fp([)p Fo(pr)r(i)1634 2919 y FD(1)1669 2911 y
Fo(;)f(op)1779 2919 y FD(1)1813 2911 y Fp(];)h Fy(M)1931
2919 y FD(2)1966 2911 y Fp([)p Fo(pr)r(i)2089 2919 y
FD(2)2123 2911 y Fo(;)f(op)2233 2919 y FD(2)2268 2911
y Fp(])p Fv(,)664 3010 y(wher)m(e)722 3143 y Fw(\226)41
b Fo(pr)r(i)907 3151 y Fn(new)1046 3143 y Fp(=)21 b FB(f)p
Fy(M)1228 3151 y FD(2)1281 3143 y Fo(o)1318 3151 y FD(2)1353
3143 y FB(g)722 3254 y Fw(\226)41 b Fo(op)881 3262 y
Fn(new)1020 3254 y Fp(=)21 b FB(f)p Fo(m)1207 3262 y
FD(1)1242 3254 y FB(f)p Fo(o)1317 3262 y FD(1)1352 3254
y Fo(:m)1441 3262 y FD(1)1475 3254 y FB(g)p Fo(;)14 b(m)1616
3262 y FD(2)1650 3254 y FB(f)p Fo(o)1725 3262 y FD(2)1760
3254 y Fo(:m)1849 3262 y FD(2)1884 3254 y FB(gg)722 3364
y Fw(\226)41 b Fo(pr)r(i)907 3372 y FD(1)963 3364 y Fp(=)21
b FB(f)p Fo(x)p FB(g)p Fv(,)g Fo(op)1282 3372 y FD(1)1337
3364 y Fp(=)g FB(f)p Fo(m)1524 3372 y FD(1)1559 3364
y FB(f)p Fo(c)p Fp(\()p Fo(x)p Fp(\))p FB(gg)722 3475
y Fw(\226)41 b Fo(pr)r(i)907 3483 y FD(2)963 3475 y Fp(=)21
b FB(f)p Fo(y)s(;)13 b Fy(M)1219 3483 y FD(1)1272 3475
y Fo(o)1309 3483 y FD(1)1344 3475 y FB(g)q Fv(,)41 b
Fo(op)1521 3483 y FD(2)1577 3475 y Fp(=)21 b FB(f)p Fo(m)1764
3483 y FD(1)1798 3475 y FB(f)p Fo(o)1873 3483 y FD(1)1908
3475 y Fo(:m)1997 3483 y FD(1)2032 3475 y FB(g)p Fo(;)14
b(m)2173 3483 y FD(2)2207 3475 y FB(f)p Fo(c)2278 3483
y FD(2)2313 3475 y Fp([)p Fo(o)2371 3483 y FD(1)2406
3475 y Fo(:m)2495 3483 y FD(1)2530 3475 y Fp(])p FB(gg)664
3607 y Fv(suc)o(h)20 b(that)g Fo(p)p Fp(\()p Fo(o)1092
3615 y FD(1)1126 3607 y Fo(:x;)13 b(y)s Fp(\))20 b Fv(is)h(an)f(in)m
(variant)f(of)h Fy(M)1965 3615 y FD(2)2000 3607 y Fv(.)664
3718 y(This)h(r)m(e\002nement)e(is)i(illustr)o(ated)f(by)g(the)g(dia)o
(gr)o(am)f(in)i(F)l(igur)m(e)f(6\(b\).)523 3917 y FG(Notice)25
b(that)f(the)h(\002rst)h(re\002nement)d(in)i(La)o(w)f(21)h(requires)e
(that)i Fy(M)h FG(to)f(be)f(coupled)f(with)i(both)f Fy(M)3370
3925 y FD(1)523 4017 y FG(and)e Fy(M)728 4025 y FD(2)763
4017 y FG(;)h(and)f(in)h(the)f(second)g(re\002nement)f
Fy(M)j FG(is)f(only)f(coupled)f(with)i Fy(M)2650 4025
y FD(2)2685 4017 y FG(,)g(b)n(ut)f(more)g(interaction)523
4116 y(between)i Fy(M)887 4124 y FD(2)946 4116 y FG(and)g
Fy(M)1154 4124 y FD(1)1213 4116 y FG(are)g(needed)f(than)h(in)h(the)f
(\002rst)h(re\002nement.)e(W)-7 b(e)26 b(belie)n(v)o(e)d(that)i(the)f
(abo)o(v)o(e)523 4216 y(three)16 b(la)o(ws,)h(together)f(with)g(the)h
(other)f(simple)h(la)o(ws)g(for)f(incremental)f(programming)e(ef)n
(fecti)n(v)o(ely)523 4316 y(support)27 b(the)i(use-case)g(dri)n(v)o(en)
e(and)h(iterati)n(v)o(e)g(R)m(UP)i(de)n(v)o(elopment)c(process)i([22].)
f(The)i(use)g(of)523 4415 y(the)g(patterns)f(for)f(responsibility)h
(assignment)f(in)i(object-oriented)d(softw)o(are)i(de)n(v)o(elopment)e
(is)523 4515 y(clearly)20 b(demonstrated)e(in)i(Larman')-5
b(s)19 b(book)g([22])g(and)h(in)g(the)g(lecture)g(notes)g(of)g(Liu)g
(in)g([24].)648 4625 y(F)o(or)k(each)g(of)g(the)g(la)o(ws,)h(e)o(xcept)
e(for)h(La)o(w)g(13)g(in)h(the)f(Appendix,)e(let)j Fy(LHS)g
FG(and)f Fy(RHS)h FG(denote)523 4725 y(the)c(declarations)e(on)i(the)g
(left)g(and)f(right)g(hand)g(sides,)h(respecti)n(v)o(ely)-5
b(.)19 b(F)o(or)h(an)o(y)g(main)h(program)e Fy(P)o FG(,)523
4825 y(each)24 b(re\002nement)f(la)o(w)i(becomes)f(an)g(equational)f
(la)o(w:)i Fy(LHS)17 b FB(\017)g Fy(P)k FB(\021)g Fy(RHS)c
FB(\017)h Fy(P)o FG(,)25 b(pro)o(vided)d Fy(LHS)17 b
FB(\017)g Fy(P)523 4924 y FG(is)k(well-de\002ned.)p eop
%%Page: 20 20
20 19 bop 523 448 a Fx(5)99 b(Conclusion)523 640 y FG(W)-7
b(e)33 b(ha)n(v)o(e)f(sho)n(wn)f(ho)n(w)g(Hoare)h(and)f(He')-5
b(s)33 b(design)e(calculus)h([18])f(is)i(used)e(to)i(de\002ne)e(an)h
(OO)523 740 y(language.)22 b(A)j(program)d(is)j(represented)e(as)i(a)g
(predicate)e(called)h(a)g Fv(design)p FG(,)g(and)g(the)g(re\002nement)
523 840 y(relation)19 b(between)h(programs)e(is)j(de\002ned)e(as)i
(implication)e(between)h(predicates.)648 939 y(In)15
b([7],)h(Bro)o(y)f(ga)n(v)o(e)g(an)h(assessment)h(of)f
(object-orientation.)c(Our)k(model)f(re\003ects)i(most)f(of)f(the)523
1039 y(features,)g(no)g(matter)g(good)f(or)i(bad,)e(of)i
(object-oriented)c(designs.)j(F)o(or)h(e)o(xample,)d(the)j(model)f
(does)523 1139 y(sho)n(w)23 b(that)g(inheritance)f(with)h(attrib)n(ute)
g(hiding)f(and)h(method)f(o)o(v)o(erriding)e(mak)o(es)j(it)h(dif)n
(\002cult)e(to)523 1238 y(analyse)g(the)g(system)h(beha)n(viour)m(,)c
(and)j(method)f(in)m(v)n(ocation)g(on)h(an)g(object)g(may)g(indeed)f
(change)523 1338 y(the)f(system')-5 b(s)21 b(global)e(states.)648
1437 y(Ne)n(v)o(ertheless,)e(formal)g(techniques)g(for)g
(object-orientation)e(ha)n(v)o(e)j(achie)n(v)o(ed)e(signi\002cant)i
(ad-)523 1537 y(v)n(ance)32 b(in)h(areas)g(of)g(both)f(formal)g
(methods)g(and)h(object)f(technology)-5 b(,)30 b(e.g.)i([1,)13
b(2,)g(6,)g(4,)g(8,)h(29].)523 1637 y(There)29 b(are)h(a)g(number)e(of)
i(recent)f(articles)h(on)f(Hoare)g(Logics)h(for)f(object-oriented)e
(program-)523 1736 y(ming)h(\(see,)g(e.g.)g([30,)12 b(35,)h(20,)f(31,)h
(23,)f(9]\).)28 b(The)g(normal)f(form)g(of)h(a)h(program)d(in)j(our)e
(paper)h(is)523 1836 y(similarly)c(to)g(that)g(of)g([9,)13
b(30].)23 b(Ho)n(we)n(v)o(er)m(,)f(one)h(major)g(dif)n(ference)f(of)i
(our)f(w)o(ork)h(is)h(that)f(we)g(also)523 1936 y(pro)o(vide)g(a)i
(formal)e(characterisation)g(and)h(re\002nement)f(of)h(the)h(conte)o
(xtual/structural)c(features,)523 2035 y(i.e.)f(the)g(declaration)e
(section,)i(of)g(an)f(object)h(program.)d(This)k(is)f(moti)n(v)n(ated)f
(by)g(our)h(w)o(ork)f(on)g(the)523 2135 y(formalisation)d(and)g
(combinations)f(of)i(UML)g(models)g([25,)12 b(26])18
b(to)g(deal)g(with)g(consistenc)o(y)f(prob-)523 2234
y(lems)j(of)g(dif)n(ferent)e(UML)i(models.)f(This)h(characterisation)e
(has)j(been)e(pro)o(v)o(en)e(to)j(be)g(v)o(ery)f(useful)523
2334 y(in)29 b(de\002ning)f(semantics)g(for)h(inte)o(grated)e
(speci\002cation)h(languages)f(in)i(general.)f(F)o(or)g(e)o(xample,)523
2434 y([32])19 b(uses)i(this)g(characterisation)d(in)i(de\002ning)f(a)i
(semantics)f(of)g(TCOZ.)648 2533 y(The)k(notions)g(of)g(dif)n(ferent)f
(kinds)h(of)h(re\002nements)e(in)i(our)f(model)g(are)g(v)o(ery)g(close)
h(to)g(those)523 2633 y(in)19 b([9],)g(though)e(the)j(semantics)f(in)g
([9])g(is)h(de\002ned)f(in)g(terms)g(of)g(the)h(weak)o(est)f
(precondition)e(pred-)523 2733 y(icate)32 b(transformer)e(and)h(does)g
(not)h(deal)g(with)f(reference)g(types.)g(W)-7 b(e)33
b(tak)o(e)f(a)g Fv(weak)g(semantic)523 2832 y FG(approach)25
b(meaning)g(that)i(when)g(the)f(pre-condition)e(of)j(a)g(contact)g(is)g
(not)g(satis\002ed)h(in)f(a)g(state,)523 2932 y(the)f(program)d(will)j
(then)f(beha)n(v)o(e)f(as)j Fv(c)o(haos)p FG(,)d(and)h(an)o(y)f
(modi\002cation)g(to)i(the)f(program,)f(such)h(as)523
3031 y(adding)k(e)o(xceptional)g(handling,)g(will)j(be)e(a)i
(re\002nement)d(to)i(the)g(program.)d(W)-7 b(e)32 b(also)f(describe)523
3131 y(static)h(well-formedness)e(conditions)g(in)h(the)h
(pre-condition)c(so)k(that)g(an)o(y)e(correction)g(of)h(an)o(y)523
3231 y(static)26 b(inconsistenc)o(y)e(in)i(a)g(program,)d(such)i(as)h
(static)g(type)f(mismatching,)f(missing)i(v)n(ariables,)523
3330 y(missing)h(methods,)f(etc.)i(will)g(be)f(re\002nement)f(too.)h
(This)g(decision)g(is)h(required)e(for)h Fv(structur)o(al)523
3430 y(r)m(e\002nement)c(calculus)g FG(of)g(OO)h(designs)f(in)h(order)f
(to)g(treat)h Fv(r)m(efactoring)f FG([13])f(as)j(re\002nement)d(and)523
3530 y(properly)k(combine)h(it)i(with)f Fv(functional/behaviour)o(al)c
(r)m(e\002nement)p FG(.)j(This)h(combination)e(is)k(im-)523
3629 y(portant)d(for)h(the)h(application)e(of)i(the)f(model)g(to)h
(composing)e(dif)n(ferent)f(UML)j(models)f(and)g(to)523
3729 y(reasoning)d(about)h(their)h(consistenc)o(y)e([25,)13
b(26])26 b(and)g(in)h(gi)n(ving)f(semantics)g(for)h(inte)o(grated)e
(lan-)523 3828 y(guage)k([32].)f(Also)i(our)f(w)o(ork)h(on)f(formal)g
(object-oriented)e(design)i(with)h(UML)g([25,)12 b(26])29
b(has)523 3928 y(pro)o(vided)20 b(us)j(with)g(the)f(insight)g(of)h
(functional)d(decomposition)h(in)h(the)h(object-oriented)d(setting)523
4028 y(and)g(its)i(relation)d(with)i(data)g(encapsulation.)d(The)i
(functional)f(decomposition)f(and)i(data)h(encap-)523
4127 y(sulation)30 b(are)h(characterised)e(by)h(the)g(re\002nement)g
Fw(laws)h FG(19)f(-)g(20.)g(The)o(y)g(re\003ect)g(the)h(essential)523
4227 y(principle)19 b(of)h(object-oriented)d(design.)648
4327 y(The)g(po)n(wer)g(of)h(UTP[18])f(for)g(describing)g(dif)n(ferent)
f(features)h(of)h(computing,)e(such)h(as)i(state-)523
4426 y(based)26 b(properties,)f(communication,)f(timing,)i(higher)n
(-order)e(computing)g([18,)12 b(36,)h(34],)26 b(mak)o(es)523
4526 y(our)32 b(approach)e(ready)h(for)h(an)g(e)o(xtension)f(to)h(cope)
g(with)h(these)f(dif)n(ferent)f(aspects)h(of)g(object-)523
4625 y(oriented)c(designs.)h(Alternati)n(v)o(ely)-5 b(,)27
b(one)i(can)h(also)g(use)f(temporal)g(logic,)f(such)i(as)g([3],)f(for)f
(the)523 4725 y(speci\002cation)16 b(and)h(v)o(eri\002cation)e(of)i
(multithreading)d(Ja)n(v)n(a-lik)o(e)j(programs.)e(Ho)n(we)n(v)o(er)m
(,)g(we)i(w)o(ould)523 4825 y(lik)o(e)f(to)f(deal)g(with)g(concurrenc)o
(y)d(at)k(a)g(higher)d(le)n(v)o(el)i(when)g(we)g(e)o(xtend)f(this)i
(model)e(for)h(component-)523 4924 y(based)20 b(softw)o(are)g(de)n(v)o
(elopment)d([17,)12 b(16].)p eop
%%Page: 21 21
21 20 bop 648 448 a FG(In)29 b([7],)g(Bro)o(y)g(also)h(ar)o(gued)d
(that)j(the)g(property)d(of)i(object)h(identities)f(is)i(of)e(too)g(lo)
n(w)h(le)n(v)o(el)523 548 y(and)i(implementation)f(oriented.)g(This)i
(is)g(true)f(to)h(some)g(e)o(xtent)f(and)g(the)h(use)f(of)h(references)
523 648 y(does)21 b(cause)h(some)g(side-ef)n(fects,)e(making)g(the)i
(semantics)g(a)g(bit)g(more)f(dif)n(\002cult.)f(A)j(preliminary)523
747 y(v)o(ersion)e(of)g(the)h(model)f(without)h(references)e(can)i(be)g
(found)e(in)i([15].)f(Ho)n(we)n(v)o(er)m(,)f(that)i(v)o(ersion)f(is)523
847 y(only)h(slight)h(simpler)f(than)g(this)h(v)o(ersion.)f(On)g(the)h
(other)f(hand,)f(the)i(comple)o(xity)e(in)h(f)o(act)h(mainly)523
946 y(af)n(fects)18 b(reasoning)f(about)g(lo)n(w)h(le)n(v)o(el)g
(design)f(and)h(implementation.)e(At)j(high)e(le)n(v)o(el)h
(requirement)523 1046 y(analysis)j(and)f(design,)h(we)g(can)g(simply)f
(use)h(the)g(identities)g(as)h(the)f(objects)g(the)o(y)f(refer)g(to)h
(or)g(just)523 1146 y(talk)28 b(about)e(objects)h(in)h(an)g(abstract)f
(w)o(ay)-5 b(.)27 b(In)g(our)g(approach)e(for)i(analysis)h(of)f(use)h
(cases)g([25],)523 1245 y(we)22 b(mainly)f(describe)f(the)i(change)e
(of)i(system)f(states)i(in)f(terms)f(of)h(what)f(objects)g(are)h
(created)f(or)523 1345 y(deleted,)j(what)g(modi\002cations)f(are)h
(made)g(to)h(an)f(object)g(and)g(what)g(links)h(between)e(objects)i
(are)523 1445 y(formed)h(or)g(brok)o(en.)g(W)-7 b(e)28
b(think)e(that)i(features)e(lik)o(e)h(method)f(o)o(v)o(erriding)e(and)j
(attrib)n(ute)g(hiding)523 1544 y(are)f(only)f(useful)g(to)g(program)f
(around)g(the)i(requirement)d(and)i(design)g(defects)g(detected)g(at)h
(the)523 1644 y(coding)20 b(stage)i(or)f(e)n(v)o(en)g(after)m(,)g(or)g
(when)g(one)g(tries)i(to)e(reuse)h(a)g(class)g(with)g(a)g(similar)g
(template)f(in)523 1743 y(a)h(program)d(that)i(the)h(class)g(w)o(as)g
(not)f(originally)f(designed.)f(These)j(features)e(cause)h(problems)f
(in)523 1843 y(program)e(v)o(eri\002cation)h(and)g(the)i(smooth)e
(application)g(of)g(the)i(notion)e(of)h(program)e(re\002nements.)648
1943 y(Future)k(w)o(ork)h(includes)f(the)i(study)e(of)h(the)g(issue)h
(of)f(completeness)f(of)h(the)h(re\002nement)d(cal-)523
2042 y(culus,)e(applications)f(to)h(more)g(realistic)g(case)h(studies,)
f(and)g(formal)f(treatment)g(of)h Fv(patterns)g FG([14].)523
2300 y Fx(Refer)n(ences)560 2482 y FC(1.)42 b(M.)19 b(Abadi)g(and)h(L.)
e(Cardeli.)26 b Fy(A)19 b(Theory)g(of)g(Objects)p FC(.)27
b(Springer)o(-V)-8 b(erlag,)18 b(1996.)560 2571 y(2.)42
b(M.)19 b(Abadi)g(and)h(R.)e(Leino.)27 b(A)18 b(logic)h(of)g
(object-oriented)h(programs.)28 b(In)19 b(M.)f(Bidoit)h(and)h(M.)e
(Dauchet,)658 2662 y(editors,)29 b Fy(T)l(APSOFT)f('97:)i(Theory)h(and)
f(Pr)o(actice)f(of)h(Softwar)m(e)g(De)o(velopment,)h(7th)f
(International)658 2754 y(J)n(oint)19 b(Confer)m(ence)p
FC(,)h(pages)g(682\226696.)h(Springer)o(-V)-8 b(erlag,)18
b(1997.)560 2843 y(3.)42 b(E.)23 b(Abraham-Mumm,)i(F)-6
b(.S.)21 b(de)j(Boer)m(,)f(W)-7 b(.P)f(.)22 b(de)i(Roe)n(v)o(er)m(,)f
(and)i(M.)e(Stef)n(fen.)41 b(V)-8 b(eri\002cation)23
b(for)h(Ja)o(v)n(a')l(s)658 2934 y(reentrant)31 b(multithreading)g
(concept.)65 b(In)31 b Fy(F)-8 b(oundations)32 b(of)f(Softwar)m(e)g
(Science)g(and)h(Computation)658 3026 y(Structur)m(es,)20
b(LNCS)e(2303)p FC(,)i(pages)g(5\22620.)f(Springer)m(,)g(2002.)560
3115 y(4.)42 b(P)-8 b(.)20 b(America.)35 b(Designing)22
b(an)g(object-oriented)g(programming)h(language)g(with)e(beha)o
(vioural)i(subtyp-)658 3206 y(ing.)55 b(In)28 b(J.)f(W)-7
b(.)27 b(de)h(Bakk)o(er)m(,)g(illem)f(P)-8 b(.)26 b(de)i(Roe)n(v)o(er)m
(,)g(and)h(G.)e(Rozenber)o(g,)h(editors,)g Fy(REX)e(W)-7
b(orkshop)p FC(,)658 3298 y(v)o(olume)19 b(489)h(of)f
Fy(Lectur)m(e)g(Notes)g(in)g(Computer)g(Science)p FC(,)h(pages)g
(60\22690.)g(Springer)m(,)f(1991.)560 3387 y(5.)42 b(P)-8
b(.)14 b(America)h(and)h(F)-6 b(.)14 b(de)h(Boer)l(.)k(Reasoning)d
(about)g(dynamically)h(e)n(v)o(olving)f(process)g(structures.)j
Fy(F)-8 b(ormal)658 3479 y(Aspects)19 b(of)g(Computing)p
FC(,)g(6\(3\):269\226316,)i(1994.)560 3568 y(6.)42 b(M.M.)23
b(Bonsangue,)h(J.N.)f(K)m(ok,)g(and)h(K.)e(Sere.)40 b(An)23
b(approach)h(to)f(object-orientation)h(in)f(action)h(sys-)658
3659 y(tems.)d(In)16 b(J.)g(Jeuring,)g(editor)m(,)g Fy(Mathematics)h
(of)f(Pr)m(o)o(gr)o(am)h(Construction,)f FC(LNCS)f(1422,)i(pages)g
(68\22695.)658 3751 y(Springer)m(,)i(1998.)560 3840 y(7.)42
b(M.)17 b(Bro)o(y)-5 b(.)23 b(Object-oriented)18 b(programming)h(and)f
(softw)o(are)f(de)n(v)o(elopment)i(-)e(a)g(critical)f(assessment.)24
b(In)658 3931 y(A.)18 b(McIv)o(er)i(and)f(C.)f(Mor)o(gan,)i(editors,)e
Fy(Pr)m(o)o(gr)o(amming)i(Methodolo)o(gy)p FC(.)h(Springer)m(,)e(2003.)
560 4021 y(8.)42 b(D.)18 b(Carrington,)h Fy(et)g(al)p
FC(.)27 b Fy(Object-Z:)18 b(an)h(Object-Oriented)h(Extension)f(to)g(Z)p
FC(.)26 b(North-Halland,)19 b(1989.)560 4110 y(9.)42
b(A.)24 b(Ca)o(v)n(alcanti)h(and)h(D.)e(Naumann.)47 b(A)24
b(weak)o(est)i(precondition)g(semantics)g(for)e(an)i(object-oriented)
658 4201 y(language)20 b(of)f(re\002nement.)27 b(In)19
b Fy(LNCS)g(1709)p FC(,)g(pages)h(1439\2261460.)i(Springer)m(,)d(1999.)
523 4291 y(10.)42 b(D.)15 b(Coleman,)g Fy(et)g(al)p FC(.)k
Fy(Object-Oriented)d(De)o(velopment:)g(the)f(FUSION)g(Method)p
FC(.)20 b(Prentice-Hall,)14 b(1994.)523 4380 y(11.)42
b(S.)24 b(Cook)i(and)g(J.)e(Daniels.)47 b Fy(Designing)26
b(Object)f(Systems:)h(Object-Oriented)f(Modelling)h(with)f(Syn-)658
4472 y(tr)m(opy)p FC(.)i(Prentice-Hall,)18 b(1994.)523
4561 y(12.)42 b(E.)19 b(D)6 b(\250)-31 b(urr)20 b(and)g(E.M.)f(Dusink.)
31 b(The)20 b(role)g(of)g Fo(V)d(D)r(M)2027 4529 y FD(++)2144
4561 y FC(in)j(the)g(de)n(v)o(elopment)i(of)e(a)g(real-time)f(tracking)
658 4652 y(and)26 b(tracing)g(system.)47 b(In)26 b(J.)e(W)-6
b(oodcock)27 b(and)f(P)-8 b(.)24 b(Larsen,)h(editors,)h
Fy(Pr)m(oc.)e(of)i(FME'93,)e(LNCS)h(670)p FC(.)658 4744
y(Springer)o(-V)-8 b(erlag,)18 b(1993.)523 4833 y(13.)42
b(M.)30 b(F)o(o)n(wler)m(,)e(K.)i(Beck,)f(J.)h(Brant,)f(W)-7
b(.)29 b(Opdyk)o(e,)i(and)f(D.)f(Roberts.)62 b Fy(Refactoring:)30
b(Impr)m(o)o(ving)h(the)658 4924 y(Design)19 b(of)g(Existing)g(Code)p
FC(.)27 b(Addison-W)-6 b(esle)o(y)h(,)20 b(1999.)p eop
%%Page: 22 22
22 21 bop 523 448 a FC(14.)42 b(E.)18 b(Gamma,)h Fy(et)g(al)p
FC(.)26 b Fy(Design)20 b(P)-6 b(atterns)p FC(.)26 b(Addison-W)-6
b(esle)o(y)h(,)20 b(1995.)523 539 y(15.)42 b(J.)19 b(He,)h(Z.)f(Liu,)g
(and)h(X.)g(Li.)29 b(T)-6 b(o)n(w)o(ards)20 b(a)g(re\002nement)g
(calculus)g(for)g(object-oriented)h(systems)f(\(in)m(vited)658
631 y(talk\).)26 b(In)19 b Fy(Pr)m(oc.)g(ICCI02,)f(Alberta,)h(Canada)p
FC(.)h(IEEE)d(Computer)j(Society)-5 b(,)18 b(2002.)523
722 y(16.)42 b(J.)21 b(He,)g(Z.)g(Liu,)g(and)i(X.)e(Li.)35
b(A)21 b(component)j(calculus.)36 b(In)22 b(H.D.)f(V)-8
b(an)21 b(and)i(Z.)e(Liu,)g(editors,)g Fy(Pr)m(oc.)g(Of)658
813 y(FME03)f(W)-7 b(orkshop)22 b(on)f(F)-8 b(ormal)20
b(Aspects)g(of)g(Component)i(Softwar)m(e)f(\(F)-9 b(A)n(CS03\),)20
b(UNU/IIST)f(T)-7 b(ec)o(hni-)658 904 y(cal)19 b(Report)g(284,)g
(UNU/IIST)-6 b(,)18 b(P)-10 b(.O.)18 b(Box)h(3058,)h(Macao)p
FC(,)g(Pisa,)d(Italy)-5 b(,)19 b(2003.)523 996 y(17.)42
b(J.)27 b(He,)g(Z)g(Liu,)f(and)i(X.)f(Li.)54 b(Contract-oriented)28
b(component)h(softw)o(are)f(de)n(v)o(elopment.)56 b(T)-5
b(echnical)658 1087 y(Report)19 b(276,)g(UNU/IIST)-6
b(,)18 b(P)-8 b(.O.)17 b(Box)i(3058,)h(Macao)g(SAR)e(China,)h(2003.)523
1178 y(18.)42 b(C.A.R.)17 b(Hoare)j(and)f(J.)g(He.)26
b Fy(Unifying)19 b(Theories)h(of)e(Pr)m(o)o(gr)o(amming)p
FC(.)28 b(Prentice-Hall,)18 b(1998.)523 1269 y(19.)42
b(I.)16 b(Houston.)22 b(F)o(ormal)16 b(speci\002cation)h(of)g(the)f
(OMG)h(core)f(object)h(model.)22 b(T)-5 b(echnical)17
b(report,)f(IMB,)g(UK,)658 1360 y(Hursely)j(P)o(ark,)f(1994.)523
1451 y(20.)42 b(M.)21 b(Huisman)i(and)f(B.)f(Jacobs.)36
b(Ja)o(v)n(a)22 b(program)g(v)o(eri\002cation)g(via)g(a)f(Hoare)h
(logic)g(with)f(abrupt)h(termi-)658 1543 y(nation.)27
b(In)19 b(T)-6 b(.)19 b(Maibaum,)g(editor)m(,)g Fy(F)-9
b(ASE)19 b(2000,)g(LNCS)g(1783)p FC(,)g(pages)h(284\226303.)h(Springer)
m(,)e(2000.)523 1634 y(21.)42 b(K.)22 b(Lano)i(and)f(H.)g(Haughton.)41
b Fy(Object-oriented)24 b(speci\002cation)h(case)e(studies)p
FC(.)41 b(Prentice)23 b(Hall,)f(Ne)n(w)658 1725 y(Y)-8
b(ork,)19 b(1994.)523 1816 y(22.)42 b(C.)18 b(Larman.)27
b Fy(Applying)20 b(UML)e(and)i(P)-6 b(atterns)p FC(.)27
b(Prentice-Hall)18 b(International,)h(2001.)523 1907
y(23.)42 b(K.)21 b(Rustan)h(M.)g(Leino.)36 b(Recursi)n(v)o(e)22
b(object)h(types)f(in)g(a)f(logic)h(of)g(object-oriented)h
(programming.)38 b(In)658 1999 y Fy(LNCS)18 b(1381)p
FC(.)i(Springer)m(,)f(1998.)523 2090 y(24.)42 b(Z.)17
b(Liu.)25 b(Object-oriented)19 b(softw)o(are)f(de)n(v)o(elopment)i(in)e
(UML.)25 b(T)-5 b(echnical)18 b(Report)g(UNU/IIST)f(Report)658
2181 y(No.)i(228,)g(UNU/IIST)-6 b(,)17 b(P)-8 b(.O.)18
b(Box)h(3058,)h(Macau,)f(SAR,)f(P)-8 b(.R.)17 b(China,)i(March)h(2001.)
523 2272 y(25.)42 b(Z.)23 b(Liu,)h(J.)f(He,)h(X.)g(Li,)f(and)i(Y)-10
b(.)24 b(Chen.)44 b(A)24 b(relational)g(model)h(for)f(formal)g
(requirements)h(analysis)g(in)658 2363 y(UML.)36 b(In)22
b(J.S.)f(Dong)i(and)f(J.)g(W)-6 b(oodcock,)23 b(editors,)f
Fy(F)-8 b(ormal)22 b(Methods)h(and)g(Softwar)m(e)g(Engineering)o(,)658
2455 y(ICFEM03,)18 b(LNCS)h(2885)p FC(,)g(pages)h(641\226664.)h
(Springer)m(,)e(2003.)523 2546 y(26.)42 b(Z.)19 b(Liu,)h(J.)f(He,)h(X.)
g(Li,)f(and)h(J.)g(Liu.)31 b(Unifying)20 b(vie)n(ws)h(of)f(UML.)30
b(Research)21 b(Report)g(288,)f(UNU/IIST)-6 b(,)658 2637
y(P)e(.O.)17 b(Box)h(3058,)h(Macao,)h(2003.)26 b(Presented)19
b(at)f(UML03)h(W)-6 b(orkshop)19 b(on)g(Compostional)g(V)-8
b(eri\002cation)658 2728 y(of)19 b(UML)g(and)g(submitted)h(for)e(the)h
(inclusion)h(in)f(the)g(\002nal)f(proceedings.)523 2820
y(27.)42 b(B.)17 b(Me)o(yer)l(.)25 b(From)17 b(structured)i
(programming)g(to)f(object-oriented)h(design:)f(the)g(road)g(to)g(Eif)n
(fel.)23 b Fy(Struc-)658 2911 y(tur)m(ed)d(Pr)m(o)o(gr)o(amming)p
FC(,)f(10\(1\):19\22639,)i(1989.)523 3002 y(28.)42 b(A.)19
b(Mikhajlo)o(v)n(a)h(and)g(E.)e(Sek)o(erinski.)29 b(Class)18
b(re\002nement)i(and)g(interf)o(ace)f(re\002nement)h(in)f
(object-orient)658 3093 y(programs.)28 b(In)19 b Fy(Pr)m(oc)f(of)h
(FME'97,)g(LNCS)p FC(.)e(Springer)m(,)i(1997.)523 3184
y(29.)42 b(D.)18 b(Naumann.)27 b(Predicate)18 b(transformer)h
(semantics)g(of)g(an)f(Oberon-lik)o(e)i(language.)27
b(In)19 b(E.-R.)e(Olerog,)658 3276 y(editor)m(,)i Fy(Pr)m(oc.)f(of)h
(PR)m(OCOMET'94)p FC(.)e(North-Holland,)i(1994.)523 3367
y(30.)42 b(C.)21 b(Pierik)g(and)h(F)-6 b(.S.)20 b(de)i(Boer)l(.)35
b(A)22 b(syntax-directed)h(hoare)f(logic)g(for)f(object-oriented)i
(programming)658 3458 y(concepts.)32 b(T)-5 b(echnical)21
b(Report)f(UU-CS-2003-010,)h(Institute)f(of)g(Information)h(and)g
(Computing)h(Sci-)658 3549 y(ence,)d(Utrecht)g(Uni)n(v)o(ersity)-5
b(,)19 b(2003.)523 3640 y(31.)42 b(A.)18 b(Poetzsch-Hef)n(fter)g(and)h
(P)-8 b(.)17 b(Muller)l(.)26 b(A)18 b(programming)i(logic)f(for)f
(sequential)h(Ja)o(v)n(a.)26 b(In)18 b(S.D.)f(Swier)o(-)658
3732 y(stra,)d(editor)m(,)h Fy(Pr)m(oc.)g(Pr)m(o)o(gr)o(amming)h
(Langua)o(g)o(es)h(and)f(Systems)f(\(ESOP'99\),)g(LNCS)f(1576)p
FC(,)i(pages)g(162\226)658 3823 y(176.)j(Springer)m(,)g(1999.)523
3914 y(32.)42 b(S.)14 b(Qin,)h(J.S.)f(Dong,)i(and)g(W)-7
b(.N.)14 b(Chin.)19 b(A)c(semantics)h(foundation)h(for)e(TCOZ)f(in)h
(Unifying)h(Theories)g(of)658 4005 y(Programming.)k(In)15
b(K.)g(Araki,)g(S.)f(Gnesi,)h(and)h(D.)f(Mandrioli,)g(editors,)g
Fy(FME)g(2003:)i(F)-8 b(ormal)15 b(Methods,)658 4097
y(LNCS)j(2805)p FC(,)i(pages)g(321\226340.)h(Springer)m(,)d(2003.)523
4188 y(33.)42 b(E.)21 b(Sek)o(erinski.)35 b(A)21 b(type-theoretical)h
(basis)g(for)f(an)h(object-oriented)h(re\002nement)e(calculus.)36
b(In)21 b Fy(Pr)m(oc.)658 4279 y(of)e(F)-8 b(ormal)19
b(Methods)h(and)g(Object)e(T)-7 b(ec)o(hnolo)o(gy)p FC(.)21
b(Springer)o(-V)-8 b(erlag,)18 b(1996.)523 4370 y(34.)42
b(A.)19 b(Sherif)h(and)h(J.)e(He.)31 b(T)-6 b(o)n(w)o(ards)21
b(a)f(time)g(model)g(for)g(Circus.)31 b(In)20 b Fy(ICFEM02,)f(LNCS)h
(2495)p FC(.)h(Springer)m(,)658 4462 y(2002.)523 4553
y(35.)42 b(D.)27 b(v)o(on)i(Oheimb)m(.)56 b(Hoare)28
b(logic)g(for)g(Ja)o(v)n(a)g(in)g(Isabelle/HOL.)55 b
Fy(Concurr)m(ency)30 b(and)f(Computation:)658 4644 y(Pr)o(actice)19
b(and)g(Experience)p FC(,)h(13\(13\):1173\2261214,)i(2001.)523
4735 y(36.)42 b(J.C.P)-8 b(.)21 b(W)-6 b(oodcock)24 b(and)f(A.L.C.)e
(Ca)o(v)n(alcanti.)38 b(A)23 b(semantics)g(of)g(Circus.)38
b(In)23 b Fy(ZB)e(2002,)j(LNCS)e(2272)p FC(.)658 4826
y(Springer)m(,)d(2002.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
