%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: slides-icfem02.dvi
%%CreationDate: Fri Oct 18 16:02:18 2002
%%Pages: 24
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: ZapfDingbats Times-Bold Times-Roman Times-Italic Symbol
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: DVIPS.EXE slides-icfem02
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.10.18:1602
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 55380996 39158280 2074 600 600 (slides-icfem02.dvi)
@start
%DVIPSBitmapFont: Fa cmr5 10.37 2
/Fa 2 51 df<143C147CEB01FC1307133FB5FCA213FB13C3EA0003B3B3A7EB0FFF007FB6
12E0A4233975B83B>49 D<903801FFC0011F13FC017FEBFF8048B612E02603F8037F3A0F
E0003FFCD81F80EB0FFE48C76C7E003E80486E13806F13C0B4FC6D147F6D15E0A3163FA2
6C5A6CC8127FC9FC17C0A216FF17805D4B13005E4B5A4B5A4B5A4B5AED7F804BC7FCEC01
FC4A5AEC0FE04A5A4AC8FC147E14F8D903F0EB01E0495AEB0F8049C7EA03C0133E13F848
481407485A48B712805A123F5AB8FC1700A32B3979B83B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmex10 20.74 11
/Fb 11 66 df[<F403FCA21C07F40FF8F41FF0F43FE01C7F1DC0F4FF8063511300641B07
515A515AA2515A515A1BFF64505B6299C7FC62505A631A1F505A1A7F63505AA24F5B6163
614F90C8FCA24F5A62193F4F5AA24F5AA24E5B606260626097C9FC6061183F61187F4E5A
A25F615F615F615F61A25F96CAFC5F60177FA24D5AA24C5BA34C5BA24C5BA25E60A25E60
5EA295CBFC5E5F16FFA25F5DA25F5DA25D5FA25D5FA25D5FA25D5FA25DA294CCFC92B5FC
A25E5CA35E5CA34A5BA44A5BA35C5EA35CA25EA25CA25EA291B5FCA393CDFC5BA45D5BA4
495BA55B5DA45BA25DA45BA25DA45BA35DA390B5FCA45DA25AA74891CEFCA85A5CA85AA2
5CA85AA55CA75AA95CA65AB35CA3B5FCB3B16C5B>94 311 78 133
151 48 D[<127F5A7F6C7E6C7E6C7E7F120F6C7E7F6C7E7E806C7F6D7EA26D7E6D7E8013
0F6D7E807F816D7F7F816E7E81143F6E7EA26E7E8180826E7FA26E7F80826F7EA26F7EA2
6F7E8281838183818381838183707EA283163F838284828482A28482848284A2707FA271
7EA3717EA2717FA28583A2858385A283858385A28385A2187F85A28684A28684A28684A2
8684A286A28486A28486A38486A3737FA4737FA38785A387A285A287A285A287A38587A4
8587A47380A58886A488A286A488A286A488A386A388A486A288A7747FA81D8086A81DC0
A286A81DE0A587A71DF0A987A61DF8B387A31DFCB3B17513F8>94
311 122 133 151 I<F07F80EF01FF17075F173F5F4CB5FC5E040FEBFE004C5B4C13F04C
5B4BB55A4B5C4B91C7FC4B13FC4B5B4B5B4B5B92B55A5C4A5C4A91C8FC4A5B5E5C4A5B4A
5B91B5FC5E495C5B5E4991C9FC5B5D5B5D5B5D5B90B55AA3485CA2485CA25A5DA25AA292
CAFC5AA35C5AA35C5AA6B55AB3B3B3B3AF6C5B399C3E7E99>56 D<127FEAFFC013F07F13
FE7F14C080003F13F86C7F00077F6C6D7E6C806C6C7F6D7F6D7F6D7F6D7F6D7F6D806D80
6E7F6E7F826E7F6E7F6E7FA26E806E8083806F7F8381836F7FA26F7FA26F80A26F80A26F
80A28481A2848284A28284A38284A4701480A619C082B3B3B3B3AE7014803A9C637E99>
I<387FFFF0B57EB3B3B3B3AF6C7FA67E80A37E80A37E81A27EA2817EA26C80A26C80A36D
7F7F817F817F817F6D80827F6D8082806E7F6E7F80826E7F6E806E80806F7F6F7F6F7F6F
7F6F13FF6F806F806F6C7F707F7013FC707F0403EBFF8082707E83170F831701EF007F39
9C3E8199>I<0403B512804C14C0B3B3B3B3AE5E1980A64C1400A4605EA3605EA26093B5
FC60A25D60A24B5CA24B5CA24B91C7FCA24B5BA24B5B5F5D5F92B55A5C5F4A5C4A91C8FC
A24A5B4A5B4A5B5E4A5B91B55A495C4991C9FC495B495B495B495B495B48B55A485C4849
CAFC001F5B485BB512E05C91CBFC5B13F85B13C06CCCFC3A9C638199>I[<0403B512804C
14C0B3B3B3B3AE4C1480A61900A25EA360A25EA260A25E60A393B55AA2605DA2605D605D
95C7FCA24B5B5F5D5F5D5F4B5BA292B55A4A5CA24A91C8FC5E4A5B4A5BA24A5B4A5B4A5B
5E91B5C9FC495B495B495B495B495B495B495B4948CAFC485B485B000F5B4813C0485BB4
48CBFC5B13F05BA27F13FC7F383FFF806C7F6C13F000037F6C7F6C7F6D6C7E6D7F6D7F6D
7F6D7F6D7F6D7F6D7F6E7F826E7F6E7F6E7FA26E7F6E7F826E80A26E806F7FA26F7F8381
8381836F7FA28481848184A28184A2707FA38482A284A282A284A382A21980A67014C0B3
B3B3B3AE701480>58 314 99 129 153 I[<387FFFF0B57EB3B3B3B3AE6C7FA77E80A37E
A280A27EA36C80A36C80A36C80A27E817FA26D7FA26D7FA26D7FA27F6D7FA26D806D80A2
6E7F806E7F82806E7F6E7F806E7F836F7F816F7F6F7F6F7F6F7F03007F707E707F707F70
7F040313F8707F707F94383FFF8083170783A25F171F5F9438FFFE004C5B4C5B040F13E0
4C5B4C5B4C90C7FC4C5A03035B4B5B4B5B4B5B4B5B5D92B55A94C8FC4A5B5C4A5B4A5B5C
5E4A5B5C91B55AA2495C4991C9FCA2495B5BA2495BA2495BA2495BA290B5FC5D5AA2485C
A3485CA34891CAFCA35AA25CA25AA35C5AA7B55AB3B3B3B3AE6C5B>57
314 62 129 153 I<387FFFF0B512F8B3B3B26C13F015383E8199>I[<387FFFC0B57EB3
B17EA380B37EA680A97EA780A57EA880A27EA8807EA86C80A77EA281A47FA381A37FA481
A27FA481A27FA4817FA56D7FA47F81A47F82A380A282A280A282A280A38280A36E7FA46E
7FA38082A38082A28183A281A28381A28381A28381A28381A28183A28183A2167F838284
A2828482A28482A2707FA2707FA3707FA2717EA2173F84838583A28583858385838583A2
727E183F85181F8584868486848684727FA2737EA2737E191F86737EA2737F858785737F
A2747E871A3F747E1A0F87747E868886747F881B7F757E757EA2757E757E1B0388751380
87F47FC01DE01C3FF41FF0F40FF8F407FC1C03A2>94 311 78 136
151 64 D[<98380FFFF85113FCB3B11DF8A363B31DF0A663A91DE0A798B5FCA51DC0A862
A21D80A8621D00A8505BA764A262A464A362A364A462A264A462A264A497B5FC64A54F91
C7FCA46361A46361A363A261A263A261A263A36163A34F5BA496B5C8FCA36260A36260A2
6260A262A26062A26062A26062A26097C9FCA26118FFA2615FA2615F615FA2615F61A25F
61A24D90CAFCA24D5AA34D5AA24C5BA2605E605E60A25E605E95CBFC5E5F167F5FA24C5A
5F5D5F5D5F5D5F5D94CCFC5D5E4B5AA24B5AA24B5A5E5C4A5BA24A5B93CDFC5C5D4A5AA2
4A5A147F5D4A5A5D5B495B92CEFC5B5C495A131F5C495A495AA2495A485B91CFFC5A485A
5B485A121F5B485A485A485A90D0FC7E>94 311 122 136 151 I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti12 24.888 5
/Fc 5 117 df[<E01FFFED01C04FB500F815E0070F02FE1403077FDAFFC0EB07C04EB76C
130F060704F8131F061FD9F0037F4E90C7D83FFEEB3F80DEFFFCDA07FF137F4D01F00201
EB80FF4D01C06E6C7E4D90C9D83FC113004D48EE1FE34D48EE0FF74D4870B5FCDD7FE060
4D48824C844C5B4C90CA5C4C48835F041F197F4C4861167F5F04FF193F4D615D5F5D674B
5BA34B6394CCFCA34B63A49CC7FC5DA271601E7EA21E3E7195C8FCA2836F7FA2838317FF
6F8018F018FE6FECFFC019FC6FEDFF801AF86F16FF1BE06F17FC7016FF7017C070837017
F870830401837083053F831707DD007F82060F821801DE001F811903DF003F801A071A01
746C7F1B1F8787A2757F87A387A31C7FA2EB07C0130FA2011F63A25CA2133F65A349CD12
FF65A3494F5BA26563486D62A25190C9FCA248505AA26E4E5A515A5A6E4E5A515A6E6148
616E4D5B6E4D90CAFC6E4D5A484F5AD9FCFF4D5A9026F87FC04C5A01F06D4B485A003FD9
3FF84B5B9026E01FFE030F90CBFC496C6C6CEC3FFED9800301F049B45A007F6D9026FF80
0F13F090C791B612C0007E023F5E007C020F4BCCFC48020115F0DB003F14800070030101
F8CDFC>115 149 114 272 114 83 D[<EE01F8EE07FE4C7E4C13805EA25EA418005FA2
705AEE1FF0EE0FC093C8FCB3ABEC07FC91381FFF80027F7F49B57E903903FC0FF0903907
F007F8D90FC07FD91F807F90383F0003017E80137C13FC4848497FA2485AA2485A5D485A
A248484990C7FCA348C75A5E5A007E147F5EA200FE14FF485D5C5EC7FC5C5EA25C5E5C5E
A25C93C8FCA25C5DA2147F5D14FF5DA25B5DA25B5DA25B4BEB0F8049151F5DA249153F92
C71300A25B4A147EA2137F4A5CA216014A5CA201FF4A5A5C017F4A5AA24C5A4C5AA2013F
4AC7FC167E5E011F495A010FEB07F0903907FC1FE06DB55A6D91C8FC6D6C5AEC1FF0>49
138 111 263 62 105 D[<EE3FE00207B5FC0103B6FC5BA317C0A290C7FC151F1780A417
00A25DA25EA2157FA25EA215FFA25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA293C7
FCA25CA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA25DA25BA292C8
FCA25BA25CA2137FA25CA213FFA25CA25AA25CA25AA25CA25AA25CA25AA25CA25AA291C9
FCA24815F815015BA2007F14035E5BA2150700FF5D5BA2150F5E5B151F5EA2153F93C7FC
5D007F147E15FE5D003F1301001F5C6D485A000F495A3807FE1F6CB55AC691C8FC6D5AEB
0FF8>43 145 109 270 52 108 D<04FFEEFF80030701E0020713F84B01F8023F13FE4B
6D4A7F92263F83FE902601FF817F92267E01FF903A03FC007FE04B6C9026800FF06D7E02
019226C01FC06D7E4B4B48130F4A486E48C76C7E057F01FC814A48ECF1F8DEF3F06E7E4A
48DAF7E0168094B5FC021F4C804B4B16C096C8FC023F5D92C719E04C5B4A5D147E4E17F0
5E14FE4A5DA25E13014A5D645E90C8FC60A24C5FA295C9FCA24C4D13E0A25FA2047F5F1E
C05FA204FF5F1E805FA24B601E005F654B18FFA24D5F634B61A24D4B5BA24B61634D5F63
4B615190C7FCA2515A4B60515AA2515A4B6D5E505B505B714A90C8FC92B55E714A5A04FB
4B5ADCF9F84A5A4A4D5ADCF8FC49485ADCF07E4990C9FC94393F800FFE4A91391FE07FF8
71B512E04C6C1480050149CAFC4A9138007FE095CCFC5EA25CA25EA25CA293CEFCA25CA2
5DA2147FA25DA214FFA25DA25BA25DA25BA25B5B013F13FE007FB712C0B87EA25FA26C5E
64837EDA67>112 D[<EE0FC04C7E4C7E4C7E16FFA25DA25FA25DA25FA25DA25FA25DA25F
A25DA294C8FCA25DA25EA2157FA25EA215FFA25EA25CA2003FB9FC481880BAFCA219007E
C7000701E0C8FCA25EA25CA25EA25CA293C9FCA25CA25DA2147FA25DA214FFA25DA25BA2
5DA25BA25DA25BA25DA25BA25DA25BA292CAFCA25BA25CA2137FA25CA201FF16F817015C
1703485FA24A140760170F485F4A141F60173F95C7FC4A5C177E5FA24C5A4C5A16076C5E
4C5A4C5A6C4BC8FC017F14FE6E485A013FEB07F890391FF83FF06DB512C06D5C010101FC
C9FC9038003FE0>57 131 110 256 67 116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmbx10 20.74 24
/Fd 24 120 df<B912F0B134117EAE42>45 D<BD12F0F4FFC01DFCF5FF801EE01EFC8A78
7EC7001F02C0C8000315E0E1003F800A0F8076807680768076818977808C898CA27780A4
7780A96865A36865686568535C9DC7FC9AB6FC525C525C5214F00A1F5C52148099B6C8FC
090714FC98B612E094BA12800BFCC9FC1DF0F5FF801EF01EFE05C0C9003F6D7E0A0714E0
0A0114F87614FE777F77807780778077808C77808C898CA2771580A221C0A28AA221E0AA
9BB612C0A4531580A3531500A2535C535CA2535C535C9AB65A525D0A075D0A1F92C7FC51
B65AC012F8671FC09CC8FC1EF81EC053C9FC1D807B767AF58D>66
D<96261FFFF8161E060FB600C0153F4DB700FC15FF051FDCFF805B94B900E05B040306F8
5B041F06FE5B047F726C5A4BB7D88001ECC07F030703F0C7001F01F0B5FC4B92C8000313
F9033F02F8030090B6FC92B600C0163F4A92CA120F4A4A1703020F02F8834A02E0834A4A
183F4A4A8491B6CC7E494A85495C494A854C85494A855B494A868B495C90B6CE7EA2488A
5D5A4B875AA2488A5DA25A8B5D5AA2F700FE20005AA25DA4B6FCB07EA481A27EA3207E6C
1FFF81A27EA2817E676C1FFE817E6F1B036C1FFCA26D6E1A076D6E1BF81F0F6D6EF21FF0
6D806DF53FE0701A7F6D6EF2FFC06D6E1B806D6E616E6E4E13006E6EF00FFE6E02F04E5A
6E6E4E5A020302FEF0FFF06E6E4D5B6E03C004075B033F02F8043F5B030F02FFDCFFFEC7
FC6F03F0020F5B03019226FF8001B512F06F6C92B75A041F198004034EC8FC040018F805
1F17C005014CC9FCDD000F15E0DE001F01FCCAFC787A75F78F>I<BD12E0F4FF801DF81D
FF1EE01EF81EFF1FC0C7001F02E0C8001F81090015F80A1F800A0314FF0A00810B3F800B
0F14F0778077800B0080787F8A78808D78808A8D78808A8D7880A28D8B2280A28B22C0A3
7914E0A322F0A47914F8A622FCB222F8A55514F0A422E0A36722C0A2228067A222009CB6
FC69A2545C6966545C6966545C545C5491C7FC9BB55A535C535C0B0F5C535C0B7F5C0A03
B6C8FC0A0F5C99B65A091F15F0C012C09CC9FC1EFC1EF01E800BF8CAFC1D800AE0CBFC86
767AF598>I<BC12E0F3FFC01CFEF4FFC01DF81DFEF5FFC01EF0C7001F02E0C7000381E0
001F14FE090380090015C00A3F807680768076808876808B7681A28CA2898CA38CAA68A3
689AB6FC68A25292C9FC676764525C525C5214C0525C99B6CAFC090314FC091F14F00803
B612C094BACBFC1DFC1DE052CCFC767E1DF005E0C7000F14FC080180746C6D7E7580090F
8075808A75807580878A8B888BA2888BA78BA78BA6FA07E079EC0FF0A388A28B76171F23
E0768076EF3FC08CBA00FC6E6FEB7F807617FF77DAF00113000B1F9138FC0FFE7791B55A
0B035E0B005E0C1F5DD100011580E4000301FCC7FC8C787AF594>82
D<922603FFFCED0780033FD9FFF0EC0FC00203B600FE141F020FDBFFC0133F023F04F013
7F91B800FC13FF0103EFFF0349DA800714874901F8C7003F13EF4901C0020790B5FC017F
4914004AC9123F4948824849160748498248844A707E5A4A83488586484983A2865A86A2
86B5FC801B7FA280A2806E183FA280806E6CEF1F806F94C7FC6C14F015FEEDFFE016FF6C
16F0EFFF806C17FCF0FFC06C18FC19FF6C19C01AF06C19FC6C85747E6C866D856D856D85
6D856D850101857F023F1980020F19C01403020019E0150F030018F01607DC007F16F817
03EF001F060115FCF0003F190F85070114FE858686127EB48586A286A46D84A21CFCA27F
A21CF87FA26D4E13F07FA26D4E13E07F6D4E13C014C06E4D13806E4D130002FC4D5A02FF
5E03E04B5B03FC030F5BDBFFC0023F5B01FD02FF0103B55AD9F87F91B71280496C95C7FC
D9C00F17FCD980015F90C76C16E048020F93C8FC48DA007F14F80078030191C9FC577A75
F76E>I<000FC012FEA5488BA303F8C76C9138C0000392C8EF001F02FC1B0702F01B0102
C0757E4A8891C985484877138049894989A24989A24989A4491E7F007F20C0A3491E3FA7
48CAF21FE0A5CB97C7FCB3B3B3AD4ABC12F0A87B7479F38A>I<BA00FE030FB812E0A8C7
001F02F0CC003F01F8C7FC0D0190C8FCB3B3B3B3A46E6468A2836E1C0768A26E1C0F686E
801F1F6E6571193F6F515A836F515A6F6E4D5B6F6E5F6F5090C9FC724D5A6F6EEF3FFC03
0002FC4D5A706D4C485A706D6C03075B7002E0033F5B040702FC0203B55A70DAFFE0017F
91CAFC040092B712FC053F18F0050F18C0050395CBFCDD007F16FC060F16E0DE007F92CC
FC070114C08B787AF598>I<030FB5FC0203B612F8021F15FF91B812E0010317F84917FE
011F9026FC001F6D7E4901800103806F010080496D6E13F890B56F7F6F80727F486E6E7F
8784878487A26C5C72806D5BA26D5B6D5BD907FEC9FCEB00F091CAFCA5183F0403B7FC93
B8FC151F92B9FC140F023F150049B612C0010702FCC7FC4914E0013F14804949C8FC48B5
12F84814E0485C5D4891C9FC485B5A5C5A5CA2B5FC5CA360A360806C5F6E5D6C18DF6EED
1F9F6C6D037F14FC6C6EDAFF1FEBFF806C02E0902603FE0FECFF806C02F8D90FFC16C06C
02FF9038FFF8076C92B5487E013FEEC001010F4C7E01014BC7123FD9001F02F002031480
DA007F90CCFC5A507BCE60>97 D<973807FFF00607B6FCA8F00003190086B3AD93381FFF
800303B512FC033F14FF92B712C0020716F0021F16FC4A9138007FFE91B500F0010FB6FC
4902C01301010791C87E4949814901F881494981498390B548814B814884485CA24891CA
FCA25A5C5AA25AA25C5AA5B5FCAE7EA47E80A27EA37E807EA26C6E5D6C60816C606D6D5D
6D6D5D6D6D5D6D6D92B67E6D6D4A15FE6D6D020792B5FC6D02E0EB3FFE6D6C9039FC01FF
FC021F90B612F06E16C0020116006E6C14FC030F14F09226007FFEC791C7FC607979F76E
>100 D<93381FFFE00303B6FC033F15E092B712F8020716FE021F707E4AD9FC0114E091
B526E0001F7F49028001077F010749C76C7F494902007F49496F7E49496F1380494917C0
8590B5486F13E0485C487213F0A24891C914F885481AFC5C5A7313FE5AA25C5AA21BFF85
A2B5FCA291BBFCA51BFE02FCCCFCA67EA3807EA37EA26C7F1B7E1BFF6C807E6F5E6C1AFE
6C6E16036FEE07FC6D180F6D6DEE1FF86D6DEE3FF06D01FFEEFFE06D6E4A13C06D02E002
0F1380010002FC023F13006E903AFFC007FFFE021F91B65A020717F0020117C06E6C93C7
FC030F15FC030115C0DB000701F8C8FC50507BCE5B>I<EF7FFE041FB512C093B612F003
0715FC031F15FF037F168092B5D8F01F13C00203EC803F4A49484813E04A4915F04A4990
B5FC4A5B4A494814F816C091B51280A25B16005B7114F05D497013E0A27213C0060F1300
725A95C8FCB2B912E0A8D8000791CAFCB3B3B3A7007FB712FEA845797AF83C>I<14FE90
3803FF80010F13E0497F497F497F90B57EA24880A24881A76C92C7FCA26C5CA26D5B6D5B
6D5B6D5B01031380D900FEC8FC91C9FCB0ECFFFE007FB5FCA8C67E131F7FB3B3B3A5B812
C0A82A7979F836>105 D<ECFFFEB6FCA8C67E131F7FB3B3B3B3B3ABB812E0A82B7879F7
36>108 D<902601FFFC912603FFF0933807FFE0B6033FD9FF80037F13FF4DB600E00203
B612C0050703F8020F15F0051F03FE023F15FC057F6F91B77E9426FFFC076E48D9F80F7F
4CD9C0016E48D98003804C48C79128E007FC000180C66CDA07F86EDA0FF07F011F4A4870
4848826DDA1FC0EF3F804C486E6D48C86C7F4CC815FE047E7148834CEFFDF8DBFDF86FD9
FFF081A2DBFFF04E834C60A24C60A34C95C9FCA493C95CB3B3A6B8D8F001B8D8E003B812
C0A89A4E79CDA5>I<902601FFFC913803FFF0B6033FEBFF804DB612E0050715F8051F15
FE057F819426FFFC07804CD9C001804C48C780C66CDA07F880011F4A48826DEC1FC04C48
6E7F4CC8FC047E835EDBFDF881A2DBFFF0835EA25EA35EA493C9FCB3B3A6B8D8F001B812
E0A8634E79CD6E>I<93380FFFF04BB67E031F15F892B8FC020317C0020F17F0023F49C6
6C13FC4A01E001077F49B5008001016D7E4949C86C7F49496F7F49496F7F49496F7F4949
6F7F49496F7F90B5486F7F481B8092CAFC481BC0481BE04A83481BF0A2481BF8A3484971
13FCA3481BFEA5B51AFFAE6C1BFEA46C1BFC6E5FA26C1BF8A36C6D94B512F0A26C1BE06F
5D6C1BC06C1B806F5D6C6E4B14006D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D6C49B55A
010102E0010714806D02FE017F91C7FC023F90B712FC6E5F020717E0020094C8FC031F15
F8030315C0DB000F01F0C9FC58507BCE63>I<DAFFFEEC7FFEB60207B512F0053F14FF4C
B712C0040716F0041F16FC4C16FF93B5D8803F8092B526F8000780C66C03C06D14F0011F
92C8806D4A6F7F04F86F7F4C814C6F7F4C18804C6F14C093C97E1DE0A27414F0A27414F8
A21DFCA2871DFEA4871DFFAE1DFEA263A31DFCA298B5FC1DF8A21DF0621DE0621DC06270
1880704B1400A2704B5B704B5B704B5B04FE92B55A704A5C05C00107148005F0011F91C7
FCDC7FFE90B512FC041FB75A7016E0040393C8FC040015FC051F14C0050101F8C9FC94CC
FCB3A6B812F0A8606F7ACD6E>I<93261FFF80EC07F00303B500F0140F033F02FE141F92
B77E020770133F021F04F0137F4A7013FF91B638807FFC49913AF8000FFE01010702E090
3803FF03494A6D13834991C8EA7FC74949ED3FEF49496FB5FC90B55A4B814884485C8548
4A81A2485C854891CAFC865A5CA25AA45CB5FCAE7E80A37EA36C7FA36C8097B5FC7E6F5D
6C606C80616C6E5D6D6D5D6D5F6D6D5D6D6D92B6FC6D6D6C5B6D6E1307010002F0EB1FFC
6E9039FE01FFF8021F90B65A020716C002011600DA003F14FC030714F0DB003F90C7FC93
C9FCB3A6060FB8FCA8606F7ACD68>I<902601FFF8903803FF80B6021F13F0057F13FC94
B6FC040315804C15C093260FFE0F13E093261FF01F13F005E014F8C66C91383F803F011F
EC7F006D027E4913FC16FEEDF9FC5E5E15FB5E03FF6E13F8A24C6D13F07213E07213C04C
01011300F0007C96C7FC93CAFCA65DB3B3A2B812FCA8464E7ACD52>I<912603FFFEEB03
C0027F9039FFE00FE00103B6EAFC3F010F92B5FC133F49EB00072601FFF0EB007F480180
141F4890C812074848814981484881003F177F5B183F127FA2181F12FF7FA27F7F6D6CED
0FC06E92C7FC14F814FF6C14FCEDFFE0EEFF806C16F017FC6C16FF18C06C17F06C836C83
6C836C836D1780011F17C0010717E0010117F06D7E020F16F81400030315FCED000F1600
051F13FE83007E1603B48283187F6D163FA36D161FA219FC7FA27F6DEE3FF8A26D17F06D
167F6D17E06E15FF02E0020313C06E4A138002FE021F1300913AFFC003FFFE92B65A01E3
16F001C016C0D9003F92C7FC48010714F80078D9007F90C8FC3F5079CE4E>I<ED7F80A7
15FFA55CA35CA35CA25CA25C5CA25C91B5FC5B5B5B5B133F90B912C01207BAFCA6D80007
0280C8FCB3B3A3F007F8AE180F6D6E14F0A2181F6D17E070133F6D17C070137F6E6DEBFF
806ED9FF0313006E91B5FC6E5D02035D6E15F06E6C5C030F14809226007FFCC7FC3D6E7C
EC4D>I<91B5933801FFFEB74AB6FCA8C66C93C7FC011F183F6D84B3B3A962A362A397B5
FC6D5FA2616D6E5CF10FEF6DDD1FCF7F70DA3F8F14C06D6E02FFEDFFE06E6D0103130F6E
01FFEB1FFE6E91B512F8020716F0020116E06E6C1580030FECFC00DB007F01E003E0C7FC
634F79CD6E>I<B890B700FC91B612FCA8D8003F49C8001F01F0C80001EBFC006D739238
003FE06F816D677070167F856D734C5A70806D9CC7FC70705D6D71604F6E1403826D4D60
707114076E654F6E140F826E4C607071141F6E654F6E143F7015CF6E047F607170147F6E
05875F7101FF6E14FF1A036E4B6F92C8FC05E0606E4B486C5E05F0EF80034F7E6E030704
C05B05F818076F4A486D5D05FCEFE00F4F7F6F021F04F05B05FE496D141F6F023F6005FF
EFF83F4F7F6F027F04FC5B4E486D147F6F63F5FEFF96C77E6F96B5C9FC4E806F62A24E80
6F624E817061A24E8170614E817061A270496F5BA24E817061A27090C96C90CAFC4D82DC
00FCEE00FC864E7CCC8F>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe msbm10 20.74 1
/Fe 1 116 df<912601FFC01A06021F01F81A0F027F13FF49B600C01A804903F0191F01
0F15FC4981496F7E498290B812F0488372183F4805FF190048DA007F8002F0010F6E5F48
01C0010114F091C86C6D5F4848031F6D4C5A01F8030713FF496F6E15034848030002E04B
5A49706D150F061F01FC153F48487001FF4B5A90CA6C02C0EB01FF060102F801075B007E
7102FF137F7391B65A00FE061F5F4884735F070194C7FC735E083F5D745D080715E0007C
07015D0078736C91C8FC090F13FC0030080113C0712876BE86>115
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi7 14.518 12
/Ff 12 119 df<ED0FFF4AB512F0020F14FC027F14FF49B712C04916E0010F16F049EBC0
03D93FF8C7127FD97FC0EC0FE001FEC8EA07C0D801F892C7FC5B485A5BA212075B7F1203
9038E001FE9039F03FFFE0D801F9B57E6CB6FC6D130315FF90B6FCD801FB5C2603F07F13
80D807C0CAFC485A48CBFC123E123C127C127812F85AA417186C163C177C6C1678007EED
01F8D87F804A5AD83FE0EC1FE0D81FFE49B45A6CB75A6C93C7FC6C5D6C15F86C6C14E001
1F91C8FC010113F034387AB541>34 D<020FB97E1BF81BFF4A19C06E85DA000701C0C700
0713F803014902007F4BEF3FFE757E94C96C1380874B19C0875E1DE0030F83A25EA2031F
5F1DC05EA2033F4D1380A24C4C130063037F60515A4C4C5A515A03FF4C5B080713804C4B
90C7FCF23FFC4A4CB45A070F13E093B8C8FC1AF84A83F2FF8093C8000F13E0070013F84A
EF3FFCF20FFF4B707F747F140F747F4B8486141F885D1B7F143FA24B17FFA2147F644B5E
A202FF61624B4C5B6449605090C7FC4B4C5A505A494E5A07035B92C9000F5B073F138049
94B5C8FC011F040F13FC007FBA12F01AC0BBC9FC19F86C95CAFC5B5277D168>66
D<007FB66C030FB512FC1DFEB719FC626C92C97EC66C01C0040014006D48CBEA3FF86D48
19E06E616499C7FC010F197E1B7C636E170163505A6D180763505A6F161F98C8FC1A3E6D
187E62626F15014F5A6D6019074F5A6F5E191F4FC9FC6D173E6119FC6F5D4E5A1803027F
5E4E5A180F6F5D4ECAFC023F5D183E606F14FC604D5A021F1403604D5A6F130F604DCBFC
020F5C173E5F6F13FC4C5A6E5C16034C5AEE87C0168FEE9F806E91CCFC16BF16FE5E5EA2
6E5B5EA25E5EA26E90CDFC5DA2157C5F5477D151>86 D<ED3FE0913803FFF8020F9038FE
03E0023F6D487E9139FFE07F8F499039800FDFF8903A03FE0007FFD90FFC7F49486D5B49
5A49487F495A4A6E5A5A4890C812FF5A495E120F495C121F495E123F5E127F4993C7FCA2
5E12FF495DA2160FA2495DA2041F147019F05FA2043F130119E017F0007F157F04FF1303
4B15C06C6C4914074B15806C6C49140F000FDA3F9F14006C6C9039FE0FF81F2703FE07FC
EBFC7E6CB5486CB45A6CDAE0015B013FD980005BD907FCC7EA1FC03C3678B44B>97
D<F01FF894383FFFFC5F19F8A3EF007FF03FF0A2187FA219E0A218FFA219C0A25FA21980
A25FA21900A25FA260A2170FA2DB3FE05B913803FFF8020FEBFE1F023F13FF913AFFE07F
9FF8499038800FDF903A03FE0007FFD90FFC7F49486D5B495A49487F495A4A6E5A5A4890
C812FF5A495E120F495C121F495E123F5E127F4993C7FCA25E12FF495DA2160FA2495DA2
041F147019F05FA2043F130119E017F0007F157F04FF13034B15C06C6C4914074B15806C
6C49140F000FDA3F9F14006C6C9039FE0FF81F2703FE07FCEBFC7E6CB5486CB45A6CDAE0
015B013FD980005BD907FCC7EA1FC03E5578D348>100 D<F0FF80050713F04D13F8053F
13FC94387FC0FE9438FF01FF4C485A60EE03FC1607A2040F14FE05F813FCF003F8041FEB
01F095C7FCA2163F5FA4167F5FA416FF5FA5021FB7FC5CA360DA00030180C7FC94C8FCA5
5D5EA4150F5EA5151F5EA4153F5EA5157F5EA415FF5EA45C5EA54A90C9FCA45D1407A25D
A34A5AA2D80F805BEA1FC0383FE01FD87FF05B5D38FFE03F5D4ACAFC13C0387F80FEEB83
FC6CB45A6C13E000075B000190CBFC406D78D443>102 D<153C15FE4A7E4A1380A25C16
00A26E5A6E5A6E5A92C7FCB1EB07F8EB1FFEEB7FFF90B512C03801FC3F3903F01FE0D807
C07FEA0F8013005A001E133F123E123C127C0078137F00F85C4813FF5DA2485A00005C5B
92C7FCA25B5C130FA25C131F5CA2133F5C017F14E0ECE001A213FFECC0034815C0EC8007
1680150F16004A5A151E153E5D6C495A90387F87F0ECFFE0011F5B6D90C7FCEB03FC2352
7AD031>105 D<D93F80EC7FF0D9FFF0903803FFFE4801FC010F6D7E486D013F802607E3
FFD9FFC07FD80F81903A01FE003FF00100D983F86D7E48DAC7E0130F001EECCF80003E02
DFC77F003C14FE007C5C00785CA2495B00F85C12F05D4949141F00E060000091C8FCA249
163F615CA2010F167F615C18FF011F5F5F4A5EA2013F4B1407F1000F5C5F017F4C131F05
0F141E4A4B133E1A3C01FF187C4E13784A17F81AF0481801F103E04A913907FC0FC00503
EB3F8095B5120091C95B6C48EE7FF8017CEE1FE048367AB455>110
D<D93F80EB07FED9FFF090383FFF804801FC90B512E0486D4814F03C07E3FF03FC03F8D8
0F8190390FF000FC010090389FC001489138FF0003001E4AEB07FE003E4A130F003C5C00
7C4AEB1FFC00785CA24949EB0FF800F817F000F04AEB07E094C7FC5B12E0000091C9FCA2
5BA25CA2130FA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25AA25CA391CAFC
6C5A137C37367AB440>114 D<ED7FF80203B51280021F14E04A14F09139FFC00FF8903A
01FE0001FCD903F8EB007E4948143E4948147E4A14FE011F14011603495AA2017F15FC6E
EB01F8EE00F002F0140014FCECFFC015FF6D14E016F86D14FE826D15806D15C0010115E0
7F021F14F0140015071500163F0002151FD81FC0140F487E127FA200FF16E0A349EC1FC0
49158090C8123F00F8ED7F00007C15FE007EEC03FCD83FC0EB0FF8D81FF8EBFFF06CB612
C0000392C7FCC614FC010F13C02F3677B441>I<EB07F8D91FFEED03E0D97FFF4B7E90B5
00C04A7E2601FC3F151F3903F01FE0D807C06D143FD80F805F13005A001E177F003E013F
5E123C127C0078017F15FF00F84A5D4813FF5D5F48485F00005CA2495D92C791C7FC5B5C
5F010F5E5CA2170F011F5E5CA2051F14704E13F0495AA2053F130106F013E0A2177F011F
EF03C017FF6E491407010F4A15804C140F6D6CD90F9F14006E90393F0FF81F902703FF81
FE147E6D903AFFFC07FFFC6D6C496C5B021FD9E0005B020390C7EA1FC044367AB451>
117 D<D907F815F8D91FFEEC01FED97FFF140390B500C0497E3801FC3F2703F01FE04913
80D807C07FEA0F800100814882001E013F80003E82003C177F127C0078017FED3F0000F8
5C4813FF4B80A24848161E00005CA249163E92C8123C5B5C187C010F16785C18F860131F
4A1401601703604948140760170F95C7FC5F011F153E173C6E147C5F010F4A5A6E495A6D
6C495A6D6CEB1F806DD9C07FC8FC6DEBFFFE023F5B020F13F00201138039367AB445>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi10 20.74 32
/Fg 32 122 df<D901FE923801FFE0902607FFC0021F13FC011F01F091B6FC496D010315
C090267F0FFC49010113E09026FC03FE903A1FF0007FF001F86DD93FC0EB3FF848486C4A
C7EA1FFC0003DB80FC140F01E0DA81F815FE0007EDC3F001C0ECC7C0000FDBCF80EC07FF
018014DF04FFC8FC001F5D01005C4A5B5A003E5D4C5D5C007E5D127C5E00FC495F481AFE
007892C9FCC7FC4A173FA24B17FCA2023F177FA24B17F8A2027F17FFA24B17F0A202FF5E
A24B17E0A2495FA24B17C0A2495FA24B1780A2495FA24B1700A2495FA292C95BA249173F
A24A5FA2013F177FA24A5FA2017F17FFA24A5FA2605C4A5F6D5A6D485D90CAFC62A260A2
62A260A297C7FCA260A261A2183FA261A2187FA261A218FFA261A25FA261A261715B96C8
FC183E50717BCB55>17 D<ED03E0ED0FF04B6CEE0FC04B6C4C7E517E037F177F1BFF5EA2
03FF5EA24C5FA24A5FA24C5FA24A5FA24C5FA24A5FA24C94C7FCA24A5FA293C95BA24A17
3FA24B5FA2023F177FA24B5FA2027F17FFA24B5FA202FF5EA24B5FA2495FA24B5FA2495F
1DF84B5FA2494D14011DF01B00A2491A034F15E062193F49057F14071DC019FF4E49EB0F
80495E6F4A151FDE0FCF15006FDA1F8F5C4993263F07FE133E6F027E157E6F902601FC03
5C03FF903B07F801FF01F890B627C03FE000EB87F002F990B5486DB45ADAF07F91C76C5B
031F01FC020F5B48020101E0DA03FEC7FC92CEFC5CA25AA25CA25AA25CA25AA291CFFCA2
5AA25BA2123FA25BA2127FA25BA212FFA25BA25B6C5A5B001FD0FC5D717BCB68>22
D<933801FFF8043FEBFF804BB612E0030F15F8033F15FE92B8FC020317C0020F17E04A90
26F8003F13F04A90C71203DAFFF014004901C0153F4990C9EA1FE0D907FCEE07C002F0EE
0300494893C7FCEB1F80A249CCFC133E137E137CA7137EA27F4BB4FC90261F807F13F8D9
0FE3B57E6DB67E6D14036D9038E0003E4990B512FE495DD91FE75CD93F8014E049CCFC13
FEEA01F8485A5B1207485A485A90CDFC5A123E127E127CA312FC5AA56C18E0A21801007E
170361007F17076C6C4C5A6D043FC7FCD81FF016FE01FC15036CB46CEC1FFC6C01F89038
07FFF06C90B75A6C5F6C94C8FC013F5D6D15F8010715C001004AC9FC020F13C044527BCD
50>34 D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03F0
1212719130>58 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA27EEA1F
FEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F14005B131E133E133C
137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>I<972607FFF0ED01C0
4FB61503071F03E0140796B700F8140F060370EC1F80061F04FF143F067FDA800F6D137F
4DB500E0C76D13FF050791C8D83FE01400051F01F892380FF001057F01E0923803F80394
B5C96C6C5A040301FC706C485A4C49EF7F1F041F01E0EF3FBF4C0180EF1FFF4C90CB5C92
2601FFFC844B5B4B49844B49624B49844B90CCFC4B48854B48635C4A49854A5B4A49634A
5B4A5B4A1C7F93CE5B4A5A5B495B4B645B495BA2494999C7FC5B5D5B4B1B7E90B5FC92CF
FC481EFE6748491C7C9CC8FC485BA3485BA3485BA35A5CA35A5CA4B55AA691D3FCA31E3C
1E7E1E7CA31EFC66A21D01666C1C03661D07661D0F6C6D631D1F53C9FC6C1C3E6E1A7E65
6C646E19016C515A525A6C6D4F5A6E4F5A6C1B3F6C6D4FCAFC1CFE6D6C4E5A6D6C4E5A6D
6DEF0FF06D6DEF1FC06D6DEF7F806D01F84DCBFC6D6DEE03FE6D01FFEE0FF86E01C0ED3F
F06E01F0913801FFC0020F01FE020F5B6ED9FFF0D9FFFECCFC020191B612F86E6C16E003
1F1680030303FCCDFCDB007F14C0040101F8CEFC7A7E78F97B>67
D<0307BB12E04B1AFF1FE01FF81FFE6F757E92C76C01FCC8000780050F01F0DB007F13F0
0C0F7F4F04037F0C007F4D737E797F4F717F0D077F5F797F4F717F8B4D87207F96CC7F20
3F94B5868C4E1B80A25E7A13C060A25E22E060A25EA260A25E22F060A25EA260A24C1DE0
6860A25EA295CD5AA293B51CC0A25F685D22805F9DB5FC5D22005F674B65A24D4F5BA25D
555B5F694B63694D61694B63694D4F90C7FCA24B515AA294CC485B6892B54F5B664C6354
5B4A515B9DC8FC4C61545A4A515A535B4C4E5B535B4A505B535B4C4E48C9FCF5FFFC4A4F
5B0A075B4C4D13C00A3F5B4ADFFFFECAFC09075B4A49041F13F04A4DB512C00103B56C03
1F91CBFC007FBC12FCBD12F01CC051CCFC1BE06C07FCCDFC84767AF58F>I<0307BE12E0
4B1DF0A48192C76C01FCC9120F050F01F0EE007F0D0F13E04F17038B4D85207F4F183FA2
4D1A1FA24F19C0A24D1A0FA296CCFCA294B5FCA26021805EA260A25EA260E201E0141F4C
4D7E21004E5E8C4C050792C7FCA24E5E1C0F5EA24E4B5A1C3F5E1C7F4E4BCAFC634C5E1B
0F95C8B45A95B7FC93B9FCA264A25D4DC712014D9138001FF81B0F4B1707A24D5E1B035D
A24D5E1B075DA24D4CEC01E08C4B050F1503A24D4C4A5AA24B71C8485A98C9FC4D621F1F
5D55C7FC94CDFC1F7E92B5FC675E1E014A641E034C4F5AA24A1B0F674C191F545A4A1B7F
674C19FF654A5090C8FC654CF01FFE1D3F4AF2FFFC1C034A49171F4A96B55A0103B56C16
3F007FBE5ABFFCA266A26C657C767AF57F>I<0307B800FC91B912804B714918C0A3511A
806F4D6D180092C76C0280C9000F02F0C7FC050F01F8CA000191C8FC4F61A24F614D61A2
4F61A24D61A24F61A24D61A296CB5CA294B560A24E62A24C62A24E62A24C62A24E97C9FC
A24C97B5FCA24E61A24C61A24E61A24C61A24E61A24C61A24E61A24C61A295CB5C95BBFC
93BDFCA268A25D4DCB123F4D62A24B62A24D97CAFCA24B97B5FCA24D61A24B61A24D61A2
4B61A24D61A24B61A24D61A24B61A294CB5CA292B560A24C62A24A62A24C62A24A62A24C
97CBFCA24A97B5FCA24C61A24A61A24C61A24A61A24A614A610103B500FC057FEBFF8000
7FB800C0010FB812F8B96C4983A34E616C4D6D5F92767AF58F>72
D<0307B600F8091FB612F04B6F5115F86BA27398B712F06F23E092C76C524AC7FC050F52
14E0A15B06BFF307DFE80F9F5B94261F9FFF1BBFFA1F3F061F093E91C8FCA2053F525AA2
053E0AF85BF901F0DD7E0F6D1AFF575A057C51485BA205FCF30F81A205F8E11F015B213E
04016D6D61217C05F009F85CA2040351485AF803E005E066726DEF07C0040765F80F8005
C0E01F005CA2040F093E5B68058066726D5F041F65555A05004F4892C9FCA24C50485B55
5A043E6D6D6255C7FC047E083E14FFA2047C505DA204FC505B545A4C6E6C62545A030150
485BA24C4F485DA2030350C75A1E3E4C6E6C62660307505CA24C4E485E535A030F65736C
4A5A4C66535A031F4FC85AA293C8043E94CAFC654B65736D5B033E66525A037E4E4815FF
A2037C4E485E525A03FC64736D48C8FC4B063E5FA202014F5DA24B4E5FF3C1F002037001
E15EF3E3E04BDDE7C05FA20207DEEF805DA24B05FFC95C020F60736063021F4E60143F02
7F4E5E4A6C5F496D64010F6D6F4993B5FC017FD9FF80080714F0007FB74C91B9FCB86C92
C74884A26294C84898C9FC6C4B03786E5FAD7679F5A7>77 D<0307BB7E4B1AF81EFF1FE0
1FF86F8792C76C01FCC8001F13FF050F01F0030180E3003F7F4F040F7F787F4D727F787F
4F707FA24D737EA24F711380A25F21C096CBFCA294B5FCA260A24C62A260A25E9CB51280
60A24C1C006660684C61684E4D5BA24C63545B4E5F684C4F5B5490C7FC4E4D5A535B4C4E
5B5313E095CA001F5B535B93B5DDFFFEC8FC0A0713F84D043F5B0903B512C04B90B948C9
FC1DF81DC00AFCCAFC4B188005FCCFFC5FA25DA25FA25DA25FA25DA25FA25DA25FA25DA2
94D0FCA292B5FCA25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA25C5C0103B512FC00
7FB812C0B97EA260A26C5F7A767AF56F>80 D<DF3FFE151C0603B500E0143C061F02FC14
7C95B714FC050393388001F8050FEEE0034DD9E00713F0DD7FFEC7387FF807DDFFF89139
0FFC0FF04C01E0913803FE1F4C0180913801FF3F4C48C9EA7F7FDC1FFC93383FFFE04C48
824C5A4D824C487013C04B5B4B90CA7E5D4C19804B4883151F5E033F1A004C83157FA265
4B5AA34A62A44A62A3701701651C007095C7FCA28282826E8017E017FCEFFFC06E15F8F0
FF806F15F8F1FF806F16F06F16FE747E6F836F17F06F836F836F6C827082160F040383DC
003F821703DD007F811807DE007F801907190086081F7F8686A28686A386A2131E133EA2
017E197F64017C19FFA213FC64A300014F5BA36400036199C8FC626D6100074F5AA26D4E
5A505A5A6E4D5A6E4D5A4F5B486D4C90C9FC6E4C5A6E4C5AD9FBFE4C5A263FF1FFEE7FF0
01E001C04A485ADA7FF002075B496CB4021F90CAFC48486C01F0EBFFFED9000790B612F8
007E6D5E007C010016C000FC023F4ACBFC48020314F80070DA001F1380667E77F96A>83
D<007FB700FC0407B71280B81CC064A221806C4C701600D8001F02F0CB003F14C0010702
80060749C7FC6D49CC6C13F0674B7313809CC8FC6D64535AA2535A6F6266535A1D1F6D64
1D3F9BC9FC1D7E6F19FE65525A1C036E621C0765525A70171F6552CAFC646E197E1CFE64
515A1B03705F1B07515A646E181F6451CBFC6370167E1BFE63505A6E170363505A1A0F70
5E1A1F6350CCFC6E5F1A7E62190162701403624F5A190F6E5F191F624FCDFC705C197E61
18016E5E1803614E5A70130F614E5A183F6E93CEFC60187E60170104FF5B4D5A1707606F
130F604D5A173F05BFCFFC17FF5F5F815F5FA25FA25F5F8194D0FC5EA25EA25E5EA26F5A
5E7A7A76F564>86 D<007FB700F0027FB700F80203B71280B86C91B84B16C0A44D6E4C19
80D8003F02E0C9003F02E0C9001FECE000010F49CA000F91CA000391C7FC4B7101FC7113
F86D494F715BA16C5A4B4F617761A190C8FCA1127E6F711AFEA15AA15A595A6D2103A15A
511907A15A514F5A6359C9FC6377173E51197E237C6F05FB61F201F909F14E5A1A036D07
E14E5AE007C118076BE00F81180F081F6209014ECAFC1A3F083E193E087C6E167E227C08
F819FC6A6F4B486C4D5A1903504E5A6D0507190750614F48180F6A4FC74DCBFC61073E19
3E197E077C6F5D4F19FC694E4818016F02036F5E4F4E5A18074F4E5A6E4B48180F694EC8
161F9ECCFC063E193E187E067C6106FC19FC4E715B4D481801687048486F4A5A17074E4E
5A170F6E4B4E5A4DC9151F9DCDFC053E61057E193E057C6117FC4D61DC81F018C167DC83
E018C304C362DCC7C070EBC7C016CF4DF0CF806E01DF19DF94CA92CEFC04FE19FF664C61
A24C61A24C615E665E765B4C61A26E90CB91CFFC5D655D654B61A24B615D655D6E48F007
80AA7A76F5A3>I<4BB800F8020FB712F04B5016F8A323F06F4D6E16E092C76C4AC9EDF0
00050702F0043F91C7FC08C07013F8714A7013E07191CA148056C8FC716274EE1FF06872
6D4C5A555A7296C9FC7416FE545A726D4B5A545A724D5A744B5A545A726D4BCAFC1EFE72
6D1401535A725F744A5A535A726E495A535A734BCBFC7513FE525A736D485A1C07734A5A
75485A65736D485A52CCFC7314FEF3FDFCF3FFF8735C64735CA26485A2747FA28688A288
6297B5FC4F806188F107F7F10FE3DF1FC37FF13F83DF7F017F19FE4E487E4E488118074E
486D7F4E5A4F7F4E48814EC7FC06FE6E7F4D5A4D486E7F4D5A4D48804D4882173F4D486E
7F95C8FC05FE814C48834C5A4C486F804C5A4C48824C48844CCAFC04FE717F15014B4883
4C85ED0FF04B48717F4B5A037F844B48855C020790CB6C7F5C023F6D4D7F49B56001076E
053F8090B600F04CB612F8007FDBFF80033FEDFFFEB84C82A494C95F8D767BF58F>I<EE
0FF893B5FC030314C0030F9138E007C0923B3FFC0FF00FF0923AFFE003F81F4A903A8000
FC3FF8020790C7EA7E7FDA0FFC143E4A48EC1FFF4A485E4A488014FF49498049495E4990
C8FC5B49488162495A137F4A5D01FF60485BA248495D97C7FC5A5C485F61485BA2183F48
6091C9FCA2187F48605BA218FF00FF605BA25F615BA25F4F137CA25B4D15FC4F13F8A31A
014D15F0007F4C1300A24D1403003F4C15E06D92B5FC4EEB07C0001F5D4C150F6C6CDA07
E715800007DB1FC7141F6D91263F83FF14000003DB7E035C6C6C49486C147E6C9027C007
F8006D5A90277FF03FF090387FC3F8011FB500C06DB45A6D91C76C5B010301FC02075B90
26007FE0020190C7FC4E4E79CB5B>97 D<ED7F800103B57E90B6FC485D5AA36C92C9FCC7
FC143F805DA2143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA292
CAFCA25BA25CEE0FFC013F91387FFF804BB512E0DAFC0714F892391FF81FFC017F90393F
C007FE9239FF0001FFDAF9FC6D1380DAFBF815C090B500E0EC7FE04B143F4B15F092C813
F84849151F5C4A16FCA2485B4A16FE5CA25AA24A16FFA25AA291C9FCA2485FA25B19FE00
3F177FA25BA2007F17FF19FC5BA25F00FF18F85BA24D13F0A25B19E05F19C05F1980A24D
1300495E173F604D5A6C7E4D5A604C5B003F4B5B95C7FC6C6C5C4C5A6C6CEC1FF84C5A6C
6C4A5A00034A485A6C6C495B2800FF800FFEC8FC90397FE07FF86DB55A010F14C0010349
C9FC9038007FE0407A78F74A>I<EFFFF0040F13FF047F14C04BB612F003079038C01FF8
923A1FFE0003FCDB7FF8EB00FE912601FFE0147F4A0180804A90C8EA1F80DA1FFC15FF4A
48020313C04A485C4A485C49495C495E495B4990C8FC4E1380495A495A017F18004A6F5A
01FF5F48496F5A725A484992C8FC5AA2485BA3485BA25A91CCFCA35A5BA312FF5BA55BA7
007FF00180F103C0F107E0F10FC0123FF11F80F13F006C6C177E4E5A000F4D5A6D4C5A00
07EF1FE06C6C4C5A6CEFFF806EDA03FEC7FC6C6DEC0FFCD97FF0EC7FF0D91FF8903803FF
C06DB4013F90C8FC010390B512FC6D15E0D9003F91C9FC020313E0434E79CB4B>I<F37F
800703B512C096B6FC4E158060A372150095C7FC1A3F8663A21A3FA263A21A7FA263A21A
FFA263A261A263A261A263A261A263A261A298C7FCA261A262EE0FF893B5133F030314C0
030F02E05B92393FFC0FF0923AFFE003F87F4A90388000FC020790C7007E5BDA0FFC143E
4A48EC1FFF4A5A4A486E5B14FF494980495B4990C85C5B494881A249485F137F4A5D13FF
48495FA248495DA24896C8FC5C485FA248495EA2183F5A91C95BA2187F5A495FA218FF12
FF495FA25FA2495FA25F1B7C615B4D15FC6361A21A014D5D007F4C1300A24D1403003F4C
5D6D92B5FC4E495A001F5D4C150F6C6CDA07E75D0007DB1FC7141F6D91263F83FF91C7FC
0003DB7E035C6C6C49486C147E6C9027C007F8006D5A90277FF03FF090387FC3F8011FB5
00C06DB45A6D91C76C5B010301FC02075B9026007FE0020190C8FC527A79F75A>I<9338
01FFE0043F13FC4BB6FC030715C0033F9038807FE0923A7FF8000FF0912601FFE0EB03F8
020701806D7E4A48C8FCDA3FFC814A48157EDAFFE0157F494981495B5B4990C9FC495A49
485E017F177E495AA2484916FE484D5A5C484D5A4A4B5A484D5AF03FC04849EDFF800507
90C7FC48EE3FFE91C7380FFFF891B712E095C8FC4816F004FCC9FC49CCFCA212FF5BA45B
A75BA5007F1803F10780F10FC06DEF1F80123FF13F00197E001F606DEE03F8000F4D5A6D
4C5A0007EF3FC06C6C4C5A6C4C48C7FC6C6DEC07FC6EEC1FF86D6CECFFE0D91FF8010713
80D90FFED97FFEC8FC6DB612F8010115C06D6C49C9FC020713C0424E78CB50>I<F27FC0
963803FFF84F13FE071F7FDF3FE0138096397F801FC09639FF0007E04E48133F0603ECFF
F04E485A060F5B62F01FF8063F5BA3DE7FF014E0A206FF15C0A27413809639E003FE004D
EC01F897C8FCA25F61A45F61A45F96C9FCA45F60A4173FA260033FB87E4B83A263A298C7
FC92C7D87FF8C9FCA217FF60A45E60A55E60A45E60A45E95CAFCA55E5FA4163F5FA4167F
5FA416FFA25FA45D5FA45D5FA44B5BA54B90CBFCA45E151FA25EA3153F5EA35ED803F813
7FEA0FFC486C5C487E484A5AA2B55CA24A90CCFCA201FE5B140301FC5B49485A01F05B39
7FC00FE0387E001F6C6C485A261FE0FFCDFC6CB45A6C5B000113F038007FC0549D76F954
>I<EF03FF053F13E094B512F804036E13F8040F903901FE01FE933A3FF8007F034C4890
381F87FF922601FFC0EB0FCF4B4913074B48C76CB5FC4B5A4B486E13FE153F4B48804B5A
4A4916FC4A177F4A5BA24A90C913F84A5A023F17FFA24A4817F0A24A485DA24919E05D49
5FA2494917C0A2615B4B1780A2615B4B1700A261A24990C95BA2193FA24A5FA2197FA262
A219FFA26D485FA26E5D60010F60606001075E6E4B5B6D5E95B5FC6D6D5B6DDB07F75B6E
6CEB0FE76E6CEB3FCF6E6CEBFF0F91270FFE07FE91C7FC6EB512F802014A5A6E6C138092
260FFC005B92C8FC183FA261A2187FA261A218FFA261A25FD801F85FD807FE5D486C5F48
5E486D5E485E96C8FC4D5AB54B5A91C8485A4D5A494A5B4902075B6C484A90C9FC49EC3F
FED83FC0ECFFF8D81FFE01075B6CB7128000034BCAFCC615F0010349CBFC506F7ECB52>
I<EE1F80EE7FC0EEFFE04B13F05D5DA25DA317E0A26F13C017806F1300ED00FC93C7FCB3
A5EC1FE0ECFFFC01037F497FD90FF07F90391F807FC049486C7E017E805B5B484880485A
A2485A157F485AA248C7FC4B5A5A123E5C007E5D007C5B5EA200FC5B00785DC7FC5C93C7
FC5C5DA2143F5DA2147F5D14FF5DA25B5D5B5DA25B5DA24915F892C7FC5B4A130117F013
3F5CEE03E0137F4A130717C0A24AEB0F80A2EE1F00A24A133E167E167C013F5C4B5A9038
1FF003ED0FE090390FF83FC06DB5C7FC6D5B010013F8EC3FE02D757BF23B>105
D<ED07F891383FFFFC010FB5FC4914F8A416F0EB00071401A216E0A25CA216C0A25CA216
80A25CA21600A25CA25DA2143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA2
5DA25BA292C7FCA25BA25CA2133FA25CA2137FA25CA213FFA25CA25AA25CA25AA25CA25A
A25CA25AA291C8FCA25AA25BA2123FED0F805BA2127F151F491400A25D00FF143E5BA215
7E157CA24913FC5DA2007F495AA24A5A383FF007001F5CEBF80F390FFC3F806CB5C7FC00
015B6C13F8EB1FE0267A79F733>108 D<D901FE923801FFE0902607FFC0021F13FC011F
01F091B6FC496D010315C090267F0FFC4901017F9026FC03FE903A1FF0007FF0D801F86D
D93FC06D7E496C4AC76C7E0003DB80FC140F01E0DA81F8810007EDC3F001C0ECC7C0000F
DBCF806E7E018014DF04FFC8FC001F5D01005C4A5B5A003E5D4C5D5C007E5D127C5E00FC
495F4862007892C9FCC7FC4A173F635DA2023F177F635D1AFF027F60A25D6102FF60A24B
5D63495F635D614996C8FC1DF84B5D62491A01073F15F04B5E197F494EEB03E0A292C900
FF14075014C05BF40F805C50EB1F00013F621C3E4A197E077F5C017F62515A4A043FEB07
E0736C485A96390FF83F804A70B5C7FC4A705B6D487013F86D489338003FE05D4E7BCB67
>110 D<DB7F80EC03FE912601FFF091383FFFC0020701FC91B512F04A6D010314FC9126
1FC3FF903907FE07FE4AC6903A801FF001FF023E9127C03FC0007F4A017F49C76C7E02FC
DAE0FC6E7E4ADAE1F8810101DBF3F06E7E4AECF7E00103DBFFC0814A4B140F95C87F0107
5D5C4C4882010F5D4A5CA25D011F1B8002005CA2495B133E011E5D90C7FC4B5FA25FA24B
4D1300A294C9FCA24B5F645EA2033F17FF645EA2037F4C5BA25E6403FF5E645E505B5C50
5B5E5090C7FC4A601A3F63505A4A60505A705C634A4C5B704A90C8FC4F5A704A5A4A017E
EC3FF0043E4A5A923BFE3F8001FFC093261FC00790C9FC023F90390FF81FFE70B512F8DB
FC0114E07091CAFC027FEC1FF894CCFC5DA214FFA25DA25BA25DA25BA25DA25BA25DA25B
A292CEFC5BA2017F13C0007FB612F0B77EA45E596D85CB57>112
D<D903FCED3FF090260FFF80903801FFFE4901E001077F496D011F148090267E1FF89039
7FE03FC09026FC07FC9039FF0007E0D801F89026FE01FCEB1FF02603F0034948137F01E0
9026FF07E0EBFFF800074B485A01C091389F80039338BF0007000F15FE01804A5B121F01
004A15F05E4A17E0484B6D13C0003E4B1580721300007E4949EB00FC007C95C7FC93CAFC
A200FC5B5A00785CC7FC143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA25D
A25BA292CBFCA25BA25CA2133FA25CA2137FA25CA213FFA25CA35C5C6D5A6DCCFC454E7B
CB4E>114 D<93380FFF8093B512F0030714FE031F8092267FF80113C0923AFFC0003FE0
4A90C7EA07F0DA07FCEC03F84A4814014BEC00FC4A48157C4A48157E027FED03FE4B140F
02FF151F92C8123F5BA249EE7FFCA319F849EE3FF06FEC1FE0F007806F91C7FC8115F8ED
FF806D14F8EEFFC017F86D15FF846D16E06E816E816E816E8180020181DA003F15801503
ED001F040114C0EE003F838383012081D803FC81EA0FFE487E486D80A2481880A25FB5C8
1400A260491503495E49150701E05E6CC9485A007E4C5A173F6C4C5A6C6C4B5AD80FE0DA
03FEC7FC6C6CEC0FFCD803FEEC3FF83B01FFE003FFE06C90B61280013F4AC8FC010714F0
9026007FFEC9FC3F4E77CB51>I<167CED01FE4B7E4B7FA35D94C7FCA35D5EA3153F5EA3
157F5EA315FF5EA35C5EA35C5EA3003FB812F04817F8A2B9FCA26C17F0C7000F90C8FCA2
5C5DA3143F5DA3147F5DA314FF5DA35B5DA35B5DA35B5DA35B92C9FCA35B5CA3133F5CA3
017FED07C05CA2170F01FF16804A141F18005F48163E4A147E177C17FC5F4C5A4A13034C
5A5F6C4B5A161F6D6C49C7FC167E013F495A90391FF007F890390FF81FE06DB55A6D91C8
FC010013FCEC3FF0356E7DEB3E>I<DA1FF0167EDAFFFC4BB4FC4901FF4B138001076E4A
13C090390FF07FC090271FC03FE04A13E0EB3F00017E6D6C5C49804983485A120349013F
8148488385484883037F167F121F90C7173F4814FF003E5DF21FC0007E5B007C5DA25C00
FC4B168000785BC75CA24A180093C9FCA24A5F4B163EA2143F4B167E1A7C147F5D1AFC02
FF5F5D1901625B4B4B5AA2190749605D4F5AA24FC7FCA2193EA261A2611801616D4C5A18
07616D6D4A5A4EC8FC6E6C143E187E6E6C5C6E6CEB03F06EB4EB0FE06E9038C07FC00201
90B55A6E6C49C9FC031F13F8030113C04B4E7BCB53>118 D<DB0FFCEDFFC092267FFF80
010313F84AB500E0010F13FE02076E49EBFF8091270FF81FFCD97F8013C091273FC007FE
9039FE001FE0913B7F0001FF01F802FE4B48EB7FF0D901F86DD983E013FF49489226C7C0
0113F84948DA7FCF5B4A9238FF800749481600011F6049C85B013E1AF0017E5E017C1AE0
01FC7213C0494C158000017313004903FFEC00FC00034D91C7FC5BA25E00075F6C5AC9FC
5E60A35E60A35E95CAFCA35E5FA3163F5FA3167F1B3E5FA204FF167E1B7C5FD803F819FC
D80FFC495F486C1801486C61484C14034B5FB518074B5F505A4B161F49DABFF04AC7FCDB
1F3F157E49D93F1F5D49017E6D495A49D9FC0F4A5A297FC001F807FCEB0FE06C4848486C
6CEB3FC03E1FF01FE001FF81FF806CB5486CD9FFFEC8FC6C4A013F5B000149C7000F13E0
26001FF0020190C9FC554E7BCB62>120 D<EC1FF0ECFFFC4901FFEE01F801076EED03FC
90270FF07FC0ED07FE90271FC03FE0150FD93F00171F017E6D7E498049183F484819FC12
0349133F4848187F1BF8485A157F001F19FF90C718F04814FF003E5D61007E4918E0007C
5DA24A5E00FC4B16C000785BC75C614A188093C8FCA24A5E4B1700A2143F4B5D62147F5D
193F02FF5F5DA2197F49605DA219FF49605DA26062A34B5C62A360626F5C6D5EA24E90C7
FC6D5E6F91B5FC027F5C6F495B6E6C130F6E6CEB3F9F913A0FFF01FF3F0203D9FFFE5B6E
14F86E6C13E00307EB007F92C85BA34E5AA25F01045FEB7F80496C4A5B487F486D4A5B48
95C8FC485E604D5A173F48495D4D5A4A4A5A4A495B6C90C75C494A90C9FC01E04A5A49EC
1FFC6C6C4A5A6C6CEC7FE06D49485AD801FE010790CAFC3A00FFC03FFE6DB512F8011F14
C0010791CBFC010013F04F6F7BCB54>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy10 20.74 21
/Fh 21 119 df<007FBFFCA2C01280A36C1E00A2690772AE86>0
D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03F0121271
B430>I<003CF203C0007E1A0FB4F21FE06D193F6D197F6C6CF1FFC06C6C4E13806C6C4E
13006C6C4E5A6C6C4E5A6C6C4E5A6C6D4D5A6C6D4D5A6D6C4D5A6D6C4C5B6D6C4C90C7FC
6D6C4C5A6D6C4C5A6D6C4C5A6D6D4B5A6D6D4B5A6E6C4B5A6E6C4A5B6E6C4A90C8FC6E6C
4A5A6E6C4A5A6E6C4A5A6E6D495A6E6D495A6F6C495A6F6C485B6F6C4890C9FC6F6C485A
6F6C485A6F6C485A6FEBBFF06FEBFFE0705B705B7090CAFC705A4C7E4C7F4C7F93B57E4B
EBBFF04BEB1FF84B486C7E4B486C7E4B486C7E4B486C7F4B486C7F4B486D7E4A496D7E4A
90C76C7E4A486E7E4A486E7E4A486E7E4A486E7F4A486E7F4A486F7E49496F7E4990C96C
7E4948707E4948707E4948707E4948707F4948707F4948717E4849717E4890CB6C7E4848
727E4848727E4848727E48487213C04848844848F17FE049193F90CD121F007EF20FC000
3C1A03535167D386>I<ED0FFE92B512E0020714FC023FECFF8091B712E04982010716FC
498249824983498390B97E4884A248844884A248844884A2481980A34819C0A4BB12E0AD
6C19C0A46C1980A36C1900A26C606C60A26C606C60A26C606D5F6D5F6D94C7FC6D5E6D5E
010116F06D5E023F1580020702FCC8FC020014E0DB0FFEC9FC434377CC56>15
D<0507BAFC94BBFC04071A80163F4BBCFC03071B00151F037F01FCCDFC92B51280020301
FCCEFC4A13E0021F13804A48CFFCEC7FF84A5A4913C0495B4948D0FC495A495A5C495A49
5A495A91D1FC5A485A5B485AA2485AA2485AA25B123FA25B127FA290D2FCA35AA25AAB7E
A27EA37FA2123F7FA2121F7FA26C7EA26C7EA26C7E7F6C7E7E806D7E6D7E6D7E806D7E6D
7E6D6C7E6D7F6D13F06E7EEC3FFE6E6C7E020713E06E13FC0200EBFF806F13FC031F90BB
FC150703011B80ED003F160704001A00170794CEFCB3A90007BFFC5A481E80A36C1E007E
698772EC86>18 D<1E0F1E7F9A3801FF801D071D1F0B7F130052B5FC0A0713F80A1F13E0
0A7F1380514848C7FC090713F8093F13E098B51280080349C8FC080F13F8083F13E097B5
1280070301FCC9FC070F13F0073F13C096B5CAFC060313FC060F13F0067F13C04DB5CBFC
050713FC051F13F0057F13C04CB5CCFC040713F8041F13E0047F13804B4848CDFC030713
F8031F13E092B51280020349CEFC020F13F8023F13E091B51280010349CFFC010F13F001
3F13C090B5D0FC000313FC000F13F0003F13C04890D1FCEAFFFC13F013FC6CB4FC14C000
0F13F0000313FCC613FF013F13C0010F13F0010313FE01006D7E023F13E0020F13F80203
13FE02006D7E031F13E0030713F8030113FE6F6C6C7E041F13E0040713F8040113FF706C
13C0051F13F0050713FC050113FF716C13C0060F13F0060313FC060013FF073F13C0070F
13F0070313FC0700EBFF80083F13E0080F13F8080313FE08006D7E093F13E0090713F809
0113FE756C6C7E0A1F13E00A0713F80A0113FE766C7E0B1F13801D071D019A38007F001E
1F9BC7FCB3A9003FBE12FE4889C01280A36C1E00A2698772EC86>20
D<F70780F71FE0A21F0FA38CA21F078CA21F038CA2797EA3797E8D207F8D203F8D7A7E20
0F8D7A7E7A7EA27A7E7A7F7B7E7B7E8EF91FFC7B7E7B7E0F017F7B13E0FA7FF8FA3FFE9F
380FFF80003FC412E0C512FCA112FEA3A112FC003F23E0D5000F13809F383FFE00FA7FF8
FAFFE05713800F0790C7FC575A575AF93FF06A575A575A5690C8FC565AA2565A565A6920
1F565A69207F6920FF9EC9FC555AA3555AA2681F07A2681F0FA268A31F1FA2F70780975B
76D8AC>33 D<EE03804C7EA54C7EA44C7EA34C7EA24C7EA24C7EA24B7FA24B804B80A24B
804B8092393FEFEFF892397FCFE7FCA29239FF8FE3FE4A90380FE1FFDA07FE01E013C0DA
0FFC6E7EDA1FF86E7EDA3FF06E7EDAFFE0EC0FFE4901C06E7E010701806E13C090261FFE
00020013F0D9FFFCEE7FFE00034993383FFF80003F01E0040F13F8B5487013FE91C71501
01FCEF007F01F0181F0180180348C8160000601A0CC91700B3B3B3B3B3ADEE03804F997D
F756>I<EE0380EE0FE0B3B3B3B3B3AD00601A0C00FE1AFE6C6C180301F0181F01FC187F
01FFEF01FF02C01607003F6D4C13F8000301F8043F1380C66D93387FFE00D91FFEEEFFF0
902607FF80020313C0010101C04A90C7FC6D01E04A5ADA3FF0EC1FF8DA1FF84A5ADA0FFC
4A5ADA07FE4A5ADA01FF01E190C8FC6E90388FE3FE92397FCFE7FCA292393FEFEFF86FB5
5A6F5C6F5CA26F5C6F91C9FCA26F5BA2705AA2705AA2705AA3705AA4705AA5705A4F997D
F756>I<1D7E1DFFA2777EA2777E8A1D1F777EA2777E8A1D03777E8A777F1E7F8B787E78
7E787E787E8B787E787F787F797E007FC07E8CC17E8C7A7E6C8C6C8CD3EA3FF8F81FFEF8
07FF7A13C00E0013F0F97FFCF91FFF7B13E00F0313F80F0013FF103F13F0100F13FC1003
13FEA2100F13FC103F13F09FB5128057EBFC000F0713E00F1F13805748C7FCF9FFF85613
E00E0713805648C8FC565AF83FF0003FC15A482080C2C9FC68686C1FF068D26C5A555A54
90CAFC545A545A545A671E1F545A545A6754CBFC6566535A1D0766535AA2535A1D3F6653
5AA253CCFCA21D7E975F76DAAC>41 D<0507B712F894B8FC040717FC163F4BB9FC030718
F8151F037F01FCCAFC92B51280020301FCCBFC4A13E0021F13804A48CCFCEC7FF84A5A49
13C0495B4948CDFC495A495A5C495A495A495A91CEFC5A485A5B485AA2485AA2485AA25B
123FA25B127FA290CFFCA35AA25AA2BD12F8A21CFCA31CF8A248CFFCA27EA27EA37FA212
3F7FA2121F7FA26C7EA26C7EA26C7E7F6C7E7E806D7E6D7E6D7E806D7E6D7E6D6C7E6D7F
6D13F06E7EEC3FFE6E6C7E020713E06E13FC0200EBFF806F13FC031F90B812F815070301
18FCED003F1607040017F81707566572DD73>50 D[<F00780180F4E7EA2183FA261A218
7FED07FF033F01E090C7FC4AB5EAFCFF020791B5FC91261FFC015B91393FF0007FDA7FC0
131F4AC71207D903FE14035C494881494882494882013F4B7F5C4948825F49C8EBF7F818
E7488449ED1FE300038418C30007043F7F4916C11881000F1980177FA2491600001F4C14
C0A25FA2003F030115E0A25F1603A248484BEB7FF0A21607A25F160FA25FA200FF031F15
F8A25F163FA25FA2167FA294C7FC5EA25EA21501A25E1503A25EA21507A25E150FA25EA2
151FA25E153FA2007F4B15F0A2157FA293C8FC5D6D17FF5D003F19E01401A25D1403A200
1F4A16C0A2D9FC075DA2000F4A1680140FA200074A160001FE5E141F0003605D2601FF3F
4B5AA25D6C01BF4B5A14FF6D4C5A6D90C85B183F6D4C5A6D485E18FF01074B90C7FC0103
4B5A6D6C4A5A4901C0EB1FF003F0EB7FE09239FE03FFC092B6C8FCD907F914FCDAF83F13
E0DAF00790C9FC010F90CBFCA25CA2131FA25CA26D5AA2>69 147
120 260 86 59 D<F001E018034E7EB3B3B3B3B3AE003FC0FC5AC11280A36C1F007E7171
76F086>63 D<933801FFFE047FEBFFF80303B7FC031F16E092B812FC020317FF020F18C0
023FDA000314F091B500C0D9000F13FC4949C800017F010701F09239003FFF804901C004
0F7F4990CA00037FD93FFC05007FD97FF0F03FF84948727E480180F007FE91CC12034848
737E484873138048481A7F49F23FC0001F1CE0491A1F4848F20FF0A2491A07007F1CF8A2
90CE1203A2481CFCA2481B01B3B3B3B3007CF300F8003C1C785E6C76E773>92
D<EF07804D7E4D7EA34D7EA24D7EA24D7EA34C7FA2933803FCFFA24C486C7EA2EFF03F04
0F80A24C486C7EA24C486C7EA2EF8007047F80A24C486C7EA24B486D7EA24C1300030381
A24B486E7EA24B486E7EA24C141F031F82A24B486E7EA24B486E7EA293C812034B82A24A
486F7EA24A486F7EA24B82020784A24A48707EA24A48707EA24B160F023F84A24A48707E
A24ACA6C7EA24A1701010185A24948717EA24948727EA24948727EA24A181F011F86A249
48727EA24948727EA291CC12034986A24848737EA24848737EA2498600071C80A24848F2
3FC0A24848F21FE0A2491A0F003F1CF0A24848F207F8A248CEEA03FCA2481B01A2007CF3
00F81D785E6C76E773>94 D[<F01FF8EF07FF173F4CB5FC0407EBFE00041F13E04C90C7
FCEE7FFC4C5A4B13E04B5B4B5B4B90C8FC5D5E153F5EA2157F5EB3B3AD15FF5EA25C5E5C
5E4A5B5C4A90C9FC4A5A4A5A903801FFF001075B013F13802603FFFECAFCB512F814C0A2
14F8000313FE39003FFF80010713E001017F9038007FFC6E7E6E7E6E7F806E7F82808280
A282157FB3B3AD82153FA282151F82816F7F6F7F6F7F6F13F8707E70B4FC7013E0040713
FE0401EBFFF8EE003F1707EF001F>61 172 116 256 86 102 D[<EA7FE0B5FC14F014FC
0001EBFF80D8001F7F010713F001017F6D6C7E6E7EEC0FFF6E7F826E7F808280A282157F
B3B3AD82153FA282151F82816F7F836F7F6F7F6F7FEE3FFE706C7E040713E0040113FE93
39007FFFF8170FA2177F933901FFFE00040713E0041F13804C48C7FCEEFFF84B5B4B5B4B
5B5F4B90C8FC5D5E153F5EA2157F5EB3B3AD15FF5EA25C5E5C4A5B5E4A90C9FCEC3FFE4A
5A49485A01075B011F13C048B55AB500FCCAFC14F091CBFCEA7FE0>61
172 116 256 86 I[<127CA212FEB3B3B3B3B3B3B3B3B3A6127CA2>7
172 108 256 48 106 D[<0078150F007C5D00FEED3F80B3B3B3B3B3B3B3B3B3A5007CED
1F00007881>41 171 106 256 86 I<007FBD12F8A2BE12FCA548CE1201B3B3B3B3B3A5
007CF300F8003C1C785E6876E773>117 D<000FBF12E0481EF0481EF8A31FF01FE00180
D1FCB3B3B3B3AF90BF12E01FF01FF8A36C1EF01FE0D3FCB3A9003FBF12E0481EF0C0FC1F
F8A26C1EF01FE06D8772EC86>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti10 20.74 29
/Fi 29 123 df<98383FFFE00807B6FC083F15E04FB712F807079039F8007FFC4F90C7EA
07FEDF3FFCEC00FFDF7FF0ED3F80DFFFC0ED1FC04E49153F4E90C9EAFFE04E485D654E48
5D181F4F5D183F4F17C0187F7713804F170006FF705AF501F84D94C8FC61A35F61A35F96
CCFCA45F60A5171F60A4173F031FBB12C05DA46F6292C7D87FF0C8120364A205FF95C7FC
6064A2655E4E151FA265A24C173FA24E5EA21C7FA24C6095C9FC1CFFA2655E4D5DA265A2
041F5E5F65A263163F4D94C8FCA263A2047F5F5F1B1FF61F8064A204FF163F4D183F5214
00A2664B057F147E4D5EA21EFE665D4DEEE00166A24B053F495A94C9FC535A98381FF00F
664B050F495A4C933807FC7F75B5C7FC755B9838007FF84B48EF1FE099C9FCA34B5AA35E
157FA25EA215FFD803F05CEA0FF8487E486C5C5C007F92CFFCA24A5AEAFFFC5D49485AEA
7FF049485A01805B6C48485A6D485A261FF07FD0FC380FFFFE6C5B000113F038003FC06B
9D85F961>12 D[<1EF0F501F81D03A21D07A2F50FF0A2F51FE01D3F1EC0F57F80A2F5FF
00A2525A1C0365525AA2525AA2525A1C3F65525AA252C7FCA2515A1B0364515AA2515AA2
515A1B3F64515AA251C8FCA2505A1A0363505AA2505AA2505A1A3F63505AA250C9FCA24F
5A1903624F5AA24F5AA24F5A193F624F5AA24FCAFCA24E5A1803614E5AA24E5AA24E5A18
3F614E5AA24ECBFCA24D5A1703604D5AA24D5AA24D5A173F604D5AA24DCCFCA24C5A1603
5F4C5AA24C5AA24C5A163F5F4C5AA24CCDFCA24B5A15035E4B5AA24B5AA24B5A153F5E4B
5AA24BCEFCA24A5A14035D4A5AA24A5AA24A5A143F5D4A5AA24ACFFCA2495A13035C495A
A2495AA2495A133F5C495AA249D0FCA2485A12035B485AA2485AA2485A123F5B485AA248
D1FCA25A127C123C>101 172 125 256 88 47 D<F2FFF8071FEBFF804EB612F0060715
FE063F9039003FFF80DEFFF801037F050301C0010013F0050F90C86C7EDD3FFCED1FFCDD
7FF06F7E4C48486F7E4C01806F7F040F90C96C7F4C48707F4C4884DC7FF0717E4B485A4B
49717E4B49844B90CB121F4B864B48844B481A804B5A4A5B4A7413C05E4A5B4A1CE04A5B
4A90CCFC7713F04A5A14FF5D495B5B4B1BF85B5B5D5B5D49635D5BA290B5CDFCA25A4A62
A25A4A1CF05AA24A625AA348495013E0A448495013C0A39AB5FC1F80485BA2521400A266
4A61A2B56464666466A2525BA2525B91CDFC525B7E99B5C7FC656E6065515BA26C505B51
5BA2515B6C505B6E97C8FC515A6C505A626C6D4D5B646C4F5B6E4D5B6C4F5B6E4D48C9FC
6C4F5A6D6C4D5A6E4C5B013F05075B6D6C4C13806D6D4B90CAFC6D6DED7FFC6D6D4B5A6D
01F8020313E06D6D020F5BDA3FFF027F90CBFC6E9039F007FFFC020790B612E002011680
6E6C02FCCCFC030F14E09226007FFCCDFC6D7E67F984>79 D<0303BA12F04B19FF4B1AE0
1EF81EFE6F747E92C702F0C7000380051F01C0DA003F7F0B0F7F4F03037F777F4D717F78
7E96CA7E20804D8420C060A205FF1AE0A260A25EA260A25E6660A25E5413C060A24C1B80
9BB5FC6020004C606760535B4C626595CA5C535B4C62535B4D4D90C7FC535A04FF4E5A52
5B4D4C5B0A0F13C04B063F5BE2FFFEC8FC4D03075B097F13F04B90B912C052C9FC1CF81C
804B05F0CAFC05F0CEFC5FA25DA25FA25DA25FA25DA294CFFCA25DA25EA215FFA25EA25C
A25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA25C91B5FC010714E0003FB712FC4882
B8FCA36C5E737677F575>I<003FB700E04BB7FC48501680A2B8FCA26C4C6F1600D8001F
02C0CA001F14C0010749CB000349C7FC03F87213F86D1CE04B725B665290C8FC65656F18
0365525A6D631C0F65525AA252C9FC641C7E6F18FE64515A6D1903641B0764515A1B1F64
1B3F6F95CAFC1B7EA263027F170163505AA2505A1A0F631A1F6F5F50CBFC626E177E1AFE
624F5A190362190762704A5AA24F5A6E163F97CCFC61197E611801611803705C4E5A180F
6E5E181F614ECDFC60187E18FE6070485AA24D5A6E140760170F604D5A173F95CEFC5FEE
F07E5F16F16E5C16F35FEEF7E0A2EEFFC0A25F94CFFCA25E805EA25E5EA25EA25E5EA26E
90D0FCA25D5D717A5DF580>86 D<EE3FF0923801FFFC030713FF031FEC803E923A7FF03F
C0FF912801FFC00FE17F4A90380007F34A481303DA1FFCEB01FBDA3FF06DB5FC027F94C7
FC4A5A494980495B725A4990C8FC495A131F49485EA24948151F01FF163F4A5E5AA24849
157F615A5C4817FF61485BA25F486091C8FCA25F48605BA25F00FF95C8FC5BA25F605BA2
171F4EEB1F80A25B173F4E133F1B00A2057F5C05FF147E60007F5D4C15FE62003F5D4CEB
E0014C5D6C6C4A1403053F5C000F15FE6C6CD901FC4A5A6D903A03F81FF00F0003DA0FF0
5D6C6C90261FE00F495A6C903BC0FF8007FC7F013FB5486CB5C7FC6D01FC6D5B010701F0
9038007FF801000180EC1FE0494E6ECB58>97 D<157F0103B57E90B6FC4892C9FCA25AA2
6C5CC7FC143F141F5DA2143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA292
CAFCA25BA25CA2131FA25CEE7FE0013F903803FFFC030F7F4A486D7EDB7FE07F017F9039
FF003FE0DAF9FC6D7E4A486D7EDAF7E06D7E90B548805D92C76C7E5C484916805C834A16
C0485BA25C5C4818E05F91C8FCA25AA25BA2001F5EA25BA2003F4C13C0A25BA2007F5E19
805BA25F00FF18005BA24D5AA25B6017FF60A24C5BA2494A5BA2604C5BA24C90C7FC5F6C
6C141F5F4C5A003F4B5A5F6D4A5A001F4A5B4B90C8FC6C6C495A6C6C495A0003EC3FF8D8
01FEEB7FE03A00FF83FFC06DB5C9FC6D13FC010F13F0010190CAFC3B7A6DF74F>I<9338
03FF80043F13F04BB512FC030780031FEB01FF923A7FF8007F80DBFFE0EB1FC002030180
EB0FE04A90C7EA07F0DA0FFC14034A5ADA7FF0EC0FF84A48143F4949147F4916FF4B5B49
90C7FC5B49484A13F0495AA2494816E001FF6F13C04A6E138048EF7F004894C7FC5C5A5C
5AA25C5AA25A91CBFCA35A5BA312FF5BA45BA75B19C0F001E0007F18F0180318076DEE0F
E0003FEF1FC0183FF07F80001FEFFF006D4B5A000FEE07FC6C6C4B5AEF3FE06C6C4B5A6C
6D49485A6C6DD907FEC7FC6D6CEB3FFC903A3FFC03FFF0010FB612C001034AC8FC010014
F0DA1FFEC9FC3D4E6ECB4F>I<F203F896381FFFFC0607B5FC4E14F860A37214F0F00007
1901851BE0A261A21BC0A261A21B80A261A21B00A261A262A2191FA262A2193FA262A219
7FA262A219FFA262EE3FF0923901FFFC01030713FF031F02815B92397FF03FC1913A01FF
C00FE34A90380007F34A4801035CDA1FFCEB01FBDA3FF06DB5FC147F4A4893C7FC494980
495B844990C85B495A131F495A614948151F01FF163F5C4860A24849157FA248605C4817
FFA248495EA25F5A91C85CA25F5A495FA25F12FF4994C8FCA25FA2495EA2171FF21F8060
5B173F1A3F4E1400A2057F5C05FF147E60007F5D4C15FE62003F5D4CEBE0014C5D6C6C4A
1403053F5C000F15FE6C6CD901FC4A5A6D903A03F81FF00F0003DA0FF05D6C6C90261FE0
0F495A6C903BC0FF8007FC7F013FB5486CB5C7FC6D01FC6D5B010701F09038007FF80100
0180EC1FE04E7A6EF758>I<EE0FFF93B512E0030714F8031F8092397FFE03FE913A01FF
E000FF4A0180EB3F80DA0FFEC7EA1FC04A4815E04A48140FECFFE04949EC07F0495B5B49
90C8FC495A495A180F494816E013FF4849151FA24849ED3FC0198048177F4AEDFF0048EE
03FE4A4A5A48EE1FF8EFFFF048030F13C04A48B55A91B600FCC7FC17F04893C8FC16C049
CBFCA212FF5BA45BA65BA6F00180F003C0007F18E01807180FF01FC0003FEF3F806D167F
001FEFFF004D5A000F4C5A6DED0FF800074C5A6DED7FC000034C5A6C6C020390C7FC6C6D
EB0FFCD97FE0EB7FF8903A3FF807FFE0010FB612806D02FCC8FC010114E09026001FFCC9
FC3C4E6DCB4F>I<1AFF070713E0071F7F4F13FC96387FC3FE4FC67E4E48133F4E48EBFF
8006075B4E485A061F5B624E485AA2187F19E01C0006FF5C745A745A4D496C5A97C8FCA3
4D5BA54D90C9FCA45FA260A4171F60A4173F60A3031FB712FC4B82A262A26292C701F0C9
FC60A45E60A45E60A55E95CAFCA45E5FA4161F5FA4163F5FA4167F5FA416FF5FA45DA25F
A35DA25FA35D94CBFCA45D5EA3151F5EA44B5AA44B5AA35EA215FF5EA2EA03F0260FF801
5BEA1FFCEA3FFE93CCFC007F5B5DA2D8FFFC5B140701F85B49485AEA7FE09038801FE001
005B6C6C485A261FE0FFCDFC6CB45A6C5B000113F038003FC0519D85F935>I<EF0FFCEF
7FFF0403B512C0040F9138E00F80933B1FFC0FF03FC0933B7FF003F87FE0933AFFC000FC
FF03035B4B48C7127E4B48804B5A033F6F13C04B5A4B5A4A49804A18805E5C4A90C87E1B
004A5A023F5E5D027F5F14FF4B151F5B625D49173FA249495EA2197F5B4B5EA219FF5B4B
5EA2605B92C85CA260A24A5FA260A297C7FCA24A5DA261011F161FA2183F4E5A18FF130F
6E5C01074B5B5F01035D6E5C6D4B5B6D6DEB7F7F913A7FC001FCFF91393FE007F891271F
F83FF05B6EB512C06E14810201EBFE019126003FF05C92C7FC5FA261A25FA296C8FCA25F
A260A2171F60A2D803E04B5AEA0FF8486C4B5A003F16FF007F5F4C5B00FF4B5B4C90C9FC
5F49EC1FFC4C5A494A5A6C4849485A4901071380D83FFE013F90CAFC6CB612FC000715E0
00011580D8000F01F0CBFC4B6F78CB4F>I<16FE0207B5FC49B6FC495C5BA36D5CEB0001
EC007F153F5EA2157FA25EA215FFA25EA25CA25EA25CA25EA25CA293CBFCA25CA25DA214
1FA25DA2143FA25DEF1FFC027F91B57E040714E0DBF01F8093393FF01FFC02FF9039FF80
07FE9239F1FE0003DBE3F880DBE7F06D7F49EBEFE0EDFF8093C87FA2495B5D5DA2495B5D
A24B5C495BA292C8FCA249485D625CA2013F5E97C7FC5CA2017F5E615C181F01FF5FA25C
183F4860A24A157F615A18FF4A5EA2485E4F13FC91C85A614819014D15F8491700A2001F
4CEC03F0605B051FEC07E0003F5FF20FC05B4E1480007F191F1B004960050F147E00FF19
7C1AFC490307495AF107F0943903FC1FE071B55A496F91C7FC6C48EE3FFE003ECAEA0FF0
4E7A73F758>I<163EEEFF804B13C05D5D17E05D17C0A21780A26F13006F5AED01F892C8
FCB3A6EC3FE0ECFFF801037F497F90380FF0FF90391F807F80D93F007F017E133F498048
5AA24848137F5B1207A2484813FFA2485AA2003F5B01005C5C485D127E5C93C7FC12FE00
7C5BC75BA2141F5D143F5DA2147F5DA214FF5DA25B5D5B5DA25B92C8FCA25B4AEB07E013
1F5C160F013F15C05CA2017FEC1F805CA2EE3F00495A167EA24A137C16FC4B5AA2017F49
5A5E1507013F495AED3F806D6CB4C7FC6DB45A6D13F801015B9038007F802B7473F135>
I<16FE0207B5FC49B6FC495CA25BA26D5CEB0001EC007F153F5EA2157FA25EA215FFA25E
A25CA25EA25CA25EA25CA293CBFCA25CA25DA2141FA25DA2143FA25DF13FC0027F923801
FFF0060713FC4B021F7FF03FE002FF92387F003FDD01FCEBFF804B903803F0034D485A49
92380F800FEF1F004B013E5B5F495D4D15004B485A4C485C494A485C040F6E5A4B48C7EA
03E0043E91C8FC495C5E4A5B4B5A011FEB07C04B5A4A48CBFC153E013F13FCECFFF85D15
C04913F8EDFF8016F016FCD9FFF013FF031F13C0DAE0077F03017F486E6C7E707E4A6D7E
160F4882825C8448811AFC91C7FCA2484B140106005B5BA2001F180362494A5AA2003F4E
5AA249604D130F007F15074F5A5B4FC7FC00FF0303143E71137E4902015C4E5A933900FF
87F071B45A496F5B6C48030F5B003EC9D803FCC8FC497A74F74F>107
D<ED07F091383FFFF8010FB5FC4914F0A416E0EB00071401A216C0A25CA21680A25CA216
00A25CA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA2
92C7FCA25BA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25AA25CA25AA25CA2
5AA291C8FCA25AA25BA2121FA25BA2123F153F5BA2007F5C157E5BA215FE00FF5C5BA214
015D13C04A5AA214075D007F130F5D003F131F01E05B001F49C7FC380FF0FE6CB45A6C5B
6C5B38003FC0257A71F72C>I<D903FCDB0FFEEEFFE090260FFF8091B500C0020F13FC49
6D010702F0027F13FF4901F0496E91B67E90267F0FF890273FF80FFC010301807FD9FC07
91277FC003FE903A07FC003FE00001902A03FC01FE0001FFD91FE06D7E01F86D48486F48
4880D803F0DA07F06D6D48C76C7E6F484816FED807E04A48EDC1FC4C4891267FE3F86E7E
000F4BC8EBE7F001C002FEEEEFE04C5F001F4BEEFF8013804A4994C8FC003F4B5E13004C
4B48150FA2007E49495E93C95BA200FE4A4B49151F48011F65127CC7495F4F173F023F65
4B5FA24F177F027F654B94C9FC1FFF4F6014FF4B5E66071F605B4B4C5D68193F49644B4C
94C8FCA2077F5E4953EB07E092C949151F6707FF190F490A3F15C04A4D5EA24E057FEC1F
80011F654A5F0CFFEC3F004E60013F1F7E4A5F55137C4E1AFC017F674A94C914010C7F49
5A4E6201FF1E074A4C043F495AF83F80786CB4C7FC4A4C70B45A4A4C7013F86DC96C4804
015B013E70489338007F80834E73CB8D>I<D903FCED0FFE90260FFF8091B512C0496D01
0714F04901F0498090267F0FF890393FF80FFC9026FC07FC90397FC003FE00010103903A
01FE0001FF01F86D484881D803F0DA07F06D7F6F485AD807E04A5A4C486E7E000F4BC8FC
01C014FE5E001F5D13804A5B003F5D13004C15FFA248495B007E92C9FCA200FE4A5D4801
1F60127CC75B61023F605DA261027F95C7FC5D616214FF5D191F625B4B153F62A249177F
4B5EA219FF494E137E92C85A621CFE494C15FC4A5FA24EEC01F8011F18005C4EEC03F061
013FF107E05C4F14C01B0F017F1A804A181F0607EC3F001B3E01FF197E4A03035CF203F8
953901FE0FF04A6FB55A4A7013806DCA001F90C7FC013EEF07F8574E73CB61>I<933803
FF80043F13F84BB512FE030780031F010113C0923A7FF8007FE0DBFFE0EB1FF002030180
6D7E4A90C76C7EDA0FFC814A486E7E4A5A4A486E13804A5A4918C04949804990C913E05B
495A494817F0A2495A13FF5C4819F85A5C5A4A5D5AA25C4819F0605A91C9FCA2604819E0
5BA26000FF19C05BA24E1380A25B4E1300A261187F61A2494C5A615F007F604D5B6D4B5B
A2003F4C90C7FC60001F4C5A4D5A6C6C4B5A4D5A6C6C4A5B00034B5B6D4A48C8FC6C6DEB
1FFC6C6D495A6D6CEBFFE090261FFC0713806DB548C9FC010314F8010014E0DA1FFECAFC
454E6ECB58>I<DB7F80EC1FF8912601FFF091B5FC4A6D0103804A01FE4914E091260FE1
FF90391FF83FF0DA1FC0903A803FC00FF891263F807F49C66C7E0300D9C0FE6D7E027EDA
C1F86D7EDDE3F015804AECE7E0DDEFC06D13C00101EDFF804A92C813E05F0103197F4A4A
16F04C5A13074A5C5F4B18F8010F19FF02C05CA2011F5B1480010F5D90C7FC4B5EA294C8
FCA24B4C13F0A25EA2031F5E1CE05EA2033F5E1CC05EA2037F4C1380A25E1C0003FF5E63
5E505A5C505A5E634A4C5BA24F5B634A6D5C98C7FC4F5A4F5A4A6D5D4F5A4F5A704A5A4A
486C495B4E90C8FCDBFC7EEB0FFE70EB1FF8023F90391FE0FFF070B512C04B6C91C9FC70
13FC027F9038007FC094CBFC5DA214FFA25DA25BA25DA25BA25DA25BA292CDFCA25BA25C
131FA290387FFF80007FB612E0B77EA45E556D7ECB58>I<DC3FF0EB01C0922601FFFCEB
03E0030701FF1307031F9138800FC0923A7FF03FC01F913B01FFC00FE03F4A90390007F0
7F4A480103EBFF80DA1FFCEB01F9DA3FF0EB00FB027F92B5FC4A481600494980495B8449
90C85B495A131F495A614948151F01FF163F5C4860A24849157FA248605C4817FFA24849
5EA25F5A91C85CA25F5A495FA25F12FF4994C7FCA25FA2495EA2171FA2605B173FA260A2
177F17FF60007F5D5EA2003F4B5B5E5E6C6C5C60000F92B5FC6C6C5B6DEB03FB0003DA0F
F35B6C6CEB1FE36C9038C0FF87013FB512076D01FC91C8FC010713F00100EB800F91C7FC
5FA2161FA25FA2163FA25FA2167FA25FA216FFA25FA25DA25F5D5D031F13F091B712FC84
5BA2607F436D6ECB4F>I<D903FCEDFFE090260FFF80010713FE496D011FEBFF804901F0
017F14C090267F0FF89039FF807FE0903DFE07FC01FE000FF02601FC03D907F8EB07F801
F89026FE0FE0EB1FFCD803F04A48133F6F4848137FD807E092C7FC047E14FF000F5D13C0
4C15F8001F5D018018F04A4915E0003F4BEC7FC00100EF1F004C91C7FCA2484990CAFC12
7E5D12FE48131F007C5CC7FCA2143F5DA3147F5DA314FF5DA35B5DA35B5DA35B92CBFCA3
5B5CA3131F5CA3133F5CA3137F5CA313FF5CA35C5C6DCCFC133E464E73CB49>I<EE1FFC
4BB57E030714E0031F8092397FF00FF89239FF8001FC4A48C77EDA03F8147F4A48EC3F80
4A48141F141F4B15C0143F4A48147FEF01FF4AC7FC5FA2494B13805CA26E6E1300495E71
5A6F90C8FCA28115F015FCEDFFC06D14FCEEFFC017F06D15FC836E806E816E816E816E81
1401DA003F801503ED003F04037F1600177F173F171FA201C0150FEA07F8486C1507121F
487E007F5FA2170F48485EA2495E171F495E01C0153F48C95B007E4CC7FC5F007F4B5A6C
6C4A5A001F4B5A01E04A5A6C6CEC3FE0D807FC903801FF802703FFC00F90C8FCC690B512
FC013F14F0010F1480010001F8C9FC3A4E74CB46>I<ED03F04B7E150F4B7EA2153FA25E
A2157FA25EA215FFA25EA25CA25EA25CA25EA25CA293C7FCA25CA25DA2141F003FB712FE
4816FFA2B9FCA26C16FEC7D83FF8C7FC147FA25DA214FFA25DA25BA25DA25BA25DA25BA2
92C8FCA25BA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25AEE01F85CA24815
0317F04A130717E0160F4816C091C7FCEE1F80A2EE3F00495C167E5E15015E00034A5A4B
5A00014A5A6D495A6C027FC7FC90387F83FE6DB45A6D13F06D13C0010190C8FC306E71EB
39>I<EC3FE0ECFFF801036D161F496D4C7E90260FE0FF4C7E90271F807F8015FFD93F00
6D5C017E133F498048485F634848137F5B0007604996C7FC120F15FF48485F62003F5B01
005C4A161F484B5D127E5C93C8123F00FE61007C5BC75B197F021F5F5DA2023F16FF4B5E
A2147F4B5C6214FF5D6049605DA2604995C8FC5DA260494DEB0FC092C8FCA2061F141F4F
1480A34A183F063F150061A2067F5C1B7E18FF4F13FE6D6C4A5D4D14014D5D6DED0FDF6F
D91F9F495A6D92393F0FF8076E6C017E5D91283FE001FC07495A913C1FF80FF803FC3F6E
B5486CB55A6EDAC00049C7FC020191C7EA3FFC9126003FF8EC0FF0524E73CB5C>I<DA3F
E0ED0FC0DAFFF8ED3FE001036DED7FF0496DEDFFF890260FE0FF5C90271F807F8015FCD9
3F007F017E013F5C4980485A844848137F49820007187F49173F000F181F15FF4848170F
A2003F5B01004A14074A17F8485D127E5C93C8FC00FE19F0007C5BC75BA2021F17E05DA2
023F160F4B16C0A2147F4B151F1A8014FF5D193F4918005D61197E5B5D61A2495F92C812
01A24E5AA2611807614A150F61181F96C7FC6E5D183E6D5E18FC606D6D495A4D5A6D6D13
07027F4A5A6FEB3F80DA3FF801FFC8FC91391FFE03FC0207B55A6E5CDA007F13C0DB0FFE
C9FC464E73CB4F>I<DA3FE0F101F8DAFFF8F107FC01036D047C4A7E496D04FE4A7E9026
0FE0FF4B6C5C90271F807F804A1780D93F006D4A5D017E133F498048485F50804848137F
49870007061F81494E80000F8815FF4848053F8162003F5B01004A844A047F1700484B5D
127E5C93C812FF00FE4F5D007C5BC75B60021F4D5D5DA2023F4B16014B6262147F4B4A16
036602FF94C8FC5D4E160749644B5DA2061F160F49644B5D1D1F6649163F92C85B53C7FC
A2651D7EA26561067F4B5AA218FF734A5A6D4B5F1C074D4C5A6D7F942607EFFC4A5A6D6D
4EC8FC94260FC7FE147E6E6CD91F8315FE6E6C90263F03FF495ADA1FFCD9FE019038C007
F891280FFF03FC009038F01FE06ED9FFF8013FB55A02014A6D5C6E6C01C0010349C9FC03
0790C8EA7FF0694E73CB72>I<EC3FE0ECFFF801036D161F496DEE3F8090260FE0FFEE7F
C090271F807F8015FFD93F006D5C017E133F498048485F1B804848137F5B000760491900
120F15FF48485F62003F5B01005C191F48495F007E5D5C93C8123F00FE61007C5BC75B19
7F021F5F5DA2023F16FF4B5EA2147F4B5C6214FF5D6049605DA2604995C7FC5DA260495F
92C8FCA2181F61A34A153F61A3187F6118FFA26D6C5C4D5B5F6D5D6F5B6D4B5B6E6C5B91
393FE001FD91391FF80FFB6EB500F35B6E14C3020114039139003FF80792C791C8FCA34D
5AA34D5A130801FF4B5A487F486D4A5A5A484C5A605E6048494990C9FC5F91C71207494A
5A494A5AD80FC04A5A5F6D4A5A00074A485A6D4990CAFC6C6CEB0FFC6C6CEB3FF83A00FF
80FFE06DB512806D49CBFC010F13F8010113804A6F73CB54>121
D<DB03F8EC01F0DB1FFEEC03F84B6C15F092B56C13074A6E14E04A6E130F4A6EEB1FC04A
6E14804A163F71EB7F004A6E137E91277FF81FFF13FEDBC003EBC3FC4A48C66CB45A4AC7
001F5B4948140705005B4AED1FC001034C5A4A93C7FC6090CA12FE4D5A4D5A4D5A4D5A4D
5A4D5A4DC8FC17FE4C5A4C5A4C5A4C5A4C5A4C5A4CC9FC16FE4B5A4B5A4B5A4B5A4B5A4B
5A4BCAFC15FE4A5A4A5A4A5A4A5A4A48153E4A48157E4AC9FC027E16FE02FE5E49481501
495A49484B5A495A49484B5A4948150F02FE4B5A90267FFFC0143F90B500F04A5A4802FC
EB01FFDA07FF01075B2603FC01D9E03F90C7FC48486C90B55A48487F495E48486D5C496D
5C003F6E5C48C71580007E6E91C8FC00FE6E13FC48020013F048ED7F80454E76CB46>I
E
%EndDVIPSBitmapFont
/Fj 29[159 1[150 110[131 60[146 6[147 95 162 2[136 40[{}8
172.188 /ZapfDingbats rf
%DVIPSBitmapFont: Fk cmbx12 24.888 50
/Fk 50 125 df[<96380FFFFE060FB612E04DB712FC051F16FF94B912C0040784041F18
F8047F9126FC001F7F4BB6008001017F030702F8C8EA3FFF4B02E0030F7F033F02804B7F
4B49C9127F92B54893B57E4A02F05D4A4A4B804A4A5D4A4A84634A91C9FC4A5BA24A5B51
80755C91B5FC5EA3755CA2755C755C755CE23FFEC8FCF40FF899CAFCAF083FB612FCBFFC
A9C702FCC912038787B3B3B3B2003FB800F0013FB812F0A9>116
144 123 271 129 12 D[<953801FFC0061F13F895B512FE050380050F15C0053F814D81
4CB5EAC07F4C9039FE001FF84C496D7E4C01F06D7E4C4913034C496D7E5E93B5486D7F95
C8FC5D4B717E5F5DA24B496F7EA25DA25DA45DA2515AA3515AA25090CFFCA2714A5A1A07
63505A1A1F63505A714A5A6F16FF4F5B98D0FC72485A4F5A4F5A6F4B5ADEC03F067FB712
FC4F5A4F5A06E15B6F02E390CBFCF0E7FEF0FFFC616F5D4FDE001FEC80004F070001F0C7
FC6F92CE6C5A4E515A575BA26F5390C8FC72505A81734F5A575A7080575A706E4F5A4C80
93B6505A4B6F4E5B5D4B6F4E90C9FC031F6F4E5AED3FF7DB7FE76E4E5ADBFFC36F4D5A4A
13814A01016F4D5A4A486C6F4D5A140FDA3FFC6D6E4D5A4A48704C5B02FF6E8049496D4F
90CAFC49724C5A496F6E160F4949715E496F6F4B5A017F6F4F5A90B5486D8148744B5A48
706F4B5A726E4A5B4865484A6E6E93CBFC726E4A5A48716F495A4875131F726F495A726F
495A487160726F495A736E485BB6735A736E4890CCFC73ED8FFE73EDDFFC6F6FEDFFF873
5E735E735E745D6F7092CBEA0FF86C738174816F04036F171F6C736F18F074816C6E716E
173F75806C6E4D6E6CEE7FE06F94B76C16FF6C070304F04B13C06C6E040F705D6C6F037F
04FE4B13806C6F4AB5001F6E031F13006D6E020FD9FE0703E0147F6D02F891B5D8F80103
F849485A6D02FF011F4A6C9226FF801F5B6D92B700C0013F92B65A010396C7000F606D06
FC020118C06D6C05F06E6C5F021F0580030F4CC7FC02074CC9000316F8020004E0DC003F
15E0030F92CB000392C8FCDB007F01C0DE000F13E0>158 147 118
272 181 38 D<BA12F0B33C137DB74D>45 D[<1CFC517E517E1D8063A263A3511300A251
5AA3515AA2515AA3505BA2505BA3505BA2505BA35090C7FCA2505AA3505AA2505AA34F5B
A24F5BA34F5BA26361A24F90C8FCA34F5AA24F5AA34F5AA24E5BA34E5BA24E5BA34E5BA2
4E90C9FCA34E5AA24E5AA34E5AA24D5BA34D5BA2615FA24D5BA34D90CAFCA24D5AA34D5A
A24D5AA34C5BA24C5BA34C5BA24C5BA34C90CBFCA24C5AA34C5AA24C5AA34B5BA25F5DA2
4B5BA34B5BA24B90CCFCA34B5AA24B5AA34B5AA24A5BA34A5BA24A5BA34A5BA24A90CDFC
A34A5AA24A5AA34A5AA25D5BA2495BA3495BA2495BA34990CEFCA2495AA3495AA2495AA3
485BA2485BA3485BA2485BA34890CFFCA2485AA3485AA2485AA35BA25B127F6C5A6C5A>
89 207 115 282 116 47 D[<EF01F8EF07FC170F171F177FEE01FF1607161F93B5FC15
03153F0203B6FC49B7FCB9FCA615C3ECFC03EBFE00C8FCB3B3B3B3B3AE003FBC12C0A9>
82 135 111 262 116 49 D[<93381FFFF00303B612E0033F15FC4AB812C0020717F002
1F17FC027F17FF49BA12C0010719F049DA800F814901F8C715FE4901C0021F804948C800
078149486F814801F00300814849708048018070804890CA6C806E70804813F002FC7080
486D70158080486E6F15C0817315E081B6836F19F0A3861DF8A56C5CA26C5CA26C5C6C91
CAFC6C5B000113F826007FE01AF090CCFC62A21DE0A297B6FC1DC0A24F1580A24F150064
A24F5C64614F5C644F5C644F91C7FC96B55A4E5C634E5C4E5C4E5C634E49C8FC4E5B4E5B
95B55A4D14C0624D91C9FC4D13FC4D5B4D5B4D13C04D5B94B5CAFC4C13FC4C5B4C5B4C49
ED0FF84C13804C90C9FC4C5A4C48EE1FF04B5B4B13E04B5B4B5B4B90CAFCDB3FFC173F4B
4818E04B5A4A5B4A49177F4A90CBFC4A4818FF5D4A485F4A48053F13C04ABBFC91BCFC5B
5B5B5B491B805B5B90BDFC5A5A5A5A481C005A5ABEFCA464A4>93
135 117 262 116 I<EB1FE0EB7FF83801FFFE0007EBFF804814C04814E0A24814F0A248
14F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EBFE0038007FF8EB1F
E090C8FCB3AEEB1FE0EB7FF83801FFFE0007EBFF804814C04814E0A24814F0A24814F8A2
B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EBFE0038007FF8EB1FE01E5C
6FDB41>58 D[<F31FF0517E517EA2517EA3507FA25080A25080A35080A25080A35080A2
5080A397B67EA24F81A34F82A24F82A34F82A24F821AFD1AF9DF3FF881A24F4881871AE0
07FF6D80A24E01C081871A804E6E81A24E0100828761060F6E81A24E48838761063F6E81
A24E4883886106FF6F80A24D498388614D7081A24D90C8828860050F7081A24D48858860
053F7081A24D4885896005FF7180A24C498589604C7281A24C90CA82895F040F728194BD
FC4C88A34C88A24C88A3DCFFE0CB003F80A24B49878A5F4B7481A24B90CC828A5E030F74
81A24B48898A5E033F7481A24B48898B5E03FF7580A24A497480A25E4A7681A24A90CE6C
81A25D91261FFF8074810103B512FEB900C0041FBA12FEA9>159
145 120 272 176 65 D[<BFFC1EFEF6FFE01FFCF7FF8020F020FC20FF8DC7000392CA00
1F15E00B0181776C800C1F807814FF0C03818A78818E79808B8E8B8E8B8EA27980A47915
80AB551500A4555CA26A676A676A555C9CB65AA2545D5492C7FC545C5414F80C3F5C545C
53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9FC1FF81F801FF8F7FF8020F820FE95
CBECFFC00C1F14F00C07807814FE0C006E7E7980798079807980798079808E79158023C0
8B23E08C23F0A223F88CA223FCA38C23FEAB5614FCA55614F8A39DB612F0A25515E06723
C055158067551500555C555C9CB6FC545D0C075D0C1F15C09BB75A0B0F93C7FCC212FC69
21E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>143 142 120
269 165 I[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE015070607B800FC150F
063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8000FECC0
03040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007FFF3F0307
03C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92CD7E4A4A
864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B494A88A2
495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485CFA0FF09FC7FCA2
5AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F1D1F23F07E827E22
3F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070646D6F646D6F515A
6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B6E03E04F90C7FC6F
6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F5B6F03FE057F1380
043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A040093B812E0053F1A
80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393CBFCDF000314C0>
141 146 115 271 168 I[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20FF21C0C700
030380C8000116F0E2000F810B0015FE0C1F800C0315C00C00810D3F8079800D0714FE79
807981796C808C7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B80A2A17E8D
A17EA28DA17EA3A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A113C0A5A113
80A269A2A11300A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC5692C7FC6B
565C68565C565C565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C0315C00C0F5D
0C7F92C9FC0B07B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1FE00CFCCCFC
53CDFC>156 142 120 269 178 I[<C212F8A48DA5C7000303C0C9123FF5007F1E0F0C01
80787E1F1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21FF0157FA67B
7EA40A3F93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538C00007F200
7F1B1F1B07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CAFCA369A26A
A22107A3210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5FC555C1F07
1F1F1F7F0C03B6FC1E3F0B1FB7FCC35AA66AA3>138 141 120 268
153 I[<C21280A421C0A5C7000303C0C81201F40007F5007F0C1F14E01E071E01787E8B
8B8B8B7913F0A28B8BA2207FA3203F21F8201FA4200FA321FC2007A4F47FC0A3F803FEA4
9DC7FCA31CFFA463A263A26363631B7F50B5FC1A1F95B8FCA99538C0001F1A01747E1B1F
878787A287A287A41C7FAA99CBFCB3AFBC12F8A9>127 141 120
268 146 I[<0803B500C0EE01F00703B600FE4C7E077FDBFFE015070607B800FC150F06
3F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8000FECC003
040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007FFF3F030703
C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92CD7E4A4A86
4A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B494A88A249
5C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485C7C5A9FC9FCA25AA4
5DA3B6FCB27EA381A20A0FBB12F8A27EA46C80A36C98C96C02F8C7FCA2817EA36C81A27E
827E827FA26D80A26D806D80A26D806D80A26D816D816E806E806E806E6E97B6FC6E806E
806E03C0606E816F02F8606F02FE60030F6E606F03E0173F030103F85F6F03FF933801FF
FC043F03E00307497E040F03FF033F497E040304FC0107B5EAE00F040093B8487E053FF2
0001050F07FCEB007F050107F0141FDD003F06C01407060795C81201DE007F04F8ED0070
0703048093C8FCDF000302E0CDFC>157 146 115 271 183 I[<BC0207BB12F8A9C70003
03C0CC001F4AC8FCB3B3B395BEFCA906C0CC121FB3B3B3A6BC0207BB12F8A9>165
142 120 269 182 I[<BC0403B9FCA9C7000303C0CC000103E0C7FCE6000F01F8C8FC7B
13E05713805790C9FC575A575A56485A565B565B5613805690CAFC565A565A55485A555B
5513C0555B5590CBFC555AF7FFFC545B545B5413C0545B5490CCFC545AF6FFFC535B5313
E0535B535B5390CDFCF57FFE535A525B5213E0525B525B5290CEFCF47FFE525A5113F051
5B515B515B093F7F6398B57E50805080625080083F80508097B7FC4F824F82614F82073F
824F82F1FFF906C101F18106C301E08106C7496C8006DF138095B5486C8107FC6D814F7F
4F834F6D814F6D814F7F96C78206FC6E814E6F80604E6F814E6F817681A276817681888C
76817780A2778177817781A277817781898D77817880A2788178817881A2788178818A8E
788179808B8F79817981A2798179818B8F79817A808C5615C00D03B712F0BC033FBA12E0
A9>163 142 120 269 182 75 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A467
2100A667A368A21F07A41F0FA3555AA21F3FA21F7FA21FFFA2666668666666666653B5FC
65650B1F5C1D7F0A03B6FC1C1F0903B7FCC1FCA468A5>121 142
120 269 140 I[<B900C00C7FB812E0729BB9FC72657265A37265A27265C70003A101F8
C8FC72F51FEFA2706EF43FCFA3706EF47F8FA2706EF4FF0FA2706EF301FEA3706EF303FC
A2706EF307F8A2706EF30FF0A2706EF31FE0A3716EF23FC0A2716EF27F80A2716EF2FF00
A2716E4F5AA3716E4F5AA2716E4F5AA2716E4F5AA3716E4F5AA2726E4E5AA2726E4E5AA2
726E4EC7FCA3726E4D5AA2726E4D5AA2726E4D5AA2726E4D5AA3726E4D5AA2736E4C5AA2
736E4C5AA3736E4CC8FCA2736E4B5AA2736E4B5AA2736E4B5AA3736E4B5AA2736E4B5AA2
746E4A5AA2746E4A5AA3746E4AC9FCA2746E495AA2746E495AA3746E495AA2746E495AA2
746E495AA2756E485AA3756E485AA2756E48CAFCA275ECF1FEA275ECFBFCA375ECFFF8A2
755DA2755DA3765CA2765CA27691CBFCA2765BA34A6D715B49B512FEB900FC6F490303BB
12E0A2765BA2765BA3775A0B1FC9FC>203 142 120 269 220 I[<97B512F0077FECFFE0
0607B712FE067FEEFFE00503B912FC051FF0FF80057F19E00403BB12FC040F9226E0007F
14FF043F02FCC7000315C04C02E0DA007F804BB60080031F14F8030702FCC9000314FE4B
4A70804B02E0706C80037F0280051F14E092B6CB6C804A4A72804A4A72804A02F0060080
4A4A737F4A4A73804A8B4A4A738091B6CD6C80494A7480A2494A7480494A7480498C4C86
498D4C87498D494A7580A290B68B4C87488EA24892CF6C80A3488E4B88A2488EA3484A76
1580A34823C0A5484A7615E0A7B621F0B36C23E0A26F64A56C23C0A46F646C2380A36C23
006F64A26C6AA270636C6AA26C6A70636C6A70636D69A26D6E98B65AA26D6E505DA26D6E
5092C7FC6D6870626D6E505C6D686D6F4F5C6E6E4F5C6E6E4F5CA26E6E96B65A6E6E4E92
C8FC6E6E4E5C020102FF060F14F86E6F4D5C6F6E4D5C6F02F094B65A030F6E4C92C9FC6F
02FE04075C03016E6C031F14F86F03F092B65A043F02FE020715C0040FDAFFF090B7CAFC
040392B812FC04001AF0051F198005074ECBFCDD007F17E0060F94CCFCDE007F15E00700
02F0CDFC>148 146 115 271 175 79 D[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020
F820FEC700030380C8000781E2003F15C00B03810B00810C3F8078800C07807880788178
818E8B8E8B8E8B8EA28EA28B8EA42380AC2300A46A67A26AA26A676A676A9CB65A6A6654
92C7FC545C0C1F5C545C9BB612E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9
FC1FF09CCAFC1EF00BF8CBFC06C0D0FCB3B3B2BCFCA9>137 142
120 269 159 I[<BD12FCF4FFFCF5FFE01EFCF6FFC01FF01FFE797E20E0C700030380C8
6C15F80A0181E2003F14FF0B07810B0115E0776C8078807880788078808A78818E7881A2
8E8B8EA37980A48EAA6AA3676AA26AA29CB65AA26A545D9FCAFC66545C545C545C545C9B
B612C0535D0B074ACBFC0B3F5C52B612F00A7F15C095BBCCFC1FF81FC054CDFC66F6FF80
1FE00680C7000315F8E1003F14FE0A0F800A0315C07681766C807780778077808C778189
8D898D898DA38A8DAD8DACA1EB1FC0A1EB3FE08D8AA37880A1137FA114C078817818FF7C
1580785F786F1500BB00FE6F6F5B796E495A7902FEEB1FFC799139FFC07FF80D0792B55A
0D015F796C5E0E1F5E0E034BC7FCD4001F14F8E7003F13C0>163
144 120 269 173 82 D[<93260FFFF8163E4BB600E0153F031F03FE5D037FDBFFC05C02
03B800F05B020F05FC5B4A05FF5B027FF0C00F91B526FE000FECF01F010302C0D9007F6D
5A4991C800076D5A4901FC030090B6FC4901F0163F4949160F4901808290B5170192CBFC
4849844849181F87484984A2484984874886A248498588A24887A388A2B58680A36E85A2
80A26E8580A2818103F0725A6C6E96C7FC15FE8116E06C15FEEEFFE017FF6C17F0F0FF80
6C18F8F1FFC06C19FCF2FF806C1AE01BF86C1AFE6C747E6D1AE0886D866D866D1AFF6D87
6D87010087806E86020F86020386020086153F030F851501DB001F19801601DC000F18C0
EF007F060717E0F0003F070316F0F1003F1A0F080315F81A00871B1F877514FCA287007F
86486C85A288A388A36D86A31EF87FA37F1EF0A26D626D1CE0A27F6D5013C0A26E1B806E
96B5FC6E1B0002F8606E4E5B6E626E6C5F03E04D5B03F84D5B03FE057F5BDBFFC093B55A
04F803035C496CD9FF80021F91C7FCD9FC1F02FF49B55AD9F80792B75A496C19F049C661
49011F18804901074DC8FC90C817F848031F16C048030003FCC9FC007C04011480>102
146 115 271 129 I[<000FC312F8A6488EA304C0C7001F4AC7120103F8C8F0000F03C0
1C0192C9737E02FC1E1F4A1E0702E08A4A8A4A8A4890CA757EA249203F49201FA349200F
A2492007A4492003007F8EA4498CA848487A1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9
>145 140 120 267 162 I[<BC040FB912C0A9C7000303C0CD001F02E0C7FC9E26007FF8
C8FC7C5AB3B3B3B3B36E555AA3848022FF6BA26F65726481696F9CC9FC72626F66210F6F
6E505AA26F6E505A6F535A6F6E1AFF734E5B706E4E5B70637002F04E5B706E063F90CAFC
706E4E5A7002FF4D485A04006F04075B7102E0043F5B7102FC4BB55A050FDAFF80020F14
807103FC0103B6CBFC050192B812FC716C61061F19E006031980060006FCCCFC071F17F0
07011780DF001F03F8CDFCE0001F49CEFC>162 144 120 269 179
I[<BB00E00507B812F8A9C7001F92CE000192C7FC72E0000713E06E79138084A26E5590
C8FC846E555A846E555A846E68223F846F545A846F545A846F6769856F535B856F5390C9
FC856F66210F856F535A856F535A8570525A85A270525A8570515B8670515B86709ACAFC
688670515A8670515A867064203F8671505A8671505A8671636787714F5B87714F90CBFC
87714F5A87A2714F5A87714F5A87724E5A8772611FFF87724D5B88724D5B887296CCFC66
88724D5A88724D5A88726076133FA2734C5A88734C5A88734B5B1D81A27303835B1DC373
03C790CDFC1DE773EDEFFE1DFF735EA3735EA2745DA2745DA3745DA2745DA27492CEFCA3
745CA2745CA2745CA3755BA2755BA2755BA2755BA27590CFFC755A>165
144 123 269 176 I[<BB6C010FBA00FC0307B812F8A9C76C02FCCB000703C0CC6CEC80
00786F070001F0C7FC6E6EA1EB3FE0781E7F6E796371A113FF78816E6FA15BA16079806E
6FA190C8FC79646E796272230779806E6FA15AA1180F79816E6FA15A791C1F6F79617223
3F79816F6E4E65A1187F8F6F6E4E65A118FF6F516F6173698F6F6F4D9AC9FCA15F8F6F6F
4D640EDF1A076F09FF6F6073210F0E8F816F6F4C65A1171F0E0781706E4C65556C1A3F70
0707715F73217F556C81706E040F65A117FF556C81706F031F65556D6070073F7194CAFC
7467556D80706F037F64A11607556D80706F03FF64556D180F704E735D741F1F9CC76C81
716E4A65A1163F546E81716E020765546E187F71050F735D741FFF546E81716F011F65A1
5D546F80716F013F9ACBFC546F5E71057F735C751D07546F80716F01FF64A1150F546F15
80716F48659BC96C161F724B09C05B09FC1D3F537015E072DAFE0765A1157F537015F072
DAFF0F65537016FF72031F755B0A9F1BF9537114FD7203FF9ACCFCA191B5FC5383726853
837268A253837268A29ACB7E736752847367A252847367A2528473675285739CCDFCA252
857366A25285736652857366A299CD7E7465A25186083F655186081F655186E007F075CE
FC>229 144 123 269 240 I<93B512FC037FECFFF00207B8FC023F17E091B912F84918
FE0107727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F90B5
70806F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C00101
90CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FEDE0
00023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C48
5C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F16
CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C6E
6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC141F
021F03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B296383FFFC00607B512FE063FECFFE0
4DB712F8050716FF051F17C0057F17F094B5D8C00F8004F301FCC714FE04F701E0023F7F
93B50080020F804DC86C14E005F80301804D6F804D707F05808294CA804C717F4C7180A2
4C71808BA27680A28B88A28BA28BA3888BA52080B02000A56764A267A3676467A2525CA2
67647062704D91C7FC704D5BA2714C5B7193B55A05F04B5CDCBFF84B5CDC1FFC030F5C4B
6CB44B91C8FC7001C0027F5B4B6C01F00103B55A4BC601FF013F14F04B6D90B712C04B01
1F94C9FC4B6D16FC4B010316F092C86C15804A030F02F8CAFC90CB49CBFC>113
144 121 270 129 I<94387FFFF0041FB612E093B712FE0307707E031F17F092B97E4A18
FE020784021F9126F8000F14804A0280010014C04A49C74814E049B500F85C494A17F049
4A5C495C494A4A14F84991C8FC5D495B90B5FC5D5A485C7314F05A4B6F14E05A7314C048
7214804B93383FFE00F20FF84896C8FCA4485CA5B6FCB07EA281A37EA36C80A37E6F18FE
6CF201FFA26C6E5F1CFE6C801B076C6EEF0FFC6D7F70EE1FF86DF13FF06D6E167F6D6EEE
FFE06D02F84B13C06D6E5D6D02FF030F13806D03C0023F1300023F02F0903801FFFC6E91
26FF801F5B020792B65A6E18C0020060033F4CC7FC030716F8030016C0041F4AC8FCDC00
7F13C0585F78DD67>I[<F53FE098B6FC4FB7FCA996C77E1B0FA287B3B294383FFF80040F
B512FC93B71280030716E0031F16F8037F16FE4AB9128702074AC66C13C7021F02E00107
13F74A91C890B6FC4A01FC153F49B548150F4902E081494A81494A814991CA7E495B8749
498390B548835A5D5AA2485CA25A5D5AA35AA25D5AA5B6FCB07EA57E81A37EA27EA2817E
A26C80A26C626C6E5F636D7F6D6D94B6FC6D606D6D1607705D6D6E4B81010102F0157F6D
6E92B712FE6E01FE020301EF91B512806E6D6C011F13CF020FDAF801B5120F020391B612
FE6E17F86E6C16E0030F16800301EDFC00DB003F14E0040049C74AC8FC>113
144 120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB9
12F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902
C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D48
1CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4
817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FF
C06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E00203
5B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780
DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I[<95383FFF80050FB512F094
B612FE040781041F16C0047F824BB87E0307DAF8077F031FDAC00F7F4B49C6487F4B495B
92B500F0814A4A5B4A5C4A93B612805F4A91C7FC5C5E5C5E5C731400A24C6E5B91B56F5B
A2735B070313E00700138097C8FCB3A4BA12F8A9C702FCCBFCB3B3B3B3A2003FB9FCA9>
81 144 121 271 71 I<F5FFC093260FFFFC030F13F04BB600E0027F7F031F03FE49B512
FE037F9226FF8007800203B8EAF01F020FDDFC3F15804A7148133F027FDA003F90B500F0
14C091B500F80107ED807F4902E00101ECFC00010702806D6C5B93C87E49496F7F49496F
7F49496F6D6D1380491A8077130090B5486F6E6C5AF503F84875C8FCA2484A6F80A44887
AB6C63A46C6E4B5CA26C63A26D6D4B5CA26D97C9FC6D6D4B5B6D6D4B5B6D6D4B5B705C01
0102E049B512E06D02F801075C4902FF013F5C4992B648CAFC496002F317F090260FE07F
1680031F4BCBFC90261FC00115E0DB000F01FCCCFC013F91CFFCA3137FA280A380A28080
806E7E15F092B812F06DF0FFE01BFEF3FFC06D1AF81CFE767E6D1BE06D87896D1BFE6D87
7F6E878A0103BD7E130F013F8890BEFC4802E0C9003F814891CBFC4801FC180F48490601
804849727E484985884849737F88A2B55A88A66E616C65A26E616C6D4F5B6C656E616C6D
4F5B6C6D96B55A6C6D6C05035C6F5FC602F0051F49C7FC6D01FC057F5B6DD9FF800303B5
5A010F02F8033F14E06DDAFFE0010FB65A010192B9C8FCD9003F19F8020F19E0020196C9
FCDA001F17F0030194CAFCDB000192CBFC6A887ADD74>I[<ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B2963803FFFC073FEBFFE096B612F8060715FE061F6F7E4E16E095B87E4D
D9FC03804DD9C000804D48C76C7FDD0FF880DD1FE0824D486E804D5A05FEC881DCF1FC81
5F04F385EEF7F04D81EEFFC0A24D84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9
>114 143 119 270 129 I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67E
A24881A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1F
F0017FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49 144
119 271 65 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3083FB712C0A908014AC7
FCE0003F13C09AC8FC515A515A505B5013E0080F5B505B5090C9FCF27FFC4F485A4F5B4F
5B4F5B4F90CAFCF17FFE4F5A4E5B4E5B4E13C0061F5B4E90CBFC4E5AF0FFF805037F5F4D
7F4D7F4D8094B67E16F104F38104F78193B77EA2868605F18017E04D814D6C804D6C8004
FC6D805E4C6D804C6D807280A27280728173808588738073807380A2738073807381A274
80748074808689748074807480A274818A5015F0B96C017F92B5FCA9>112
143 121 270 123 107 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3AC
B912C0A9>50 143 119 270 65 I<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0
041FEBFFE0B792B600FC93B612FC060303FF030315FF060F04C0020F16C0063F04F0023F
16F095B86C91B87E4DD9FC036E49D9FC03804DD9C0006E49D9C000804D48C7003F6D4948
C7003F7FDD0FF86EDB0FF880D8003F4B48714848830107DB3FC06E9126C03FC06E804D48
4E5A6D4BC86F48C881DCE1FE6FDAE1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81
DCEFC0F0FFC0A2DCFF804F84A294C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900
E090B912E0A9B35D77DCC2>I<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F80607
15FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1F
E08201074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084
A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>I<94381FFFF00407B6
12C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F80020F02C0010714E0
4A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F804991C96C8049497080
4949717F49874949717FA290B548717F48884B83481D80A2481DC04B83481DE0A2481DF0
A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1D
C0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B
5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC001075C6E02FC017F5C0207
91B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC040715C0DC001F01
F0CAFC675F7ADD74>I<DB1FF091381FFFC0017FB50203B6FCB7021F15E095B712FC0503
16FF050F17C0053F17F094B912FC04F1DAC01F8004F79026FC00018093B500E06D6C14C0
D8003F93C86C8001074B030F8005F86F806D03E06F804D6F804D8194CA6C7F4C864C7180
5E7680A27680A27680A28B88A28BA288A28BA4882080B0200064A467A26467A3525CA267
64676467647062704D91C7FC7094B55AA2714B5C714B5C714B5C05F84B5C71033F5C05FF
4B91C8FC06C049B55A04FB01F001075C04F801FF017F14F07190B712C0051F94C9FC7116
FC050316F0DD007F1580060F02F8CAFC060049CBFC96CDFCB3ACB912E0A9718579DC81>
I<DB7FC049B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF0
0F7F94387FC01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F
16DF4D6D1400A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB9
12FCA9515D79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F01
0317FF130F013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CA
FC197F4848173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14
FF15F06CECFF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C
856D84011F846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C0
1700183F060F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B
006E5E6E5F6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F9
91B7C7FCD9F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349
C9FC4B5F78DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA2
5C5C5C5C91B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1
616E17FE82A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF03
13C06E92B512806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190F
A26D85B3B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D15
1FE07FC314FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F8
6F16E0031F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I<B90303B7FC
A9D8000702F8CA000FEBFE006D6E050013E0666D6E6164826D5090C7FC836E4F5AA26E6E
4C5AA26E6E4C5AA26E6E5F1C3F836E4F5A836E4F5AA26E6E4B5BA26E6E4B90C8FCA26F6E
5D1B07846F4D5A846F4D5AA26F6E4A5AA26F6E4A5AA26F6E5D1BFF846F4C5B846F4C90C9
FCA2706E485AA27002C05B1A0F7002E05B1A1F19F0704B5A19F8704B5AA2706E485AA270
6E5B96B5FC7093CAFCA3715CA2715CA2715CA2715CA3715CA2715CA2715CA27191CBFCA2
725AA3725A725A725A705D7BDB7B>I<B800FE017FB700F8023FB612F8A9D8000F02F0C8
000702C0C9003FEBF800100313806D6E6F7390C7FC775E6D69706F6E1607A26D6E6F6277
160F6D6970706D161FA26E6E6F61516D163F6E687192B6167FA26E68714A6F15FF6E6871
4A608A6E9DC8FC714A6F5C6E6771DA0FFD17078A6E06F86071021F6F140F6E67714A486C
161F8A6F4D6C5F72017F6F143F6F667249486C167F8A6F4D6C5F72487113FFA26F02F04A
6C4B5B4F17C06F4C6D94C9FCDEF807715AA26F02FC496D4B5A070F17F06F4C6D5EDEFE1F
EFF80FA26F02FF496E4A5A073F17FC704B6E5D07FFEFFE3FA2704B6E4A5A1FFF704B6E5D
20FFA27092C86C5DA2704A6F92CAFCA3704A6F5CA2704A6F5CA3704A705BA27149705BA3
7149705BA27149705BA37190CA6C5BA271487190CBFC7148715A9D5D7BDBA8>I<007FB8
6C49B712FEA9C792C9000F02C0C7FC6E6E030101F0C8FC715F6E6E4B5B6E6E4B5B6E4E90
C9FC6E6E5E71151F6E6E4B5A6E6E4B5A6E4E5A6F6E495B72495B6F6E495B6F806F6E4990
CAFC6F4C5A72495A6F6E495A6F6E495A6F03815B705E7014C307E75B7091B5CBFC705D70
5D705D6282705D715C8386718071807180837180864D814D815F4D81874D814D81DDFFF3
804C13E14C01C1804C0180814E6C804C6E804C487F4C48824C486D804C486D804B496D80
4B497F73804B49834B90C86C804B486F804B48814B486F804B48844C6F804A71804A496F
804A49814A90CA814A487180023F7280010FB500E07080B8031FB812E0A9735C7CDB7B>
I<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F0775A6D6E4E5AA26E6E60
64836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E6E5F1C7F836E4F5A84
6F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D5A846F4D5AA26F6E4A
5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E485AA2706E485AA27002
FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2715CA2715CA2715CA2
725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA24D5B13FE2603FF804A
90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D5A17FF604C5B4A4990
CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270FFFC03F5B6C90B6CFFC
6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B>I<C5BD12FEA7E707
80BBE8>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 20.74 75
/Fl 75 122 df<F10FC04F7E4F7EA24F7EA24F7EA34E7FA24E7FA24E80A24E80A24E8019
BF063F80191F067F80F07E0F06FE8018FC05016D7F18F805036D7F18F005076D8018E005
0F6D8060051F6E7F60053F6E7FA24DC76C7FA205FE6E7FA24C486E7FA24C486E7FA24C48
6E80A24C486E80A24C486F7FA24D81043F8494C97E4C84047E8204FE844C820301854C82
0303854C820307864C82030F864C83031F865E033F727F93CBFC4B727F157E03FE727F5D
0201737F5D0203737F5D02077380A24A487280A24A48737FA24A48737FA24ACD6C7FA202
FE747FA24948747FA24948747FA24A8601078A4A86010F8A4A87011F8A4A87013F8A91CF
7E498A017E8801FE8A498800018B498800038B90C1FC482080A24820C0A24820E0A24820
F0A24820F8A2C212FCA37E7C78FB8F>1 D<031FB912FCA692C7001F02FCCBFC050114C0
715C7290CCFCAE267FFF8098B5FCB56C50148002F01A076C6D50140000076D5013F06C6D
505B6C666C6D505BA26D9AC7FC6F96B5FCA26D64A36F60A26D64B06F606D64A56D646F60
A36D646F60A26D646F606D646F60027F98C8FC6F606E626E6D4D5AA26E6D4C5B6E6D4C5B
6E626E6D4C5B6E6D4C5B6F6C4C90C9FC6FB4EE7FFE6F01804B5A030701E0020313F06F01
F8020F5B030001FE023F1380043FB748CAFC040F16F8040116C0DC001F02FCCBFC050014
807290CCFCAF95B57E4D80051F14FC031FB912FCA6717676F586>9
D<94260FFF80EC1FF84CB500F849B5FC041F02FE01071480047F9126FF801F14E0922703
FFFC01903AE07FF81FF04B903DC0001FF0FFE00FF8DB1FFEC7D807F9EB801FDB7FFC6EB5
38003FFCDBFFF0020F49137F4A494A49EBFFFE4A01805C4A90C85C4A484B5B141F4A485F
4BF17FFC147F4A484DEB3FF873ED1FF049496FED07C07392C7FC735B5B5DB3A7BE12F0A6
D8000301C0C800070180C8FCB3B3B3A5496D4B7F87013F01FC037F13FC007FB600FE90B8
7EA6677A7CF964>11 D<94380FFF804CB512F0041F14FE047F80922701FFFC0113C00307
9039C0003FE0031F90C7EA0FF0DB3FFCEC03F8DBFFF06E7E4A4914004A0180EC07FE4A90
C8121F4A484B7E021F5E4A5A5D147F4A4892B57E7390C7FC495BA349715A4B6F5A735AF1
01C096C9FCB3A296380FFF8095B6FCBCFCA6D8000301C0C8123F8585A285B3B3B3496D4B
7FA2013F01FC037F13F8007FB600FE90B712FCA6567A7CF960>I<071F161FA24F6C4B7E
A2077F167FA297C990C8FCA24F5EA24F5EA206011601A24F5EA206031603A24F5EA20607
1607A24F5EA2060F160FA24F5EA2061F161FA24F5EA2063F163FA24F5EA2067F167FA296
C990C9FCA24E5EA24E5EA205011601A24E5EA205031603A24E5EA205071607A24E5EA200
7FC112E0A2C212F0A36C20E06C20C0CAD83F80C8D83F80C9FC057F167FA295C990CAFCA2
4D5EA24D5EA204011601A24D5EA204031603A24D5E04071607A24D5EA2040F160FA24D5E
A2041F161FA24D5E003FC112C04820E0C212F0A36C20E0A2C948C948CBFCA203011601A2
4C5EA203031603A24C5EA203071607A24C5EA2030F160FA24C5EA2031F161FA24C5EA203
3F163FA24C5EA2037F167FA293C990CCFCA24B5EA24B5EA202011601A24B5EA202031603
A24B5EA202071607A24B5EA2020F160FA24B5EA2021F161FA24B5EA26E486F5AA27C9977
F78F>35 D[<160F161F163F167C16F81501ED03F0ED07E0ED0FC0ED1F80ED3F00157E15
FE4A5A4A5AA24A5A4A5A141F5D4A5A147F92C7FC5C495AA2495AA2495AA2495AA2495AA2
133F5C137FA2495AA34890C8FCA3485AA312075BA2120FA25BA2121FA45B123FA6485AA8
12FFA35BB37FA3127FA86C7EA6121F7FA4120FA27FA21207A27F1203A36C7EA36C7FA36D
7EA2133F80131FA26D7EA26D7EA26D7EA26D7EA26D7E8081143F6E7E81140F6E7E6E7EA2
6E7E6E7E157E81ED1F80ED0FC0ED07E0ED03F0ED01F81500167C163F161F160F>40
171 111 256 67 40 D[<127012F8127C7E7E7F6C7E6C7E6C7E6C7E6C7E137E137F6D7E
6D7EA26D7E6D7E8013036D7E801300806E7EA26E7EA26E7EA26E7EA26E7EA281140381A2
6E7EA36E1380A3ED7FC0A316E0153FA216F0A2151FA216F8A4150F16FCA6ED07FEA816FF
A381B35DA316FEA8ED0FFCA616F8151FA416F0A2153FA216E0A2157F16C0A3EDFF80A34A
1300A34A5AA25D14075DA24A5AA24A5AA24A5AA24A5AA24AC7FC5C13015C495A13075C49
5A495AA2495A49C8FC137E5B485A485A485A485A485A90C9FC123E5A5A1270>40
171 119 256 67 I<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA27EEA
1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F14005B131E133E13
3C137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>44
D<B812F8AA2D0A7EA939>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13
006C5A6C5AEA03F01212719130>I[<F103C01907F10FE0A2191FA21AC0193FA2F17F80A2
1A0061A2611801A2611803A24E5AA261180FA261181FA261183FA24E5AA296C7FC60A260
1701A2601703A24D5AA260170FA260171FA260173FA24D5AA295C8FC5FA25F1601A25F16
03A24C5AA25F160FA25F161FA25F163FA24C5AA294C9FC5EA25E1501A25E1503A24B5AA2
5E150FA25E151FA25E153FA24B5AA293CAFC5DA25D1401A25D1403A24A5AA25D140FA25D
141FA25D143FA24A5AA292CBFC5CA25C1301A25C1303A2495AA25C130FA25C131FA25C13
3FA2495AA291CCFC5BA25B1201A25B1203A2485AA25B120FA25B121FA25B123FA2485AA2
90CDFC5AA25AA2127CA2>67 172 119 256 86 I<923803FF80033F13F84AB6FC020715
C0021F010113F0913A3FF8003FF8DA7FE0EB0FFC902601FF80EB03FF4990C76C7F49486E
7F49486F7E49486F7EA249486F7E49486F7EA201FF834A15074884A248496F1380A24819
C0A291C97E4819E0A34819F0A44819F8A24982A3007F19FCA800FF19FEB3AC007F19FCA8
6C6C4C13F8A56C19F0A46C19E06E5DA26C19C0A26C19806E5DA26C1900A26C6D4B5A017F
5F6E151F013F5F6D6C4B5A6E157F6D6C4B5A01075F6D6C4A5B6D01C0010790C7FC6D6D49
5ADA3FF8EB3FF86EB448B45A020790B512C0020192C8FCDA003F13F803031380477779F2
56>I<ED01E04B7E1507150F153F157FEC01FF1407143F0103B5FC137FB7FCA214FB14C3
EBFC031380C7FCB3B3B3B3B14A7F4A7F91B612C0007FB91280A6397371F256>I<ED3FFE
0203B512F0021F14FE027FECFFC049B712F0498249D9803F13FE90271FFC00037FD93FE0
0100804948023F13E049C86C7F48486F7F498148486F7F48486F7F48486F7F5B001F7113
804918C0003F8390CAFC7213E0EA7FF801FE18F06D8280B57E1AF88084A66C5BA26C5B6C
90C95A6C5AD803F818F0CBFCA2601AE0A21AC060A24E13801A0095B5FC615F614D5B615F
614D5B4D5B96C7FC4D5A4D5A4D5A604C5B4C5B4C5B4C48C8FC5F4C5A4C5A4C5A4C5A4B5B
4B48C9FC4B5A4B5A5E4B5A4B5A4B5A4BCAFC4A4816F84A5A4A5A4A48ED01F04A5A15804A
C9FC147E4A1603494817E0495A495A49481607495A49CAFC017EEF0FC0017C173F90BAFC
5A5A5A5A4819805A5ABBFCA31A00A3457378F256>I<92380FFF8092B512FC0207ECFF80
021F15E0027F15F89126FFF80313FE0103903980007FFFD907FCC7001F7FD90FF06E13E0
49486E7FD93F806E7F49C87E01FE83496F7F484883D9FF80814801E017808080486D17C0
8480A76C495D6C5B6C4917806D5A6D5A90CA140095B5FCA261A24D5BA24D5B614D5B615F
614D90C7FCEF3FFC4D5A4D5A040313C0041F5B92260FFFFEC8FC0207B512F017C017FCEF
FF8091C7000313F09338007FFCEF1FFE716C7E717F7113F0717F717F727E85721380A272
13C01AE0A27213F0A21AF8A21AFC84A31AFEA2EA03FCEA0FFF487F487F487FA2B57EA31A
FCA260A24A17F8A26C5B4A4B13F091C9FC6C4818E001F04C13C0EA1FC04E13806C6C1800
6D93B5FCD807FC4B5B6C6C5F6C6C6C4A5B6C01E0020F5BD97FF84A5B6DB4027F1380010F
D9F803B5C7FC6D90B65A010116F86D6C15E0020F1580020102FCC8FCDA001F1380477779
F256>I<F003C04E7E180F181FA2183F187FA218FFA25F5FA25F5FA25F5FA25F94B5FC17
FBEE01F3160317E3EE07C3160F1783EE1F03163F163E167C16FC16F8ED01F0150316E0ED
07C0A2ED0F80ED1F00A2153E5DA25D14015D4A5A14075D4A5A141F92C7FC143E147E147C
5C13015C495A13075C495A131F91C8FC133EA25B5BA2485A485AA2485A120F5B48C9FC5A
123E5A12FCBC12E0A6CA000701E0C7FCB3A24D7F4D7F94B6FC030FB812E0A64B757BF456
>I<0170171C017C177CD97F80ED03FC02E0151F02FEEDFFF8DAFFF0013F5B92B75A6161
96C7FC60606018E06095C8FC17FC17F017C0D97E1F01FCC9FC91CCFCB3A4923803FFC003
3F13FC92B6FC020315C091260FFE0113F0913A1FE0003FF8DA7F80EB0FFE02FEC76C7ED9
7FF86E7F4A6E7F4A6E7F4A824A6F7E91C9FC017E707E85017C161F01388390CAFC721380
A21AC0A21AE0A2841AF0A51AF8A5EA07F0EA1FFC487E487E80B5FCA41AF0A36091C914E0
5B6C5A01F018C0007ECAFC60003E1980123F6C4D13006D5F6D167F000F606C6C4C5A7F6C
6C4B5B6C6C4B5B6D4B5B6C6C6C4A5B6D6C023F90C7FCD93FF04A5AD91FFE903801FFF890
270FFFC01F5B010390B65A6D16806D6C4AC8FC021F14F8020314C09126007FFCC9FC4577
78F256>I<933801FFE0041F13FE93B67E030315E0030F81033F9038803FF8923AFFF800
07FC4A01E0EB00FE4A0180147F4A90C8EA3F80DA1FFC151F4A48EDFFC04A4814034A485C
4B4A13E0495B495E4990C8FC495AA2495A133F4A6F13C0137F49486F138072130048EF00
FC4A93C7FC5AA2485BA35AA25C5AA35AA2160C923803FFFC48D9000FEBFF80033F14E04B
14F89239FE003FFCDA01F8EB07FFDA03E06D7F4A4801007FB548486E7E4AC87F023E6F7E
023C6F7E027C820278150F02F8824A6F13801AC05C7213E0A24A17F0A21AF8A24A811AFC
A591C914FE7EA87EA380A27EA21AFCA27EA21AF86C6D5DA21AF07EA26C6D17E0606C19C0
6E1780017F5E6E1700013F4C5A6D6C4B5A6E5E6D6C157F6D6D4A5A6D6D495B6D6D01075B
6D01F8011F90C7FC6EB4EBFFFE021F90B55A6E5D020315E002001580033F01FCC8FC0303
13C0477779F256>I<EA03E0A27F487E13FEEBFFF091BA12C0A35AA31B801B00A2486162
62A26201F0CAEA0FE00180171F48CB485A624FC7FC003E60614E5A007E1703007C4D5A61
4E5A181F61484D5A187F96C8FCCB12FE17014D5A604D5A170F604D5A173F604DC9FC5F5F
16014C5AA24C5AA24C5AA2161F5F163F5F167FA216FF5F5DA24B90CAFCA35DA24B5AA315
1FA3153F5EA2157FA415FFA44A5BA55CA85CAF6E5B6E5B6E5B033FCBFC4A7977F456>I<
923803FFC0033F13FC4AB67E020715E0021F15F891263FFC007FDAFFE0EB0FFF4990C700
037FD903FC02007FD907F06F7E4948ED1FF049486F7E49486F7E91C91203017E8301FE70
7E498200011980A249177F12031AC0193FA21207A27FA37F197F6D188080806EEEFF006C
7F02FC5D6E5E6E6C4A5A6C6E140703F05D6C6E4A5A03FE4A5A6D6D4A5A04C0495A6D02F0
49C7FC6D6E485A6D9138FE07FC6D9138FF0FF06DEDFFE06D16806D93C8FC6E14FC6E14FF
020F816E15E00201816E15FC020381020F6F7EDA1FF781DA7FC181DAFF8081902703FE00
3F8049486D804948010780D91FE06D8049480100158049486E14C049C8121F487014E048
48030314F048481500844848041F13F8484882060313FC003F834982197F4848EF3FFE19
1FA200FF180F5B1907A31903A41AFC7F127FA2F107F87F003F19F06D170F001F19E06D17
1F6C6C18C0193F6C6CEF7F806C6CEFFF006C6D4B5A6C01E0ED07FC6D6C4B5AD93FFCED3F
F06DB4EDFFE06D01E001075B6D01FC017F5B010190B648C7FC6D6C5D021F15F002071580
020002FCC8FC030713C0477779F256>I<923807FFC0037F13FC4AB6FC020715C0021F81
027F010013F8DAFFF8EB3FFC4901C0EB0FFE4949EB03FF4990C76C7F49486E7F49486F7E
49488249486F7E13FF48496F7E48844A150F488484484917805AA21AC048831AE091C9FC
5A1AF0A3B5FC1AF8A284A31AFCA81AFEA26C5FA57E6E5DA27EA26C5FA26C7F6C5FA26C6D
5D6C173D6D6C157D18796D6C15F16D6C14016D6CEC03E10107DB07C113FC6D6C6CEB0F81
6D6DEB3F019026007FF813FE6EB512FC020F14F8020314E0DA007F018014F89239006000
0393C7FCA21AF0A41AE0601AC0A34E1380A21A00137E48B46C4B5A487F486D4B5AA2486D
4B5AA24E5A615F614A4A5B4D90C7FC6C494A5A4A4A5A49C8485AD803F04B5A01FC4A485A
6CB44A5B6C01C0010F5BD97FFC90B5C8FC6DB612FC6D5D010715E0010115806D6C01FCC9
FC020713C0477779F256>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13
006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C
13006C5A6C5AEA03F0124A71C930>I<EA03F0EA0FFC487E487E481380A2B512C0A66C13
80A26C13006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E123F487EA2B51280A314C0
A37EA27E7E7EEA03F3EA0003A613071480A4130F1400A25BA2131E133E133C137CA25BA2
485A5B1203485AA2485A48C7FC123E121E120C126B71C930>I<007FC0FCA2C11280A36C
1F006C66D4FCB3A9003FBF12FE488AC11280A36C1F00A2712976BF86>61
D<F07FFF050FB512F894B77E040316E0041FD9C00113FCDC7FF8C7EA0FFF922601FFC002
0113C04B48C9EA3FE0DB0FF8EE0FF8DB3FE0EE03FEDB7F80EE00FF03FECBEA3F804A4872
7EDA07F0F007F04A48727E4A48727E4A48727E027ECD123F4A747E4948747E4A1A070103
884948747E4948747E4948DB1FFC6F7E91C848B56C157C49030F02F0157E017E033F02FC
81017C9227FFF807FE8101FC4A9027C000FF808149020790C7D83FC0140F00014B48DA0F
E08149DA1FF86E6C140700034B48DA01F881494A486E6C140300074B48037E814949053E
1401000F4A496F81494990C96D130098380FFFE0001F4A48708190C7001F1B7C4C824802
3F1B7E003E4B70153E157FA2007E4B1A3F007C02FF87A25E5CA200FC1F80481E0F4A5BAE
6E7F7E127CA28082A2007E147F003E6F1B0067153F003F6F5E6C141F705E6D130F000F6E
6C4C151E51153E6D6D7F00076E6D5D6D6D4D5D00036F6C15FD6D6E6CDA01F86D13780001
6F6CDA07F015F86DDA0FFE91260FE07F495A00006F6C91393FC03FF86D020101C0D9FF80
EC07E0017C6E903DF807FE001FFC1FC0017E033FB5480107B55A6D030F02F06D91C7FC6D
0301028001005B6E9126001FFCC8EA1FF06D6C92CEFC6D7E6D7E1301806D7E147E6E7E6E
7E6E6C973801FF806E6C1A07DA01FC1A3F6E6C9738FFFE00DB7F80060713F8DB3FE0063F
13C0DB0FF84DB5C7FCDB03FE050F13F8922601FFC04BB512C09226007FF8033F49C8FC93
261FFFC0013FB512E0040390B748C9FC040017E0050F03F8CAFCDD007F01F0CBFC717C76
F986>64 D<F001F84E7EA34E7EA34E7EA34E7FA34E7FA34E7FA395B57EA34D80A34D8018
F3A205078018E1A2050F8018C0A24D488085053F811800854D81177E8505FE815F850401
824D7FA20403824D7FA20407824D7FA2040F824D7FA2041F834D80A2043F8394C87EA24C
83047E81A204FE834C81A20301844C81A20303844C81A20307844C81A2030F8493BAFCA2
4B85A34B8593CA123FA24B85037E83A203FE854B83A20201864B83A20203864B83A20207
864B83020F865D87021F875D88023F87A2027F858A14FF4986496D86496D60496D86017F
01FC95B57E0003B66C0407ECFF80B700F80307B812F0A6747C7AFB81>I<BB12FEF2FFF0
1BFEF3FFC01CF01CFCD8000702E0C8000F13FF01004A0301806E496F6C13E06E061F7F75
7F757F757F757F7580888A767FA2767FA2767FA4767FA9525BA36664666466646699B5C7
FC515B515B515B515B515B097F13805148C8FC08075B081F13F00703B5128093B800FCC9
FC63F3FF801CF00480C913FE98383FFF80090F7F7513F0090113FC757F767E767F767F8A
767F767FA2767F8AA2767FA3761480A31FC0AA1F80A264A21F0064666466646664525B52
5B99B55A515C5191C7FC090F5B4A063F5B91B56C93B55A01076E030F14E0BE5A9AC8FC1C
FC1CE099C9FC1BE06A767BF57A>I<95260FFFE0ED03804DB500FE1507051FDAFFC0140F
94B700F8141F040316FE041F70143F047FDA800F01C0137F93B500F0C77F03030280DA1F
F813FF030F01FCC83807FC014B01F0ED03FE4B01C0923800FF0392B5CAEA7F874A49EF1F
C74A01F8EF0FEF4A4971B5FC4A49834A49834A5B4A90CCFC4A4885494985495B49498589
495B4949855B4B855B92CDFC90B586485B895A5C481D7F5CA25A1E3F5C5AA348491B1FA4
5A9BC7FCA35CB5FCB27E80A47EF60F80A36C7FA37E801E1F6C1E00A2807E6E636C1D3EA2
6C6D1B7E6D1C7C6F1AFC7F6F626D1B016D6D626D6D1903535A6D7F6D6D4F5A6D6D4F5A6E
7E6E6D4EC7FC6E6D187E6E6D606E6D17016E6D4D5A6E01FEEF0FF06E6D4D5A033F01C04C
5A6F01F0EEFF806F01FCDB03FEC8FC0303D9FF80EC0FFC030002F0EC7FF870903AFF800F
FFE0041F91B61280040394C9FC040016F8051F15E0050192CAFCDD000F13E0697E77F97C
>I<BB12FEF2FFE01BFE757E1CF01CFCD8000702F0C8003F7F01004A03036D7E6E49DB00
7F13E06E061F7F09077F090113FE757F0A3F7F767F767F767F767F88767F777E777E8B89
8B777F898B898BA2777FA28B89A28BA2781380A420C08AA320E0A620F0B020E0A620C0A2
66A22080A320009BB5FCA2676567A2535BA2535BA2535B6765675390C7FC6566535A525B
525B525B525B0A3F5B5290C8FC51485A515B090F13F04A067F5B91B56C0303B55A01076E
033F91C9FCBD12FC1CF01CC051CAFC1BF050CBFC74767BF584>I<BFFCA48AA2D8000702
F0C9FC01004A16076E49EE007F6E191F881C03767F881D7F1D3FA21D1FA21D0F8AA21D07
A31D03A28AA21D01A51A1F777EA49BC7FCA462A462A2626161190F96B5FC93B8FCA604C0
C7FC190F1903858586A286A486A2F607C0A3F60F80A497C9FCA21E1F1F00A466A21E3EA2
1E7EA31EFE661D01A21D03A21D07A2535A1D1F1D3F1D7F1DFF1C030A0F5B4A193F91B56C
0403B5FC01076E167FBFFCA366A36A767BF575>I<BE12FEA489A2D8000702F0C8120101
004AED00076E4916006E193F1C0F8876138088881D7FA21D3FA21D1F1EC01D0FA41D07A2
1EE0A21D03A6F501F01A1FA39AC7FCA662A462A2626161190F96B5FC93B8FCA604C0C7FC
190F1903858586A286A486A997CAFCB3A94A7F91B57E010714FFBAFCA664767CF570>I<
95260FFFC015070503B500FE5D051FDAFFC05C94B700F05C040716FC041F04FF5C047FDA
001F6D5B4BB500E0010113E04B91C8383FF001030F01FC92380FF8034B01F0ED03FC037F
01C06F6C5A92B5CAEA7F0F4A01FCEF3F8F4A49EF1FDF4A4971B5FC021F01C0834A498393
CB7E4A5A02FF85494985495B49498549875D4949855B4B855B90B5CD7EA2485B89485BA2
48885CA25A8A485BA4484987A45A9BC8FCA25CA2B5FCB27E80081FB812F0A37EA36E94C7
003FECE0006C09031480887691C7FCA26C7FA27E80A27E807EA26C7FA26D7F7F817F6D7F
817F6D7F6D7F6D6D606E7E6E7F705F6E7F02076D5F6E01FC5F6E6DEF1FEF6E6D6CEE3FC7
6F6DEE7F83031F01F0EEFF016F01FC923803FE000303D9FF80DA0FFC7F6F02F0DA7FF87F
6F6C9028FF8007FFF07F041F91B600C07F040794C77E040004FC91C8FC051F15E0050392
CBFCDD000F13E0747E76F987>I<B900F0013FB812FCA6D800074AC90001ED8000010002
F0DC003F01FCC7FC6E49715B6E49715BB3B3A993BBFCA604C0CA120FB3B3AD4A6D4D7F91
B56C4D7F010702FE4CB67EB900F0013FB812FCA676767BF581>I<B912F0A6D800074AC7
FC010014F06E5B6E5BB3B3B3B3B3AA4A7F91B57E010714FEB912F0A634767BF53E>I<02
07B91280A691C7000392C7FCDC003F13F883715BB3B3B3B3A713F0EA07FE487E003F13C0
487FA2B57EA54D5BA34A5E5F6C5B4A5E91C85AD83FFC94C8FC01804B5A6C7E6C6C4A5B6D
4A5B6C6C5E6C6C4A5B6C6C4A13806C6C6C4990C9FCD93FE0EB7FFE903A1FFE01FFF80107
B612E001011580D9003F01FCCAFC020313C0497A7AF558>I<B900F0037FB612FEA6D800
074ACA00071580010002F0050102F8C7FC6E497114C06E497290C8FC1EFC1EF0661E8053
C9FC525A65F407F8525A525A525A525A52CAFC515A515A515A515A515A515A515A51CBFC
505AF203F8505A505A505A505A50CCFC1AFE4F5A4F5A4F5A4F5A4F5A4F5A4FCDFC4F7E18
034E7F4E7F604E7F4E7F95B5FC4D804D805FDD0FF37FDD1FE380EF3FC1DD7F80804D5ADC
C1FC6D7FDCC3F86D7FEEC7F0DCCFE06D7FDCDFC06D7FEEFF8094C76C7F4C6E7F5E4C6E80
4C6E805E4C6F7F747FA2747F747FA2747F747FA274807480A2757F757FA2757F757FA275
7F757FA275807580A2767F767FA2767F767FA2767F8A8BA28B4A6D1AF091B56C4D800107
02FE057FECFF80B900F0020FB81280A679767BF586>I<BAFCA6D8000792CCFC010014F0
6E5B6E5BB3B3B3AA1D3EA41D7CA71DFCA21DF8A31C01A31C03A3F407F0A21C0FA21C1F1C
3FA21C7F1CFF5113E0631B0F631B7F4A4DB5FC91B56C150F01076E4AB6FCBEFC1DC0A55F
767BF56C>I<B700C098B712E07062A27062A27062D800070EFCC7FC010020E0027E6DE0
0FBF5B023E676F6CF21F3FA36F6C1A3EA36F6D197CA26F6D19F8A36F6DF001F0A26F6DF0
03E0A36F6DF007C0A36F6DF00F80A2706CF01F00A3706C183EA2706D5FA3706D5FA2706D
4C5AA3706D4C5AA3706D4C5AA2706D4C5AA3716C4CC7FCA2716C163EA3716D5DA3716D5D
A2716D4A5AA3716D4A5AA2716D4A5AA3716D4A5AA3726C4AC8FCA2726C143EA3726D5BA2
726D5BA3726D485AA3726D485AA2726D485AA3726D485AA2736C48C9FCA396383FFF3EA3
7313FCA2735BA3735B147F735B4A7E497F010701F06F494C7F011F01FC99B57E90B66C08
0714FCB86C6D4991B912E0A274C8FCA31A3E93767BF59E>I<B700C00407B712FC8282A2
8282D80001DF0007ECFC00D9003F6D050014E070063F1380E30FFEC7FC71715A023E6E71
5A836F735A6F7F83816F7F83816F7F84816F80707FA2707F707FA2707F707FA2707F7080
A27080717FA2717F717FA2717F717FA2717F7180A27180727F8684727F8684727F868472
808784737F737FA2737F737FA2737F737FA27314807314C0A27413E07413F0A27413F874
13FCA27413FE7413FFA27414817414C1A27513E17513F11DF9877513FD1DFF8787A28787
A2888888A28888A28888147F884A6C197F497F010701F0193F011F01FC191F90B67EB86C
170F1D07A21D031D01775A76767BF581>I<F07FFF050FB512F8057F14FF0403B712E004
0FD9E00313F8DC3FFEC7EA3FFEDCFFF891380FFF80030301C0020113E0030F496E13F84B
48C9EA3FFCDB7FFC70B4FCDBFFF004077F4A49707F4A49707F4A49707F4A90CB6C7E4A48
727E4A48727E027F864A48727F4949727F49884949727F4B8449884949727FA24990CD6C
7E49884A8601FF89A24849747FA2488A4A86488AA24A86488AA2488AA24A86A2488AA448
8A4A86A5B51E80B16C6D501400A66C66A26E62A26C66A36C6D505BA36C666E626C66A26E
626C666E626C666D9AC7FC6F96B5FC6D646F606D646D6D4E5BA26D6D4E5B6D6D4E5B6D64
6D6D4E5B6F606E6C4E90C8FC6E6D4D5A6E6D4C5B6E6D4C5B6E6D4C5B02016D4C13C06E6D
4C5B6F6C4C90C9FC92261FFF80EDFFFC6F01E002035B030301F8020F13E06F01FE023F5B
9228007FFFE003B5CAFC040F90B612F8040316E0DC007F92CBFC050F14F8DD007F90CCFC
717E76F986>I<BB12F0F2FF801BF81BFE757E1CE0D8000702F0C814F801004A030F13FE
6E4903017F6E716C7F091F7F7513F0757F87757F757F89881E801EC0881EE0A37613F0A3
1EF8AA1EF0A45213E0A21EC0A2521380A21E00525AA2515B515B515B515B093F5B5190C7
FC50485A080F13F84FB55A93B912C051C8FC1BF81B8008F0C9FC04C0CDFCB3B3A94A7F91
B57E010714FEB912F0A665767BF575>I<BA12FEF1FFF01AFF1BE01BFC1BFFD8000702F0
C7000F14C001004ADA007F13F06E49030F13FC6E05037F08007F093F13C0757F757F757F
757F8789757F8AA2767FA38A88A28AA966A26466A26699B5FC9BC9FC6563515B65515B51
13C0515B097F90CAFCF3FFFC08035B080F13E0087F138096260FFFFECBFC93B812F01B80
50CCFCF2FFC004C0C7001F13F0070313FC9638007FFF747F080F13E0747F747F747F747F
888789757FA2757FA3757FA789A789A877EC0F80A387A377141F8721004A6D8291B56C73
5B010702FE70163EB900F06F6D137E88766D5B766D485A0A031403769038FC0FF0D06CB5
5A0B1F14800B0391C7FC9A38003FF8797A7BF57F>82 D<DB1FFF150E4AB500F0141E020F
02FE143E023FECFFC091B76C137E4904F813FE0107D9F80113FE49903A80001FFF014948
C7000313834948020013C3D97FF0ED3FE74948ED0FFF4849814A814890C97E488349177F
000F183F4848171FA249170F123F1907485A1903A2190112FFA21900A36D187EA47F1A3E
7FA26C7EA26E94C7FC806C7F8014FC6C13FF15C06C14F8EDFF806C15F8EEFF806C16F86C
EEFF806C17F86D16FE6D707E6D17E06D836D836D17FE6D836D6C83021F83020783140003
0782DB007F811607DC007F800507801700061F7F84180372148084857313C085A2851BE0
00788412F8A285A4857EA47E1BC0A27EA24F13807FA26D19006D5F626D170F6D606D171F
6D606D173F6E4C5A02E04C5A6E4B5BD9CFFC4B5BD987FF4B90C7FC018301E0EC1FFE0100
01FCEC7FFC48903B7FFFE003FFF8021F90B65A48010716C048010193C8FC6E6C14FC4802
0714F048DA003F90C9FC4B7E76F960>I<001FBF12F0A692C700039138C000014801E06E
4AD9000F13F802806E91C8120349C9170001F81C3F491C1F491C0F491C07A2491C03A290
CA1801A3007EF500FCA5007C1E7CA8481E3EA6CB1900B3B3B3AE4D80A2050714E0057F14
FE4ABB7EA66F757AF47C>I<B900F0020FB712FCA6D800074ACA000FECFC00010002F005
0114E06E49716C13806E49DE1FFEC7FC775A775AA2775AB3B3B3B21D07807061A31D0F6E
63A270181F80666E1A3F7096C8FC6E62826E1AFE701701037F616F6C4D5A1C076F6D4C5A
6F6D4C5A6F6D4C5A6F6D167F6F6D4C5A6F6D4B90C9FC706CED07FE706C6C4A5A040F01E0
EC7FF07001F849485A04019026FF801F5B7091B6CAFC053F5D050F15F8050115C0DD003F
91CBFC060113F0767A7BF581>I<B800FE0407B712C0A6D8001F4ACB6CECF000010302F0
060F91C7FC6D02C0060313FC6D755B7713E06E641E7F6E647097C8FCA26E1B7E821EFE6E
637018016E63821D036E63821D076E6370180F6E63A271171F6F62831D3F6F97C9FC715F
6F197EA27117FE6F61831C016F61831C036F617116076F61831C0F6F61841C1F70607215
3F7095CAFCA2725D70177E841CFE705F721401705FA2721403705F841B07705F841B0F70
5F73131F715E851B3F7193CBFC856371157E7313FE715DA2F1F801715D19FC1A03715DF1
FE07715DA2F1FF0F715D1A8F1A9F725C1ADF1AFF7291CCFCA2725BA3725BA3725BA2725B
A3725BA3725BA2735AA373CDFC7A7A7DF581>I<B800FC49B800FC0207B712C0A6D8003F
02FCC96C02F8C9003FECF000010702C0040F02C0040314806D4A7091CB49C7FC93CA6C49
725A6D7C5AA16C5A6D736377725A70828078607071191F6E9FC8FC8A7071616E213EA270
73177E6E217CA2704D7F6E69A299B57E6E6D545AA251807005F318036E690903807005E1
18076E690907807104C0180F6F68090F81714C6C171F6F9DC9FC8B714B486C5F6F1F3EA2
714B6F157E6F053E6D177CA271037E816F057C6D5FA209FC816F6D4B6D4C5AA208018271
4B6D16036F67080382714B6D16076F67080782724A6D160F70668C7249486E151F709BCA
FC8C7249C86C5D701D3EA2724971137E70033E6F157CA272017E8370037C6F5DA208FC83
72496F14017065070118FC06FE496F14037065070318FE06FF496F14077065070718FFDF
87C06F140F7164218FDFCF8070139F7199CBFCA207FFCA6C13FF7163A37149715BA37149
715BA34F837163A24F837163A24F837163A24F83067F62A24F187F063F97CCFCA296CC7E
72193EAA7A7DF5B1>I<003FB800C049B81280A6D8000303FCC8001FEDC000D9007F02E0
030702F8C7FC021F0280030114C06E91CA91C8FC4CEF7FFC6E6D606E626E6E705A525A6E
6E5F6F6D94C9FC1CFE6F7F6F6D4B5A515A6F7F6F6D4B5A515A6F7F6F4D5A724A5A6F8051
CAFC706D14FE707F505A706D1303706D5C505A706D130F706D5C505A70EC803F7002C05B
50CBFC716D5A715CF1F1FC7113FB6271EBFFF08362715C83627180727FA2727F727FA272
7FA2864E7FA24E804E80A2DEFE7F7F4D486C7FA24D486C7F4D486C7FA24D486C7F4D486C
7FA24D486C804DC7FC8805FE6E7F4C4880884C486E7F16074D6E7F4C486E7F161F4D6E7F
4C486E80167F94C98004FE707F15014C707F4B48707F15074C707F4B4882031F854C707F
4B5A037F718093CB805D4A48727F0203737F14074A6C727F023F874A6D4D7F49B56C4D7F
010F02F094B67E48B600FC040715F8B800C092B9FCA678767CF581>I<0007BC12F81CFC
A504C0C8001F13F803F0C94813F015804ACA4813E04813F802E094B512C04A4C14805C91
CA481400494D5B5B494D5B6149614F5B5B4F5B96B55A5B4E5C4E91C7FC5B4E5B121F4E5B
4E5BA290CA485B4E5BA295B55AA24D5CCA4891C8FCA24D5B4D5BA24D5B5F614D5BA294B5
5A4C5CA24C91C9FC4C5BA24C5BA24C5B4C5BA24C5B93B55AA24B5CA24B91CAFC4B5BA24B
5B4B5BA24B5B4B187C5F92B55AA24A5C4A91CAFCA24A4917FC4A4917F8A24A5BA24A5B4A
5BA291B5481601495CA24991CAFC1B03495B495BA24949EF07F0495B1B0F495B90B5181F
5D484A173F1B7F4891CB12FF48495F6248495F4849171F1A7F48494CB5FC071F14E04849
0303B6FCBDFCA57E567677F569>90 D[<B61280A748C8FCB3B3B3B3B3B3B3B3AEB61280
A7>25 172 109 256 48 I[<B61280A7C7123FB3B3B3B3B3B3B3B3AEB6FCA7>25
172 125 256 48 93 D<EDFFF8021FEBFF80027F14F00103B612FC499038803FFF90271F
F800077FD93FC0010113E049C87F01FEED3FF80001707E6D6C81486D6E7E6E80486D826E
80858385A3717F6C5B6C5B6C5B6D5A90CAFCA74CB5FC93B6FC151F4AB7FC020F14E0023F
EBF80091B51280010301FCC7FC010F13F04913C04990C8FCEBFFFE4813F8485B485BA248
5B485BA24890C9FC1BF8485AA3485AA25FA45FA26D5D127F5F6C6C923A1F3FF801F0A26C
6D143E6C6D913A7C1FFC03E06C6DD901F89038FE07C06C6D49486CB5FC6C01FC90260FE0
0714806C6CB46CB4486C14006D90B5C66C13FC010702FC6D5B010002F0EC1FC0020F0180
91C8FC4D4F79CC56>97 D<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3AEEF3FFC0403B5
12C0040F14F8043F14FE933AFFE01FFF80922783FE000313E0DB87F801007FDB8FE0EC3F
F8DB9F806E7E03BFC86CB4FC03FE6F7F4B6F7F4B814B6F7F4B834B707EA24B707E871A1F
87A21C80861CC0A31CE0A286A31CF0AE1CE0A3621CC0A31C8062A21C00A2505A636F167F
636F4C5AA26F4B5B6F4B5B02FE60DAFC7C4B90C7FC6FED1FFE4A6C6C4A5A6F6CEC7FF091
26F007F049485ADB03FC01075B9128E001FF807F90C8FC6F6CB512FC4A011F14F090C800
0714809326007FF8C9FC547A7BF760>I<923801FFF0031F13FF92B612E0020315FC020F
9038803FFE913B3FFC0001FF80DA7FF09038003FC0494848EC0FE04901806E7E4990C87F
4948151F49484B7E013F167F49484B7E49485CA2485B5A5C5AA248496E5B725A48715A72
5A4890CCFCA35AA35BA212FFAE127F7FA37EA36C7FA2F10F806C7FA26C181F6E17006C60
6C6D163E197E6C6D167C6D6C16FC013F5F6D6C15016D6C4B5A6D6D4A5A6D6D4A5A6D6DEC
3F806D01F802FFC7FCDA3FFEEB03FE913A0FFFC01FF86E90B55A020015C0033F49C8FC03
0113E0414F7ACC4D>I<1A7E95380FFFFE0503B5FCA6EF0003F0007F193FA2191FB3AE92
3801FFE0031F13FE92B612C0020315F0020F9038E01FF8913A3FFE0003FEDA7FF8EB007F
DAFFE0EC3F9F010349EC0FDF4949EC07FF4948C87E494881013F824948167F495A193F48
5B48181F5C5A485BA25AA291CAFC5AA35A5BA312FFAE127FA37FA27EA37E807EA27E806C
183F6C7F197F6C6D16FF137F6D6C5D6D6C4B7F6D6C5D6D6CDB0FDF7F6D6DDA3F9F13F06D
6DDA7F1FEBFFF06D01F0EB01FCDA7FFCEB07F8913A1FFF807FF0020790B512C002011500
DA003F01FCEDFC00030301C00280C7FC547A7AF760>I<923807FFC0033F13FC4AB67E02
0715E0021F01017F913A7FF8003FFCDAFFE0EB0FFE49496D7E0107496D7F4990C76C7F49
486E7F49488249486F7E01FF163F4A824849151F48845C48717EA2485B1A804883A24890
C9FCA21AC05A845BA312FF90BAFCA31A8049CCFCAA127FA27FA27EA36C7FF10380F107C0
7E6E160F7E6C6DEE1F80A26CF03F006C7F6E167E017F17FE6D6C5E6D6C4B5A6D6C15036D
6D4A5A6D6D4A5A01006DEC3FC0DA7FF802FFC7FCDA1FFEEB03FE913A0FFFC03FF8020390
B55A020015C0031F49C8FC030113F0424F7BCC4D>I<EE0FFC93B51280030314C0030F14
F092393FFC0FF892397FF007FC9238FFC00F4A9038801FFE4AEB003F4A48EB7FFF140F4A
5A4A5AA24A5AEF3FFE14FF4BEB1FFC49ED0FF8EF03E094C7FC5D5BB3A8B812F8A6D80003
01C0C8FCB3B3B3A5497F81013F13FE007FB712E0A6387A7BF935>I<F2FF80070713C0DB
1FFE021F13E04AB500E0017F13F00207913AF801FF83F8021F9139FE03FC07913D7FFC0F
FF87F00FFC9126FFE001EBCFC00103903B80007FFF801F4990C7393FFE000F49486E5A49
486E6C14F8013F7013074A6EEC03E0017F71C7FC49486E7FA24884A248496E7FA34884AB
6C60A36C6D4A5BA26C60A26D6C4A5B013F94C8FC6E5C011F5E6D6C4A5A6D6C4A5A496D49
5A499039E001FFC091267FFC0F5BD93E1FB548C9FC020714F8D97C0114E09126001FFECA
FC92CCFC13FCA67FA27FA280EB7FE014F86DB77E18FE6DEEFFE019F86D17FE6D717E6D84
1AF0010F84013F84D9FFF0C8FC48018003077F4890CA6C7ED807FC171F48480507138048
4883003F7213C04983127F49F07FE0A2485A1A3FA66D187F007F1AC0A26C6CF0FF806D5F
001F1A006C6C4D5A6C6C4D5A6CB4EF1FF86C6D4C5A6C01E0EEFFE0D97FF803035BD91FFE
030F90C7FC90260FFFC0EC7FFE010301FE90380FFFF8D9007FB712C0020F4BC8FC020115
F0DA000701FCC9FC4E727BCD56>I<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3AEEF1F
FE94B512E0040714FC041F80933A3FE01FFF8093267F00037FDB81FC6D7FDB83F06D7FDB
87E0147F4C81DB8F806E7E039FC8FC03BE151F03BC8215FC5D4B150F865DA35DA45DB3B3
A6496D4B7FA2017F01F892B512F0B7D8FC01B712F8A655787AF760>I<EB07E0EB1FF849
7E497E90B5FC4880A86C91C7FC6D5A6D5A6D5AEB07E090C9FCB3A4EC1F8048B5FCB6FCA6
C6FC131F7FA27FB3B3B3497FA2017F13F0B712F8A625747BF32F>I<EC1F800003B5FCB6
FCA6C6FC131F7FA27FB3B00503B612FCA605001580063F01F8C7FC1AE07213804FC8FC19
F84E5A19C04E5A4EC9FC4D5A4D5A4D5AEF0FE04D5AEF7F804DCAFC4C5A4C5A4C5A4C5A16
1F163FEEFFF803817F158303877F038F7F039F80EDBF9FDBFF0F7F4B6C7F15FC4B6C7F4B
6C7F4B7E4B8092C76C7E717EA2717F717FA2717F717F8385717F727EA2727E727FA2727F
727FA2727F8686496D824E6D7E017F01F04A14E0B700F890B712C0A652787BF75B>107
D<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3B3B3B3B3A9497FA2017F13F8B712FCA626
787BF72F>I<023FDA1FFEEE3FFC0003B591B500E04AB512C0B6010702FC020F14F8041F
6E023F8093283FE01FFF8090397FC03FFF93267F00036D9026FE00077FDB01FC6D9026E0
03F86D7FDB03F06D9026F007E06D7FC64A48027F49487F011F4A03F849816D49486E6C48
C86C7E4BC8143E6D013E031F49153F033CDCFE7882037C17F84B705A4B6F49151F8C4B5F
A34B5FA44B94C9FCB3B3A6496D4B6D4B7EA2017F01F892B500F04AB512E0B7D8FC01B7D8
F803B712F0A6844C7ACB8F>I<023FEC1FFE0003B591B512E0B6010714FC041F80933A3F
E01FFF8093267F00037FDB01FC6D7FDB03F06D7FC64A48147F011F4A816D49486E7E4BC8
FC6D013E151F033C82157C5D4B150F865DA35DA45DB3B3A6496D4B7FA2017F01F892B512
F0B7D8FC01B712F8A6554C7ACB60>I<EEFFE0031F13FF037F14C00203B612F8020F9038
803FFE913A1FFC0007FFDA7FF0010113C0DAFFC06D6C7E49496E7ED907FEC8EA0FFC4948
6F7E49486F7E013F844A8149486F7F01FF844849707EA24849707E4885A24890CA6C7EA2
4885A3481A804983A2007F1AC0A500FF1AE0AD007F1AC0A46C6C4D1380A36C1A00A36C6D
4C5AA26C616E167F6C616C6D4C5AA26C6D4B5B017F606D6C4B5B6D6C4B90C7FC6D6C4B5A
6D6C4B5A6D6D4A5A6D6D4A5A9026007FF0903801FFC0DA3FFC01075B91280FFF803FFEC8
FC020390B512F8020015E0031F91C9FC030113F04B4F7BCC56>I<DA1F80EB3FFC0003B5
0103B512C0B6010F14F8043F14FE933AFFE01FFF80922783FE000713E0DB87F801017FDB
8FE06D6C7EC6DA9F806E7E011F01BFC86CB4FC6D01FE6F7F4B6F7F6D5B4B6F7F4B6F7F4B
83854B83747EA2747EA21C80861CC0A2861CE0A57413F0AE5013E0A41CC062A21C80A262
1C006263505A814F5B6F5F616F5F6F4B5B4F5B6F4B90C7FC03BE4B5ADB9F804A5ADB8FC0
ECFFF0DB87F001035BDB83FC010F5B922781FF807F90C8FCDB807FB512FC041F14F00407
14809326007FF8C9FC94CBFCB3A4497FA2017F13F8B712FCA6546D7BCB60>I<922601FF
E0143E031F01FE147E92B67E020381020F9026E01FF013FE023F90380003F8DA7FFCEB00
FCDAFFF0EC7E01010349141F4949EC0F834949EC07C34990C813E34948ED03E74948ED01
F701FF17FF4A815A4849167FA24849163F5A5C48181F5CA25AA291CAFC5AA4485AAE6C7E
A47EA280A27E807EA26C6D163FA26C6D167F7E6E16FF6C5F6D7E6D6C5D011F5E6D6CED0F
DF6D6DEC1F9F6D6DEC3F1F6D6D14FE6D01F8EB01FCDA3FFEEB0FF8913A1FFF807FE00207
90B512C002011500DA003F13F8030313C092C9FCB3A44F7EA24EB512E00503B712F0A654
6D7ACB5B>I<023FECFF800003B5010713F0B6011F7F4C13FE9338FF83FF923801FC0792
2603F00F1380DB07E014C0C64B5A011FEB0F806DEB1F00151E6D133E153C037C6D138003
786D130003F86D5A4B6D5A94C8FCA25DA35DA65DB3B3A2497F81017F13FCB87EA63A4C7C
CB43>I<91260FFF8013E049B5EAF8030107ECFE07013FECFF8F90267FF80013DF2601FF
80EB1FFF4848C71207D807F8140148488049157F4848153F4848151FA2007F160F90C9FC
A2481607A317037FA27F7FA213F86C6C92C7FC13FF14E06C13FEECFFF06CECFF806C15F8
6C15FF6C16C06C16F06C826D81011F816D8101031680D9007F15C0020715E0DA003F14F0
1501DB001F13F81603040013FC0078167F00F8163FEF1FFE170F6C1607A21703A26C1601
A37EA26D16FCA26D150318F87F17076D16F06DED0FE07F6DED1FC06DED7F80D99FC09038
01FF00D90FF0EB07FE26FE07FEEB7FF8486CB65A48C615C048013F49C7FC48010313E037
4F7ACC44>I<EC03E0A81407A5140FA4141FA2143FA3147FA214FF5BA25B5B5B5B137F48
B812E0120FB9FCA4D8000101E0C8FCB3B3187CB06D16F881A3027FEC01F081143F6FEB03
E0141F6E6CEB07C06E6CEB0F806E9038801F006EEBE07F6EEBFFFE033F13F8030F5B0301
1380366C7DE943>I<DA1F80163F0003B50307B5FCB64AB6FCA6C6EE0001011FEE003F6D
83A26D83B3B3A661A461A36D5FA296B5FC816D5EDE03EF7F6D17CF6F020780027FDB0F8F
13F86E6CDA3F0FEBFFF86E6C147EDA0FFEEB01FC913A07FFE00FF86E90B512E0020015C0
031F0200ECFE00030101F002C0C7FC554E7ACB60>I<B700F049B612F0A6C66C01FCC800
1FEBFE00011F01F06F13F06D49030313C06D495F7390C7FC6D606F5E7F62816D606F1503
027F5FA26F1507023F5F6F150F021F5FA26F151F6E94C8FC705C6E163EA270147E6E167C
7014FC6E5EA27013016E5E82037F4A5AA2701307033F5DA270130F031F5D70131F6F92C9
FCA2715A6F143EEFC07E6F147CA2EFE0FC6F5C17F16F5CA217FB047F5B17FF705BA3705B
A27090CAFCA3705AA2705AA3705A705A544C7DC95B>I<B7D8E03FB600E090B612F8A6C6
02F8C76C01F8C7000F1480013F01C0021F01C00203EBFC006D496E496E13F06D70705B78
5A72607F6F6E71C7FC6D841E7E6F6E7F6D1C7C606F7015FC6D4C5FA26F701401027F4B5F
19DF6E6C704A5A180F078F15076E6C705D181F0707150F6E6C705D183F70D93E03151F6E
7291C8FC187E70D97C015D6E72133E18FC70496C6D137E6E1A7C4D48137F04F07013FC6E
02035F4E133FDB7FF870485A17074E131FDB3FFC70485A170F4E010F1307DB1FFE04FE5B
171F95C70007130FDB0FFF04FF5B5F05BE6E131F6F069FC9FC17FE4D6E13BF6F18FE4D80
A26F604D157FA26F604D153F047F5FA24D151F043F5FA24D150F041F5F70C96C5A754C7D
C97C>I<007FB600F0010FB612E0A6D8003F02800103ECF800010749C76C148001017049
C7FC6D4916F8027FEE7FE06F4B5A023F5F6E6C93C8FC6E6D5C6E4B5A705C6E6D495A6E6D
495A6E150F6F6C495A705C6F6C49C9FC6F6C137E6F14FEEF81FC6FEBC1F86FEBE3F06FEB
E7E017FF6F5C705B7090CAFCA282707F82707F4C7F4C7FA24C7F4C6C7E4C6C7E9338FE1F
FF4C7EDB01F8804B486C7F03076D7F4C7EDB0FC0804B486C7F033F6E7E4BC7123F037E81
4B6E7E4A486E7F0203814A486E7F020F834A486E7F023F6F7F027F8302FF167F01038401
0F94B5FC013F6D17C00003B56C020314F8B600FE021FECFFFCA6564A7EC95B>I<B700F0
49B612F0A6C66C01FCC8003FEBFE00011F01F0030F13F06D49030313C06D495F7390C7FC
6D6D5E627F6F5E7F626F1503027F5F6F1507023F5FA26F150F021F5F6F151F6E94C8FCA2
705C6E163E70147E6E167C8219FC6E5E7013016E5E701303037F5DA2701307033F5D7013
0F031F5DA270131F6F92C9FC715A6F143EA2EFC07E6F147CEFE0FC6F5CA217F16F5C17FB
047F5BA217FF705BA2705BA37090CAFCA2705AA3705AA2705AA25FA216035F16075FA216
0F5F161F94CBFCA25ED807C0143ED81FF0147E486C147C487E16FC486C5C15015E4B5A15
07495C007F4A5A49131F4949CCFCD83FC0137E6C485B9038C003F8390FF80FF00003B55A
6C14806C6C48CDFCEB0FF0546D7DC95B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr7 14.518 4
/Fm 4 52 df<4AB47E021F13F891B6FC49810107010013E0D90FF8EB1FF0D93FE0EB07FC
49486D7E4A130149C87E4848ED7F804848ED3FC0A24848ED1FE0A2000F17F0A24848ED0F
F8A3003F17FCA3491507007F17FEA600FF17FFB3A4007F17FEA56D150F003F17FCA4001F
17F8A26D151F000F17F0A2000717E06D153F000317C06D157F000117806C6CEDFF006E5B
6D6C495AD93FF0EB0FFC6D6C495AD907FFEBFFE06D90B55A010092C7FC021F13F8020113
8038527ACF45>48 D<15F014011403140F143FEB01FF130F0003B5FCB6FCA2EBFE7F13F0
EAFC00C7FCB3B3B3A64A7E010313FEB812F8A52D5073CF45>I<EC1FFE49B512E0010714
FC011F14FF017F819026FFC03F13E02701FE00037FD803F801007F48486E7ED80FC06E7E
48486E7E90C86C13804881003E6F13C0127ED87F806E13E013E0487E7013F07FA56C5AA2
6C5AEA0F80CAFC4C13E0A34C13C0A218805E4C13005F4C5AA24C5A4C5A5F4C5A4B5B4B90
C7FC4B5AED0FF84B5A4B5A4B5A4B5A4A48C8FC4A5A4A5A4A5A4A5ADA3F8014F04AC8FC14
FE4948EC01E0495A495A495AD91F80140349C8FC017E16C04915074848150F48B8FC5A48
17805A5A5AB9FCA21800A3345078CF45>I<91380FFF8091B512F8010714FF011F15C090
263FF8037F903AFF80007FF8D801FCC7EA1FFCD803F06E7E48486E7E491680D80FF8806D
16C0486C806D16E0A66C5A6C5A6C4816C06C485CC9FC18805E1800A24C5A4C5A5F4C5A4C
5A4B485A03075BDBFFFEC7FC91B512F816E016F816FFDA000313C003007FEE3FF8707EEE
07FE837013807013C018E0A27013F018F8A2177F18FCA3EA1FE0487E487EA2487EA218F8
17FFA218F05B6C484A13E05BD83F804A13C04C13806C6C16006C6C4A5AD807F8EC3FFC6C
B4ECFFF86CD9F8035B6C90B65A013F1580010F4AC7FC010114F0D9001F90C8FC365279CF
45>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi8 16.592 1
/Fn 1 60 df<EA07E0EA1FF8487E487E7FB5FC1480A414C07EA27EEA1FFBEA07E3EA0003
A413071480A4130F14005BA2131E133E5BA25B5B1201485A485A485A48C7FC123E123C12
18122B748F29>59 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr8 16.592 3
/Fo 3 52 df<153C157E15FE14031407141F14FF130748B5FCB6FCA2141F13F8EAFE00C7
FCB3B3B3B04A7E4A7F49B512E0007FB81280A5315C73DB49>49 D<913807FFC0023F13FC
49B67E010715E04915F890263FF80713FE903A7FC0007FFF49C7001F7FD801FC6E7F4848
02037FD807E06E7F48486E7F844848157F90C96C7E5A003E707E127E007C1880D87FE081
487E7F19C06D81A66C5A6C5A6C485DEA0780CA1480A25F1900A24D5AA260177F604D5A5E
604C5B4C5B95C7FC4C5A4C5A4C5A5F4C5A4C5A4B5B4B90C8FCED07FC4B5A4B5A4B5A4B5A
93C9FC15FE4A5A4A5A4A5A4A48EC07C04A5A4A5A4AC8EA0F8014FC495A495A495A494815
1F4948160049C9FC017E5E495E48B9FC5A5A485F5A5A5AB9FCA260A33A5C79DB49>I<91
3801FFF0021F13FF91B612E0010315F8010F9038007FFED91FF0EB0FFFD93FC06D7F49C7
00017F01FE6E7FD801F88248486F7E4982D807FC153F01FF828048836E80A66C495C6C90
C8FC6C485E6C5A90C9FC4D5AA34D5A60A24C5B4C5B604C90C7FC4C5A4C5AEE7FF8923801
FFE0033F5B023FB5C8FC16F816FF17E091C7EA7FF8EE1FFE933807FF80707F04007F8471
7E717E84717E19808319C0A219E0A28319F0A2EA07C0EA1FF0487E487EA2487EA319E05F
A25B6C4817C05B494B1380003EC9FC003F4C13006C6C5E6D4B5A6C6C15FFD807F85E6C6C
4A5B6CB46C010713C06C01E0011F5BD93FFF017F90C7FC6D90B512FC01075D010115C0D9
003F91C8FC020113F03C5F7ADB49>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmss12 24.888 19
/Fp 19 122 df<B51280B1120314005AA25BA3485AA35B121FA25BA3485AA35BA2127F5B
A312FF112B6D9038>44 D[<B500C04FB51280B3B3B3A891BEFCAD02C0CC1201B3B3B3AE>
105 143 110 270 142 72 D[<95380FFFFCB3B3B3B3B3B3AA60A21AF86012101238003C
4D13F0003E94B5FC003F5E01C04B14E06D5DD87FF84B14C001FE153F6D6C91B6128002F8
1307DAFFF7B7120092B75ABAFC61616C60001F18C0000760C695C7FC013F16FC010716F0
010016C002074AC8FCDA001F13C0>70 147 120 270 95 74 D[<B600C096387FFF8081
A281A281A281A281A281A282A26E7FA26E7FA26E7FA26E7FA26E7FA28280828083808381
8381838183818381838183A26F80A26F80A2707FA2707FA2707FA2828482848284828582
85838583858385838583858385838683868486848684868486A2727FA2727FA27280A272
80A2737FA285878587858785878587851C80851CC0861CE0861CF086A27413F8A27413FC
A27413FEA27413FFA27491B5FCA287A287A287A287A287A287A287>105
143 110 270 142 78 D[<F1FFFC061FEBFFE04DB612FE050FEDFFC0053F16F094B812FC
040317FF040F18C0043F18F04C844BBA12FE4B85030F1AC04BDB8007814B02F8C76C804B
02C0020F8092B6C80003804A02FC0300804A02F0043F7F4A4A70804A02800407804A91CA
6C804A4971804A4971804C8491B548727F494A727F494A727F4C844991CC6C804B85498A
494973804B86498A4B864949747FA290B548747FA2484A747FA24891CE6C7FA348497514
80A348497514C0A348497613E0A34A884820F0A448497613F8A7B5487613FCB3A26C6D52
13F8A66C20F06E64A46C6D5213E0A46C6D99B512C0A36C6D511480A36C6D0303B56C4A14
00846C6E714A5B72806F6F6D5C6C676F6F6D5C6D716D5E6F626D716D5E6F6F6D5C6D6D72
90B55A6D71606F6F6E5A6D6D6F6E485C6D6E714891C7FC706F5C6D7201F85C6D6E71485B
706F5C6E6D6F6D485B6E01FE94B65A6E6D6F5E6E6E6E5E6E02E0616E6E6E93C8FC6E02FC
6E5D6E02FF606F02C06E5C6F02F85F6F9126FF8007B65A6F92B85A030397C9FC6F868104
3F85040F8582040185DC003F84050F840501EDFE3FDD001F02E08006009026FC001F7F96
C87E76808B7680888B7680777FA2777F777FA2778077808C8977808C89787F8C787F>
126 173 117 274 149 81 D[<4CB5FC043F14FE4BB712E0030F16FC033F16FF92B912E0
020318F84A18FE021F727E4A19E04A8591BBFC1303496249ED800104F0C7120F4902C014
014991C9123F4901FC160F90B500F004035B4B82484AEE007F4B173F4891CB120F4A1807
4849725A4A1801481A004A96C7FCA2485BA4485BA980A36C7FA280A26C7F80A26C7F8115
E06C80816C14FE6C6E7E16F06D14FE6DECFFE017FE6DEDFFE06D16FE6DEEFFE06D17FC6D
17FF6D18C0023F17F06E17FC6E17FF0203840200846F17F0030F83030383DB007F820407
82DC007F821707DD007F81060781060081191F07078007018085747F86080F7FA2867414
8086A27414C0A287A2871DE0A387A91DC063A400105013801218001C97B5FC003E1C0000
3F617F01E04E5B6D6001FC4E5B486C606D6C4D5B02E04D5B02F894B5FC02FE04035CDAFF
C04B5CB600F8031F5CDBFF8091B6FC04FE010F92C7FC6C92B85A001F626C6200031AE0C6
62013F61010F4EC8FC010360D9007F17F0020F17C0020194C9FCDA003F15F8030115C0DB
000701F8CAFC>91 151 119 274 112 83 D[<001FBE12F8A91EF0A21EE0A2CE000314C0
511480631E00515B6365515BA298B55A505CA2505C62655091C7FC6264505B626497B55A
A24F5C4F5CA24F5C6199C8FC4F5B61634F5B96B5FC634E5CA24E5C4E5CA24E91C9FC6062
4E5B606295B55A5F624D5CA24D5C4D91CAFCA24D5B5F614D5B94B5FC614C5C5E614C5CA2
4C91CBFC4C5BA24C5B5E6093B55A5D604B5C5D604B91CCFCA24B5B4B5BA24B5B92B5FC5F
4A5C5C5F4A5C5C94CDFC4A5BA24A5B4A5BA291B55A5B5E495C5B5E4991CEFC5B5D495BA2
495B90B55AA2485C5A5D485C5A92CFFC485B4890BD12FCA25AA2BFFCA9>102
143 117 270 124 90 D<923803FFF092B6FC020F15E0023F15F849B712FE010782011F
17C0017F8348B97E48848585859226F0001F148092C7120302F86E14C06C01E08002806F
13E049C96C13F001F88201E0824918F84982CB14FCA284A37213FEAF051FB5FC041FB6FC
0303B7FC153F4AB8FC140F147F49B9FC13075B133F49EDE00190B6EAF8004892C7FC4814
F84814C04891C8FC4813FC4813F05C485B5C91C9FCB5FC5BA6607F606C7F606E5D6E157F
6C01F892B5FC6E140302FF141F6CDAF001B6FC92B8FC7EA27E6C17FD6C17F118E16C1781
013FEDFC016D15F06D1580010302F8C9FC9026007FFCCAFC476177DE61>97
D<933807FFF8047FEBFFE00303B612FC031F15FF037F16E04AB812F84A83020F17FF4A18
C04A18E05C91BAFC4919C0499138FC000F4902E0EB007F490280140F4949C812034901F8
15004949EE3F804B161F90B5481607484A160392CBFC48491800A2485B5C5A5CA2485BA3
485BA3485BA591CDFCB5FCAE6C7FA5807EA2807EA2807E807E807E6E18206C6D18606FEE
01E06C6E16036D6D160F6F163F6D6D16FF6D01FE030313F06D6D6C141F04E091B5FC6D02
FC131F6D91B8FC7F7F023F18E06E18806E1800020317FC6E17F06E6C16C0031F4BC7FC03
0715F003001580040701E0C8FC4C6179DE5A>99 D<EE1FFC0303B512C0030F14F8037F14
FE4AB77E4A16E0020F824A16FC4A8291B9FC498449845B49DAF00780DC8000804949C712
3F4901F8020F7F49496E7F4B140190B500806E7F4891C9127FA24849707E4A8248491880
85485B7313C05C48845CA2484918E085A24890CAFCA291BAFC1BF0A3BCFCA849CDFCA712
7FA27FA36C7FA3807EA2807E806C7FA26C7F6E18406C6D18C06F16036C6E16076D6D161F
6F167F6D6DED01FF6D01FE030713E06D6D6C143F04E049B5FC6D02FC133F6D91B8FC7F7F
6E18C0021F18006E5F020317F86E17E06E6C1680031F03FCC7FC030715E0030092C8FC04
0713C04C6179DE5A>101 D[<EF3FFF0403B512F8041F14FF167F4BB7FC5D150F5D5D5D92
B8FC5C5CEFE0034A91C7123F4A01FC140704F014004A5B5E4A5BA24A90C9FCA25D14FFA4
5BB3A7B912F0ACD8000149C9FCB3B3B3B3A8>64 145 123 272 62
I<DC7FF0EEFF800307B5153F033F02E00107B5FC92B600F8133F0203DBFE01B612C04AED
FF074A16BF023F93B7FC5C91BCFC491BE05B49ECC01F9226FE000302F0C8FC4901F80100
148049496E7F4B8049496E7F4B80498492C87E49486F7FA348496F7FA448496F7FAC6C6D
4B5BA46C6D4B5BA36D6C4B5B6F5C6D606F5C6D6D4A5B6F5C6D6D91B55A6D01FE010391C9
FC499038FFC01F93B65A495F61495F6149178002F793CAFCD9FFE35D02E015F8033F14E0
DAC00791CBFC9238007FF04892CDFCA680A27E8080806DB4FC92B77E6D17FF1AF06D18FE
747E6D19E01BF8013F85498590BCFC48874887488792C80001814801FCED000F4801F004
01804AEE003F4849050F7F864A717F488591CBFC86B5865B87A66D96B5FC6C636E5FA26C
6D4D5B6E5F6C6D4D5B02FC173F6C01FF94B55A6C02C003035C03F0150F6C02FE037F5C6C
DAFFF0010FB65A6C6C91B848C7FC6D616D616D61010319C0010096C8FC023F17FC020F17
F0020317C0DA003F03FCC9FC030715E0DB001F01F8CAFC5B897ADD65>I[<B5FCB3B3AD93
3803FFC0047F13FC4BB67E030F15E04B81037F15FC4AB77E4A824A17805C4A17C04A17E0
5C9127FFFE003F14F003F8130703E0010014F803808092C87E4A6F13FC4A81845CA24A6F
13FEA25C845CA35CA591C9FCB3B3B3A5>71 143 112 270 104 I[<B512C0B2C8FCB3AD
387FFF80B3B3B3B3B3A2>18 141 114 268 47 I<933803FFC0D8FFFE027F13FC4BB67E
030F15E04B81037F15FC4AB77E4A824A17805C4A17C04A17E05C9127FFFE003F14F090B5
00F8130703E0010014F803808092C87E4A6F13FC4A81845CA24A6F13FEA25C845CA35CA5
91C9FCB3B3B3A5475E70DD68>110 D<933803FFC0047F13FE0303B612C0030F15F0033F
15FC92B8FC020317C04A83021F17F84A834A8391BAFC4985494AC66C804902E001078049
02800101804949C86C7F4901F8031F7F4B8149496F7F90B5486F7F4B814891CA14804A83
48497113C0481BE04A834A83481BF04A83481BF8A24A83481BFCA24A83A2481BFEA391CC
FCA2B51AFFAD6E5FA26C1BFEA36E5FA26C1BFCA26E5F6C1BF8A26E5F6C1BF06E5F6C1BE0
6E5F6E5F6C1BC06C6D94B512806F5D6C6E4B14006F5D6D6D4B5B6D01FC033F5B6D6D4B5B
6F6C49B5FC6D02F0010F5C6D02FE017F5C6D91B85A6D616D96C7FC023F17FC6E5F6E5F02
0317C06E5F6E6C4BC8FC031F15F8030315C0DB007F49C9FC040313C058617ADE65>I<B5
933801FFFEB3B3B3AC60A360A260A260606E5D95B5FC6C6D5C17076E141F02F8147F6C90
26FF8003B6FC92B8FC18FD6C17F16C17E118816C17016C16FC6C16F06C1680013FECFC00
010F02C090C8FC010101F8CAFC475E70DB68>117 D<263FFFE00503B5FC6E616C6D5F6C
6D4D5B6C6D4D5B6C636C6D4D5B6F5E6C6E93B55A6D6D606D4D91C7FC6D6D4B5B6D6D5D6F
4B5B6D6D5F6D4D5B6D6D4B5B6D6E4A5B6E7F7091B55A6E4B91C8FC6E6D495B6E6D5D6E6D
5B6E6D495B4E5B6E6D495B6E02805C6F6D5A6F6DB55A6F01E191C9FC05F15B6F01FB5B6F
90B5FC6F5D6F5D6F5D61705C827091CAFC705B705B6082A24C7F4C7F4C7F4C80A24C8093
B67E4B814B01FB7F4B01F17F17E14B01E07F4B496C7E4B496C7F4B824D6C7F4B487F4A49
6D7F4A834A496D7F4C6D7F4A6F7F4A5B4A496E7F4A496E7F737F91B5C88049496F7F4949
8149717F4B8349496F7F4971804949707F495B90B548707F747F4891CA6C7F4849854849
717F48854A717F48491A80487314C048497213E0B5487213F05C5C80DB5D>120
D<B56C943803FFFCA26C6D4D13F8A26C4F13F080A26C6D4D13E0A26C6D5F1CC07E6E4D13
80A26C7F97B512007E6E5E636C804F5B7F816D4D5B814F5B7F816D4D5B81A26D4D5B816D
616F5DA26D96C7FC6F92B5FC6D60606E7F62705B80626E6D5B62A26E6D5B628070495B80
A2705D6E5DA26E6D92C8FC60616F7EA26F4A5A836F5D1781A26F01C15BA28105C35B17E3
6F5DA28105E75BA26F01F790C9FCA2167F60EE3FFFA260826082A26082A2705BA24C5BA3
4C5BA24C90CAFCA34C5AA2167F5FA24C5AA34B5BA24B5BA25D5F5D5F5D000C4A90CBFCD8
0F805B9039FC01FFFE90B6FC5E5E7E5E5E5E5E93CCFC5D5DC614F00107138056867DDB5D
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx12 35.8387 17
/Fq 17 120 df[<F803F8567E56B4FC6856138022C068A29DB5FCA267A2228067220067
69A267696769A267696769A29CB5FC696669A2669EC7FC6668A266686668A266686668A2
9BB5FC686568A2659DC8FC6567A26567656765A26765679AB5FC67A26467649CC9FCA264
666466A264666466A2646699B5FC66A26366639BCAFCA263656365A263656365A2636598
B5FC65A26265629ACBFCA26264626462A26462646264A297B5FC646164A26199CCFC6163
A261636163A261636163A296B5FC636063A26098CDFC6062A260626062A260626062A295
B5FC625F62A25F97CEFC5F615FA2615F615F61A25F6194B5FC61A25E615E96CFFCA25E60
5E60A25E605E60A25E6093B5FC60A25D605D95D0FCA25D5F5D5FA25D5F5D5FA25D5F92B5
FC5FA25C5F5C94D1FC5CA25E5C5E5C5EA25C5E5C5EA291B5FC5E5B5EA25B93D2FC5B5DA2
5B5D5B5DA25B5D5B5DA290B5FC5D5A5DA25A92D3FC5A5CA25A5C5A5CA25A5C5A5CB5FCA2
5CA25CA291D4FC7E6C5AA2EA0FF86C5A>130 297 110 350 167
47 D[<B60603B500FC4BB500FE0607B512F892BC96BDFCACC800014CD0000304FCC9FCB3
B3B3B3A697C4FCAD50D01203B3B3B3B3AFBF00FC4BBF12F8AC92CB000351CB1207>237
204 116 331 262 72 D[<C312F0FAFFF8FBFFC0A112FEA1EAFFC0A113F8A113FFA114E0
A114F8A114FEA16E7EA115E0A115F8C94CCB6C830F0017FF100783100017E0113F82110F
82110382110082A16C81A1001F82A16C82A16C82A16C82A17EA183A16C82A16D81A2A16D
81A2A11880A17FA118C0A2A16D16E0A2A118F0A3A118F8A17FA2A118FCA5A118FEAEA118
FCA5A118F8A3A15BA118F0A3A118E0A2A14916C0A2A11880A15BA11800A1495DA2A190B7
5AA15FA15AA1485EA15FA1485EA1485EA1003F93C7FCA1485DA1B75A11035E110F5E113F
16C058B85A100F94C8FC9FB812FC0F7F17F097C05AA11580A14AC9FCA114F0A114C0A149
CAFCA113F0A11380A100F8CBFCA1CCFC23C098D5FCB3B3B3B3A6C0FCAC0380CA1201>
199 204 117 331 229 80 D[<4EB500F0F01FC0067FDAFFE0173F050FB700FE84057FDC
FFE0167F0403B900FC16FF041FDEFF805C047F07E05C0303BB00F85C4B08FE5C031F746C
5B037F09E05B92BD6C5B02039326C0003F03FC90B5FC4A03F0C86C6E5A4A03800307ECFF
834A02FCCA15C3027F02F0051F14E791B600C0050791B6FC494B17014CCC7E494A191F49
4A1907494A85494A19004C86494A864991CE7E8B90B54887488A4B87488A4B88488B8C48
5C8CA2488B4B88A2488BA28CA2488CA38D81B6FC8DA2818DA281A26F89A2818282828D82
16FC6C8170765B17C07198C9FC17F86C16FE717E18F018FE6CEFFFF0F1FF801AF86CF1FF
C01BFC6CF2FFE01CFE6CF3FFF01DFF6C1DF81EFF6C1EE06D1DFC1FFF6D1EC06D1EF020FC
6D8A6D787E6D8B6D1FF06D8B8D6E8A021F8A6E8B6E1FE0806E8B6E6C8A6F8A6F8A03078A
03018B6F7E041F8A04078A1601DC003F89050789EF007F060788F0003F070187F1001F08
00861B0FE1007F19801C07F4003F0B0318C0F5007F1E0F0C0317E01E008B1F1F7916F08B
8B1F008CA112F88CD83FF08A007F8B487E8C8CA28CA38CA27F8DA46D7914F0A47FA2A112
E080A280A112C0698080A11280809EB6120080806E535C816F525CA203F0676F646F525C
6F676F6C6370515C04F0515C7098B6FC04FE5092C7FC706C4F5C05E04F5C05F8071F5C05
FF4F5C06E095B65A02FC03FC05035D4A6CDAFFE0041F5D6F03FF93B7C8FCDAF00F04FF02
1F5DDAE00394B95A4A6C1DF04A6C6C6491C7001F1C8049020351C9FC4902001BF849031F
1AE04903031A8049DB007F06FCCAFC49040718E049DC007F94CBFC007F060116F090CC00
0102F8CCFC>149 210 110 334 186 83 D[<B500F84DB698267FFFE0923801FFFC91BD
9AB9FCACC8001F04F8D2000304FCC7FC6F70E5000702FCC8FCA1DD007F13E0747B5B6FA1
5EA1606F70A0C9FCA26F71565AA275676FA15DA15F707069A27070555BA2756770A15CA1
5F707069A15F707069A270705590CAFCA2769BB5FC70A15BA15E707167A27170535BA276
6571A15AA15E717067A27170535BA27170535BA2766571A1CBFCA193B5FC717165A27171
515BA27763726AA15D727065A27270515BA27763726AA15D727065A272705190CCFCA272
71505AA278617269A15C737063A273704F5BA278617368A15C737063A273704F5BA27861
739DCDFCA191B5FC737161A15B737161A274704D5BA2795F7466A15B747061A274704D5B
A2795F7466A15B747096CEFCA274714C5AA274714B5BA27A5D7564A15A75705FA275704B
5BA27A5D7564A15A75705FA275704B90CFFCA27B91B5FC75636B75715DA27670495BA276
70495BA27B5B76626B76705DA27670495BA27B5B7697D0FCA0B5FC76715BA27605C15BA2
22E3776022E77704F75B9FB5FC7760A27760A37760A27795D1FCA2775FA3775FA2785EA2
785EA2785EA3785EA2785EA27893D2FCA3785DA2785DA2795CA3795CA2795CA2795CA279
5CA37991D3FC795B795BF83FF0>238 207 121 331 253 86 D[<067FB512F094B812E0
041F17FF93BA12F0030719FE033FF1FFC092BC12F002031BFC020F1BFF4A1CC04A9226E0
000316F04A02E0C8003F8191B548C9000715FE496E040181716F82496F043F81496F7081
7170814974817170817681498671867781A277818D898D898DA26D5D77816D5DA26D5D8D
6D4B836D5D6E91CBFC021F13FC020713F0020113C091CEFCAD1D0F093FB8FC97BAFC193F
060FBBFC95BCFC170F94BDFC1607043FEFE0034BB8EAF00003074CC7FC033F16E092B748
C8FC020316F0020F16C04A93C9FC027F15F891B712E0495E010793CAFC495D4915F8495D
495D90B75A5F4893CBFC485D5A5E485D5A5E5A5EA25A5EA3B7FC5EA265A465A37060A26C
6482F57FBF6C1CFF704D133F6C6F5F1DFE6C6F050F8270DD1FFC826C6FDD3FF816E06C70
DC7FF016F86C04E0DB01FF6DEDFFE06C70030701E0EFFFFC6D03FC031F01C018FE6D03FF
037F496C17FF6D04C00103B512006D04FC013F01FC7F010393B7487F6D507F6D6C07C07F
021F4F143F02034EC8120FDA007F05F81503030F05E0DB007F15FE030094CA000115FC04
0703F094CAFCDC000791D0FC>152 137 118 262 163 97 D[<FA1FFF0D7FB7FC0B1FB9
FCAD9AC77E1F078B8BA28BB3B3B14FB57E96B612FE061FEDFFE04DB812FC050FEFFF8005
7F18E04CBA12F8040F19FE043F737E93BC7E4B9326F8003F14F0030704800101804B03F8
C8003F13FE033F03E0030790B8FC4B038015014AB648CA7E4A03F8834A4B170F4A4B834A
4B834A92CCFC4A4A8591B648854989494B854D85495D49894D855B495DA25B90B7CDFCA2
485DA25AA2485DA35A5EA25AA35AA35E5AA6B7FCB3A27EA67EA282A37EA37EA2827EA27E
A2827EA26C817FA26D6F61676D816D6571616D656D6F616D6F96B8FC666D6F606E6E606E
6E4E836E6F173F6E6F4D836E03F04CB97E6E6F040718FE020003FE4C01FD93B512F86F6E
6C037F13F96F03E04AB512F1030F03FC020F14C16F9226FFC001B61281030193B7EAFE01
6F6C19FC041F19F0040719C004011900DC003F17F8050717C0DD007F4BC7FC060703E04F
C7FCDE000F01FCC802F0CAFC>165 209 117 334 186 100 D[<0703B512C04EB77E063F
16F84DB9FC050F18E0057F18FC0403BBFC040F1AC0043F1AF093BC12FC0303DCC007814B
03F8C7003F80031F03E0020715C04B03800201814B4AC9814AB600F8043F804A4B70804A
03C070804A4B70804A92CA6C814A4A71814A4A718191B685494B7280495D4976804D8749
4B84498B4D84498B4992CC7EA290B71D804C854821C0A2484B8522E0A25AA2484B7414F0
A35A22F8A3488A5EA34821FCA6B7FC93BFFCA722F822F004F0D1FCA87EA66C81A47EA46C
81A37EA26C6FF41FF0F93FF86CF87FFCA2826C20FF6D815613F86D815613F06D815613E0
6D6F626D6F1CC06D66715013806D6F626D6F97B512006E6F4E5B6E6F606E6F4E5B6E6F06
1F5B6E03FC4E5B6E6F95B55A02006F6C4C5C6F03E004075C6F03F8043F91C7FC030F03FE
93B55A6FDBFFE0020F14F8030104FF0103B65A6F6C93B812C07063040F50C8FC04031AF8
DC007F19E0051F1980050306FCC9FCDD003F17E0060794CAFCDE003F15F0DF007F01F8CB
FC>134 137 119 262 153 I[<98387FFFE0083FB512FE0707B712C0077F16F00603B812
FC061F17FF067F844DBA12E0050785051F85057FDBF8018094B7C65A040303FC49804C03
F049804C03C05B4C4B17804C92C75A4C4A4A15C093B65A4B5D4B4B91B712E0615D4B5D61
5D5D96C8FC5D607615C092B6FCA24A4B6F1580A2761500765C765C4A4B6F5C765C765C0B
1F90C7FCF501F09AC9FCB3B0BD12FEADC7000303FCCDFCB3B3B3B3B3B0003FBCFCAC02E0
C9120F>115 209 117 336 102 I[<FAFFE00603B500E0051F13FC4DB700C04BB6FC051F
04FC030715C04CB900C0023F15E0040F06F891B712F0043F06FE010316F84BBBEAC00F03
07E0F01F16FC4BE0F87F16FE033F08FEB67E92B7D8E00392B612C04A03FCC7001F4CC6B6
FC4A03F0020716F04A03C0020116804A92C96C4AC7FC4A4A705C4A4A70804A4A708091B6
487081494B706F6D13FE498A4D707113FC498A494B706F6D13F87C13F04978010313C094
CB6C04001300497891C7FCA2498AA390B6487281A5488CAD6C68A56D6E4E92C9FCA36D66
A26D667194B6FC6D66A26D6F4C5D6D66715E6D666D6F4C5D6E6E4C92CAFC6E6E4C5C6E6E
4C5C6E6E4C5C6E03C04AB65A6E03F002075D06FC021F5D4A9226FFE003B75A4A93B848CB
FC1EF84A63DA3FF11AC0DBF03F4ECCFC91267FE00F18F8040118C09127FFC0001F04FCCD
FC050116C049DB000302E0CEFC95D2FC5BA35BA4815BA281A28181A2818116C08216F86D
14FF94B912FC9AB5FC1FF8F7FF806D1EF020FEF8FFC06D1FF021FC6D1FFF22C06E8B6E1F
F88E6E8B6E8B8F6E8C6E8C6E8C806F8B0203C17E141F027F8C49C2FC01078D131F4992CB
000F18804902F0F0000790B600C0F1007F484B080716C0484ACFFC484A1C3F484A7615E0
4B1C07488B484A888C484A7714F0A28DB6FC5D8DA76F65A26C23E0A26F656C23C06F9AB6
FCA26C6E5215806C6E521500A26C6E525C6C6E525C70636C03E0097F5C6C6F98B65A6D6E
505D6D02FE08075D6D6E6C071F5D6D03E0077F92C7FC6D03F84EB65A010103FF060F15F8
6D04E0057F5D023F03FF040FB712C0020F04FE0207B8C8FC020393BB12FC02001EF0033F
1DC0030752C9FC03001CF0041F1B80040108F8CAFCDC001F1980DD007F05E0CBFCDE001F
0380CCFC>152 196 119 262 167 I[<ED1FF0EDFFFE0207EBFFC04A80023F14F84A8091
B67E49814982A249824982A34982A34982A96D5EA36D5EA36D5E6D5EA26D93C8FC6D5D6E
5C6E5C020F14E06E5C020049C9FCED1FF092CBFCB3AD933801FFF00107B7FC007FB8FCAD
EA0007EB007F8080A280B3B3B3B3B3ABBB12FCAC0280C81203>70
208 115 335 93 105 D[<933801FFF00107B7FCB9FCADEA0007EB007F8080A280B3B3B3
B3B3B3B3B3B3ACBCFCAC0280C81201>72 207 115 334 93 108
D[<932603FFE0933807FFFE0107B794B612FCB9040FEDFF800A7F16F051B812FE090771
7E091F18E0097F8498BA7E08038550DAE00715FF509038FC0001083F01E06D6C81500180
6E815048C86C81D800034D01F86F81D9003F4C01E0816E4C49856E95C97E4F48866E4C5A
4F487081624F48864F48826206E190CBFCDEE3FE88A2F0E7FC4F8418EF6106FF8961A261
A261A396CCFCA460A560B3B3B3B1BC00E0010FBB12FEAC02C0C96C05FCC91207>167
134 116 261 186 110 D[<97B512F0077FECFFE0060FB8FC95B912F0050718FE053FF0
FFC094BB12F004071AFE041F747E047F1BE093B726E0007F81030303FCC7000315FC030F
03E0DA007F14FF4B0380031F814B4AC900078192B600F8040115F04A03E0706C804A4B71
804A4B71804A4ACB0007804A4A72814A4A72814A8B91B6487281494B7380498C4D85494B
7380498C4992CD6C81A2498D4C86498D90B68B4C86488EA2488EA24C86488EA2488EA348
2380A24C86A24823C0A44823E0A7B720F0B26C23E0A66C23C07062A36C2380A46C2300A2
6C6F505DA36C6AA26C6F505DA26C6A70626D69A26D6F4F5D6D6971616D9EC7FC6D6F4F5C
7196B6FC6D686D6F4E5D6D6F4E5D6E6E4E5D6E6E4E5D6E6F4D5D6E6F4D92C8FC6E6F4D5C
6E03F84CB65A6E03FE04075D6E6C6E6C031F15E06F03E0037F5D030F03FC0203B7C9FC6F
DBFFE0017F5D030193B912F86F6C1BE0041F1B80040750CAFC04011AF8706C19E0050F96
CBFC050018F0061F1780060004F0CCFC070002F0CDFC>148 137
119 262 167 I[<932603FFC0ED7FFC0107B70307B512C0B9033F14F898B7FC080316C0
5016F0081F825082508297B9FC4FDAC07F14804FD9FC00B612C04FD9F00115E04FEBC003
514815F0D8000394381FFE00D9003F4C484915F86E5F6E4C5A4F484915FC6E5F06C15BA2
06C390C7FC6118C761A2F0CFF87615F8F0DFF07615F06106FF6F15E0A24F6E15C0761580
4F6F14000B1F13FC0B0713F00B0113C096CDFCA460A560A760B3B3B3AABC12FEAC02C0C9
121F>118 134 119 261 137 114 D[<94380FFF80A95FA75FA55FA394B5FCA35EA35EA2
5EA25EA25EA25EA25E93B6FCA25D5D5DA25D5D5D5D4AB7FC5C5C141F5C91B8FC010794B8
12E0133F0003BEFCBFFCAAC80480CBFCB3B3B3AC9A380FFF80B3A6656F1B0085A2656681
73157F6F62A27315FF6F62735C6F4E5B6F6F5E735C6F6F4A5B6F04C0013F5B706F5B70DB
FC03B5C7FC7092B65A706070600401607060053F1780050F94C8FC050116FCDD003F15F0
06031580DE000701F8C9FC>105 191 122 316 130 116 D[<D8FFFE93263FFFF0D93FFE
93267FFFC0DB7FFEED7FE090BA92BA94B8FCACC76C03F0CA001F0380CB003FED80006E75
0A0102E0C7FC7CDE003F13806E6F719CC8FC8E726B6E75668E6E6F71535A8E6E6F585B8A
8E6E7071515B8E6E70575B8B8E6F6F575B8F6F6F575B678F6F6F94B74E90C9FC8F6F6F57
5A668F6F6F4C525A8F6F6F565B668F6F704B515B8F6F70555B5413BF8F706F4B011F4F5B
A17E706F555B54487EA17E706F4B486C4F90CAFCA17E706F555A53496C81A2706F4A496C
4F5AA17E706F545B53496C8187704E496D4D5BA17E707049515B556D8087714D90C76C4D
5BA17F716F49515B546E8187714D486E4D90CBFCA17F716F48496E4D5AA17F1BFE714C49
6E4D5AA17F716F48496E4C5BA113FC1C8771048F496F4B5BA113FE7104DF496F4B5BA113
FF99B5FC7294C96C4B5BA1148F724C70039F5BA114DFA2724C7092B5CCFCA2724C705EA3
724C705EA2724C705EA3724C715DA2724C715DA273679ACB7EA2734A725DA2739CCDFC52
84A2734A725CA273665284A2734A725CA273665285A2734A735BA27490CD6C5B7448745B
E00FF8E003FECEFC>227 133 121 259 242 119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmss10 20.74 37
/Fr 37 123 df<071F161FA24F6C4B7EA2077F167FA297C990C8FCA24F5EA24F5EA20601
1601A24F5EA206031603A24F5EA206071607A24F5EA2060F160FA24F5EA2061F161FA24F
5EA2063F163FA24F5EA2067F167FA296C990C9FCA24E5EA24E5EA205011601A24E5EA205
031603A24E5EA205071607A24E5E007FC112E0A2C212F0A36C20E06C20C0CAD83F80C8D8
3F80C9FC057F167FA295C990CAFCA24D5EA24D5EA204011601A24D5EA204031603A24D5E
A304071607A24D5EA2040F160FA24D5EA2041F161FA24D5E003FC112C04820E0C212F0A3
6C20E0A2C948C948CBFC03011601A24C5EA203031603A24C5EA203071607A24C5EA2030F
160FA24C5EA2031F161FA24C5EA2033F163FA24C5EA2037F167FA293C990CCFCA24B5EA2
4B5EA202011601A24B5EA202031603A24B5EA202071607A24B5EA2020F160FA24B5EA202
1F161FA24B5EA26E486F5AA27C9977F78F>35 D<EFFF80040713F0041F13FC4C13FF93B6
7E4B814B814B81854B815D05C07F92393FFE007F4B48EB1FFF5E4C6D7F4B487FA24A496D
7FA25EA24A6F7FA293C7FCA35CA46062A2705B6260A24E90CCFC604E5AA270495A6E4A5B
5F4D5B4D5B70485B4D5B5F6E6DB5CDFC04F15B04F35B04F74917C06E90B54817F84E4CB4
7E4E18E0606F91CA5C4D5F5F6F5B4D4D5B17C04B5B4AB54E90C7FC4A804A624A6E605C4A
6E4D5A5C49B66C177F496F604901FD19FF4901F86D60494960499026C07FFF604901806E
5D90B5486C6148496D6D5D48496F5F48496D5F4A6F94C8FC48496D6D5D48496D6D4B5A5C
486F6D4B5A91C86D4B5AA248486F6D495B716D5B716D495B49715D00FF705D716D495B71
6D4990C9FC73495A716D13FF714A5B7201835B08C75B6D7001EF5B7290B55A007F715D72
92CAFC6D705C725C6C6D6F5C6E606C846E4BB57E6C6D030714FE6E033F6EED01806C01FE
4AB700C0140F6C6D020F04F8147FDBE003B9EB0FFF6C91BEFC6C193F6DEFFE0F6DEFF807
010FEFE0016D943880007F6D04FCC77E010004F01407023F03800201EDFE00020702F8C9
003F14E09126007FFECA000101F8C7FC718079FB83>38 D[<EEFFE04B13C04B13804B13
004B5A4B5A4B5A157F4B5A4A5B4A5BA24A5B4A90C7FC5C5D4A5A147F5D14FF5D495B5B5D
5B5D5BA24990C8FCA2495AA3495AA2495AA3485BA35A5CA25A5CA35AA25CA25AA391C9FC
A25AA45BA2127FA85B12FFB3A9127F7FA8123FA27FA47EA280A37EA280A27EA3807EA280
7EA36C7FA36D7EA26D7EA36D7EA26D7FA27F817F817F6D7F81147F81143F6E7E81806E7F
6E7FA26E7F6E7F6F7E153F6F7E6F7E6F7E6F13806F13C06F13E0>43
171 114 256 67 40 D[<EAFFE06C7E6C7E6C7E6C7E6C7E6C7F806C7F6C7F6D7EA26D7E
6D7E807F6D7F817F817F6D7F81147F81143F81A26E7EA26E7FA36E7FA26E7FA36E7FA382
80A282157FA382A2153FA282A381A21780A481A217C0A88117E0B3A917C05DA81780A25D
A41700A25DA35EA2157FA25EA315FF5EA25C5EA34A5BA34A5BA24A5BA34A90C7FCA24A5A
A25D147F5D14FF5D495B5B5D5B5D4990C8FC5B5C495A495AA2495A485B485B5C4890C9FC
485A485A485A485A485A>43 171 119 256 67 I<F003E0A24E7EB3B3AF007FC0FCA2C1
1280A36C1F00A2CBD807F0CCFCB3B3AF725AA2717176E386>43 D<923803FF80033F13F8
4AB6FC020715C04A81023F15F84A8149B8FC4983498349834BC6FC4901F8013F7F4901E0
010F7F49018001037F92C77E49486E7F4A157F48496F7EA248496F13804A814819C04A81
A24819E04A81A24819F091C97EA34819F8A24982A3007F19FCA449177FA500FF19FEB3AC
007F19FC6D17FFA7003F19F86D5EA46C19F06E5DA36C19E06E5DA26C6D4B13C0A36C6D4B
1380A26C6D4B13006E5D6C6D4B5AA26D6C4A5B03C013076D6D495B6D01F8013F5BDBFF01
B5FC6D91B65A6D5F6D5F6D94C7FC6D6C15FC6E5D6E5D020715C0020192C8FCDA003F13F8
03031380477979F456>48 D<167816F815011507150F153F15FF1403141F91B5FC131FB7
FCA714E3140313E0C7FCB3B3B3B3AE007FB912C0AA3A7571F456>I<ED1FFF4AB512F002
0F14FE023FECFFC091B77E4916F8010716FE498249834983498390B5D8C00F804AC78048
01F8023F7F4801E0020F7F4A80484902017F4890C914804982001F19C0498248487013E0
A2497013F0127F844918F800FF835B127F123F497013FC121F120F120790CAFC7E7ECBFC
A51AF860A31AF060A21AE0601AC0601A80604E13006118FF4D5B614D5B4D5B4D5B4D5B5F
4D90C7FC604D5A4C13F04C5B4C5B041F5B4C90C8FC4C5A4C5A4B5B4B5B4B13C04B5B4B90
C9FC4B5A4B5A4B5A4A5B4A5B4A5B4A5B4A90CAFCEC3FFC4A5A4A5A495B495B495B4990CB
FC495A495A495A495A485B485B485B4890CCFC485A48BA12FC5AAB467579F456>I<9238
07FF8092B512FC020714FF021F15E0027F8149B712FC4982010F707E4983498349D9FC01
8090B526C0001F7F4849C77E4801F802037F48496E7F4801C08048496F7E91C9FC484870
13806C5A49826C4818C012075B6C5A12015B120090CAFCA31A8060A34E1300A295B5FC61
5F615F4D5B5F4D5B4D5B94B55A04035C161F030FB6C7FC0207B612FC60606018804DC8FC
717E18E018F818FE727E91C7000180DC003F7F050F13F805037F717F717F847213807213
C01AE0841AF0841AF8A2841AFCA37213FEAB4E13FCA212201230A200784D13F8127C007E
4D13F0127F6D5ED8FFE018E06D5E6D4C13C0D87FFE93B512806C6C6C5C6C01E04A140002
F8020F5B6C01FF023F5B0003DAF801B55A6C91B75A6C606D5F011F5F6D94C7FC010316FC
010016F0023F5D020792C8FC020014F8030F1380477979F456>I<94381FFFE05F5FA294
B5FCA25E17FB16031607A2EE0FF3A2161F163F17E3167FA2EEFFC35DA24B1383A24B1303
A2ED0FFE151FA2ED3FFCA2ED7FF815FF16F05C16E05C4A13C0A24A1380A24A1300A24A5A
147F5D4A5AA2495B5B5D5B5D5B495B92C7FC5B5C137F5C13FF485B5C5A5C5A485BA2485B
91C8FC5A485AA2485A90BB12E0ABCA000701E0C7FCB3AB4B717BF056>I<EAFFFEAFC7FC
B3B3ABEAFFFEAF0F4D70CC30>58 D<EAFFFEAFC7FCB3B3ABEAFFFEAF120713FC120FA213
F8A3EA1FF0A313E0A2123F13C0A31380127FA21300A25A0F6370CC30>I<007FC0FCA2C1
1280A36C1F006C66D4FCB3AB003FBF12FE488AC11280A36C1F00A2712B76C086>61
D<F07FFE050FB512E0057F14FC0403B7FC040F16C0047F824BB812F84B83030F834B8303
7F8492B6D8C007804A02FCC780020702E0023F7F4A0280140F4A49C86C7F4A01F86F7F4A
01E08191B5486F7F93CA127F4949717E495B49497113804949ED3FE04B913903FFFE0F49
49020FD9FF8F13C04949023F14EF92C8B8FC494B17E0494814074A5C485E4A4A17F04849
5C94B5EAE03F4849EE00074C497F4A4901F8010014F8484B49804A4B805E484D8091C748
4980A2484B90C87E494B6F13FCA2167F007F4C815B16FF4D81A3485A4B49167FAE6F6DEE
FFF86C7EA3715D047F18F07F003F705D043F18E0A26D6F5D6C6F6D4A13C0A26E6D6D4A13
806C715C7018006E6F5C6C6F6D4A5A6E6D01FE01035B706D495B6C6DEEE03F7190B65A6C
6D6E5E6E6E5E6C705E6E6E93C7FC6D6C020115FC6D6F5D6F023F14E06D6D020F14806D6D
020349C8FC6F9138003FE06D6D92CAFC6D7F6D7F6D7F16C06E7F6E01F8EF3FFC6E01FEEF
FFF86E6D6C030713F06E02E0033F13E0020102FC0203B512C06EDAFFC090B612806F91B7
EAFE00031F606F60030318E06F18806F6C4CC7FC040F16F8040316E0DC007F92C8FC050F
14F8DD007F90C9FC5E7C76F973>64 D<95B512C0051FECFF8094B712F8040716FF041F17
E0047F17FC4BBAFC15075D033F605D4AB6EAC0004A02FCC712074A02E014004A0280151F
4A49C9EA07FC4A01F816014A49EE007C91B548171C490280170C4991CDFC5D495B495B5B
5D495B495BA290B55A92CEFC5A5C5A5C5A5CA2485BA25A5CA3485BA4485BA6B5CFFCB06C
7FA66C7FA46C7FA3807EA26C7FA2807E807E807E816D7FA26D7F6D7F817F6D7F6D6D606F
606D6E170F6D02E05F6E6D177F6E6D5F6E01FE040313806E6D6C150F6E02E0153F6E02FC
0203B5FC6EDAFFC0137F6E6C91B8FC6F1900030F18FC6F60030118E06F6C1780041F4CC7
FC040716F8040016E0051F4AC8FC050014C0597C75F96E>67 D<BC12F0AB91CDFCB3B3A5
91BAFCAB91CDFCB3B3A991BA12FEAC4F7870F767>69 D<BC12E0AB91CDFCB3B3A791B912
F0AB91CDFCB3B3B34B7871F762>I<B5FCB3B3B3B3B3B3AC107870F730>73
D<B500F050B512F0A36E62A26E62A36E62A26E62A201FB1CFB6F193FA201F91CF36F197F
A26F19FF01F81CE3A26F60027F1BC3A26F60023F1B836F60A2021F1B036F60A26E6CF01F
FEA36E6DEF3FFCA36E6DEF7FF8A27017FF6E1AF0A2705E6E1AE0A2705E037F19C0705E03
3F1980A2705E031F1900A2705E6F6071153FA26F6071157F6F60A27115FF6F60715CA26F
60715C047F5FA2715C043F5FA2715C041F94C7FC715C705EA272133F705EA272137F705E
A2706D495AA3706D485BA2725A057F5DA2716C485BA3716C4890C8FCA2050F5CA2F0FF1F
715CA219BF715CA271EBFFF0A3715CA2725BA3725BA37290C9FC95CBFCA474786FF797>
77 D<ED3FFE0207B512C0027F14F849B67E010715FF011F82017F16E048B87E48838484
ED000302F001007F02C06E13806C48C87E496F13C013F001C06F13E0498190C9FCCA6C13
F0A47113F8AD171F93B6FC153F0203B7FC141F91B8FC1307131F5B90B712C148ED800148
ECF0004891C7FC4813FC4813E0485B91C8FC485A5B12FF5BA45FA27F5F6C6C5D6D5D6E5C
6C6D91B5FC02F0130702FF133F6C91B7FCA27E6C16FD6C16F16C16E16C16816DECFE016D
14F0010F91C9FC010113E03D5279CF53>97 D<EAFFFCB3B3A5EE3FF80307B5FC033F14C0
92B67E020315F8020F81023F814A8191B87E90B97E85DBE00F80ED000102FC6D6C7F02F0
141F4A6E7F4A02037F4A8091C97F5B4982721380A2841AC084A21AE084A57213F0AE601A
E0A4601AC0A2601A8060A24E13006D93B5FC616D5D6E4A5B5F6E4A5B02F0023F5B6E91B5
FC02FE01035C9126FFC01F5C92B75A96C7FC01FD5E01FC5E023F5D6E5D6E15C002035D02
004AC8FCC8001F13F003011380447A72F759>I<923801FFFC031FEBFFE092B612FC0203
15FF020F16C04A16F0027F8291B812FE49835B5B49DA00075B4901F8EB003F4901E0140F
4949140390B5C9FC4A163E4849161C4849160C4A93C7FC5A5C485BA2485BA25A91CCFCA3
485AA45B12FFAD6C7EA56C7EA36C7FA2807E806C6D5E616C6D160F6C6D5E6E167F6C6D5E
6D01C0020313806D6D141F03F891B5FC6D01FF130F6D91B7FC7F6D1800010017FC6E5E6E
16E0020F168002034BC7FC020015F0031F1480030101F0C8FC41527ACF4D>I<953803FF
F0B3B3A5ED3FF00203B51280020F14E0023F14FC4A14FF49B712834916E34916F34916FB
4993B5FC5B49EC801F9238FC000790B500F013014802C06D7E92C87E4849814849814A81
484981A25C485BA2485BA291C9FCA25A5BA412FF5BAE6C7EA56C7EA280A27E80606C7F6E
5D6C6D5D606C7F02FF92B5FC6C6E5B6C02E05B03F8130F6D01FF137F6D91B7FC6D16FB6D
16F36D16C36D16836D16036D15FC023F14F06E14C0020349C9FC9138007FE0447A7AF759
>I<ED07FF037F13F04AB512FC020714FF021F15C0027F8191B712F84982010782498249
83EDFC01499026F0003F7F4901C0010F7F90B5C77E484902017F4A8048496F7E5C48496F
7E4A151F5A4A6F7E5A91C91207A248488384A2485AA28490BA1280A2BBFCA801F8CCFCA6
127F7FA46C7EA27F7E80A26C7FA26C7F6E16026C6D160E6C6D161E6E167E6C6D16FE6D6D
140703E0EC1FFF6D01F891B5FC6D01FF131F6D91B7FC7F6D5F010017F86E5E6E16C0020F
93C7FC020315FC020015E0031F91C8FC030113E041527ACF4D>I<EE0FFF93B512F80303
14FE150F153F5D4AB6FC5C5C5CA24AEBF8014A9038C0001E4A90C712024B14004A5A5D49
5BA3495BA45BB3A3B812F8AAD8000701E0C8FCB3B3B3AD377A7CF935>I<EAFFFCB3B3A5
EE7FF00307B5FC033F14C092B612F04A15FC0207814A814A16805C4A16C091B812E001FD
EBE00790B5D8800014F04AC7123F4A804A6E13F84A804A80A24A804A16FCA28391C9FCA2
5BA55BB3B3AD3E7873F759>104 D<B5FCB0C7FCB3A7EA7FFEB3B3B3B3A5107674F529>I<
EAFFF8B3B3A7943803FFFC4D5B4D5B614D5B4D5B4D90C7FC4D5A4C5B4C5B4C5B4C5B4C5B
4C5B4C90C8FC4C5A4B5B4B5B4B5B5D4B5B4B5B5F4B90C9FC4B5A4A5B4A5B4A5B4A5B4A5B
5C4A7F91B57E13F901FB8090B67E82A28203BF7F151F02FE804A6C7F4A7E02F0804A6C7F
4A7E02808091C77F49147F496E7E49824980707F8482707F8482707F84177F717E85717F
8385717F8385717F8385727E841A807213C0427872F754>107 D<EAFFFCB3B3B3B3B3B3
AC0E7873F729>I<EE3FF80307B5FCD8FFFC013F14C092B67E020315F8020F81023F814A
8191B87E90B97E85DBE00F80ED000102FC6D6C7F02F0804A020F7F4A6E7F4A8091C86C7F
5B4981721380A2841AC084A27213E0A384A31AF084AD601AE0A360A21AC060A24E1380A2
6095B512007F4D5B6D5D6E4A5B5F6E4A5B02F0027F5B6E91B5FC02FE01075C9126FFC03F
5C92B75A96C7FC01FD5E01FC5E023F5D6E5D6E15C002035D02004AC8FC031F13F0030113
8092CBFCB3AD447072CE59>112 D<EE07E0D8FFF8147FED03FF150F153F92B5FC5C5C14
0F5C5C5CEEF80091B5128001F949C7FC01FB13F890B512E05D5D4AC8FC5C5CA25C5CA25C
5CA291C9FCA35BA45BB3B3A72B4F73CE3B>114 D<913803FFF8027FEBFFC00103B612FC
010FEDFF804916E0017F16F890B8FC5A4817F05AA2489038F8000F4801E0EB007F028014
0F91C8EA03E048EE0060491600A2485AA77FA27F6C7F8014F06C13FCECFFE06C14FF6C15
F016FE6CEDFFC06C16F06C826D816D15FF010F16806D16C0010116E0EB003F020715F0DA
007F14F81503DB003F13FC16077013FE1600177F18FF83A283A612200030EE3FFE123C00
7E167FEA7F8001F0EDFFFC01FC5CD9FF80010713F802FC133FB912F018E0A26C17C0001F
178000071700000116FCD8003F5D010F15C0010092C7FC020713E038527BCF42>I<D8FF
FCEEFFFCB3B3B3A25FA35F5FA25F6D5D5F6C6C5D4CB5FC02C0130702F8137F6C90B65A5F
6C5E6C16E05F6C16006C15F8C615E0013F49C9FC010713C03E4F73CC59>117
D<D8FFF8EF0FFF617F007FF03FFEA27F003FF07FFC7F6C19F819FF806C4D13F0A2806C4D
13E0806C19C060806C4D1380A2806C4D130080017F5F183F80013F5F187F806D4C5AA26D
6D5D5F816D5F5F816D5F5F6D6D5DA25F6D6D92C7FC5F027F5D81173F023F5D81177F021F
5D816E4A5AA2826E5D168116C16E5D16C36E5D16E3A26E01E790C8FCA216F7037F5B16FF
6F5BA36F5BA36F5BA2484D7DCC4F>I<D8FFF8DCFFFCEE1FFEA21E3F6D4B7F007F1EFC1E
7F4D7F6C6C1DF81EFFDD07FC7F6C6C1DF0A2656E020F806C1EE0654D486C7E6C6D1CC065
866C6D023F1980F0F03F65057F806C6D1C00DEE01F5D05FF806C6D63A2DEC00F153F017F
4A6F5D801D7F013F4A496C6C5D80A21DFF011F4A496C6D5C80646D4B6D01C05CED800FA2
6D505B4D6D13E0EDC01F646D4B027F5D043F16F015E06D5090C7FC4DEC3FF8A26DD9F07F
604D021F131F1BFCA2027F01FF606F49020F133FA2023F06FE5B4D140715F9021F4F5A03
FD90C812031BFF020F62A2DBFFFE6F13FFA26E624C81A26E624C82A26E97C8FC6F4D7DCC
76>I<D8FFF8EF0FFF6D5FA2007FF03FFE7F003F19FC6D177F7E6EEEFFF8A26C19F06E5D
7E6E4B13E07E804E13C07E6E4B13807E80017F4C1300A26E5E013F163F806D4C5AA26D6D
5D18FF816D5F5F6D6D5D5F6D7F615F6D6D5DA2027F5C6F92C7FCA26E6C495AA2141F6F49
5A806016806E147F608070485A80A2705B6E13E160157F16F1DB3FF390C8FCA25F151F16
FB030F5BA26FB45AA36F5BA26F5BA2815FA34B5BA24B90C9FCA34B5AA24B5AA34B5AA24B
5AA34B5AA24B5A5C5E5C00184990CAFC381FC01F90B55A5DA25D6C5C5D5D5D4ACBFCC613
F848707DCC4F>121 D<003FB912FEA819FC19F8A2CA000F13F04D13E04D13C0A24D1380
94B512004C5BA24C5B4C5B4C5BA24C5B4C5B4C5BA293B5C7FC4B5B4B5BA24B5B4B5B4B5B
A24B5B4B5B92B5C8FC5C5E4A5B4A5B4A5BA24A5B4A5B4A5BA291B5C9FC495B495BA2495B
495B495BA2495B495B90B5CAFCA2485B485B485BA2485B485B4890B9FCA25ABBFCA8404D
7BCC4B>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 @landscape
%%EndSetup
%%Page: 1 1
1 0 bop Red 4722 -343 a Fr(ICFEM2002)p Black -240 -274
5816 7 v Blue 344 912 a Fq(Hardw)-9 b(are/Soft)g(w)g(are)109
b(P)-9 b(artitioning)111 b(in)2390 1225 y(V)-28 b(erilog)372
2107 y Fp(Qin)68 b(Shengchao)1643 2032 y Fo(1)p Fn(;)p
Fo(3)1838 2107 y Fp(,)g(He)f(Jifeng)2760 2032 y Fo(2)2842
2107 y Fp(,)h(Qiu)g(Zongy)-6 b(an)4052 2032 y Fo(3)4133
2107 y Fp(,)68 b(Zhang)e(Naixiao)5477 2032 y Fo(3)735
2337 y Fm(1)813 2399 y Fl(Singap)5 b(ore-MIT)58 b(Alliance,)g(National)
h(Univ)-5 b(ersit)g(y)59 b(of)e(Singap)5 b(ore)2516 2629
y Fm(2)2593 2692 y Fl(UNU/I)g(IST)980 2922 y Fm(3)1058
2984 y Fl(Sc)-5 b(ho)5 b(ol)57 b(of)g(Mathematical)h(Sciences,)e(P)-5
b(eking)58 b(Univ)-5 b(ersit)g(y)2625 4145 y(1)p eop
%%Page: 2 2
2 1 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 286 116 5566 7 v 286 403 7 287 v 344 311
a Fk(Hardw)-6 b(are-Soft)g(w)g(are)77 b(Co-Design:)104
b(General)77 b(Metho)6 b(dology)p 5844 403 V 286 410
5566 7 v 5848 479 73 301 v 355 479 5566 73 v 948 3870
a
 currentpoint currentpoint translate 0.57849 0.3855 scale neg exch
neg exch translate
 948 3870 a @beginspecial 0 @llx 0 @lly 392 @urx 500
@ury 3920 @rwi @setspecial
%%BeginDocument: ./graph/general.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\pos- confs-letters\slides\graph\general.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 392 500
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 392 500
%AI3_TileBox: 0 0 392 500
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

  0.000 0.122 0.122 0.000 k
 [] 0 d
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  0.000 0.122 0.122 0.000 k
*u
  273.9671 447.4800 m
  287.2855 447.4946  298.0694 458.2817  298.0800 471.6000 C
  298.0800 471.6000 L
  298.0694 484.9295  287.2680 495.7212  273.9386 495.7200 C
  135.6941 495.7200 L
  122.3664 495.6951  111.5712 484.8562  111.6001 471.5285 C
  111.6000 471.5857 L
  111.6185 458.2674  122.4088 447.4867  135.7271 447.4800 C
  273.9671 447.4800 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 126.7200 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 136.8000 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(y\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 145.4400 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(s\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 153.3600 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 159.1200 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.0400 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(m\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.1600 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 186.4800 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.5600 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.6400 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.5600 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.4800 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.5200 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.2800 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.3200 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 246.2400 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 254.8800 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 260.6400 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.6800 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 274.3200 464.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
u
  0.000 0.122 0.122 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  201.1200 447.3600 m
  201.1200 422.1600 L
  203.2800 422.1600 L
  195.9600 411.3600 L
  188.5200 422.1600 L
  190.6800 422.1600 L
  190.6800 447.3600 L
  201.1200 447.3600 L
B
U
  1.000 1.000 0.247 0.000 k
  0.000 0.000 0.000 1.000 K
u
  111.2400 363.9600 m
  291.2400 363.9600 L
  291.2400 412.2000 L
  111.2400 412.2000 L
  111.2400 363.9600 L
B
  201.2400 388.0800 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 126.3600 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
(H\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.3200 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 147.9600 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.8800 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(d\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 165.9600 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(w\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 178.9200 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.5600 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.4800 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.4000 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(/\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.4400 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(S\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.5200 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.1600 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(f\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 232.9200 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.6800 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(w\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.6400 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 260.2800 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 268.2000 391.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 116.2800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(A\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 129.2400 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 134.2800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.3200 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 147.9600 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.8800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 164.5200 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 170.2800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 175.3200 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.9600 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.0400 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.3600 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(&\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.4800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.8000 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(P\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.3200 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.9600 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 245.8800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.6400 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 256.6800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 262.4400 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.4800 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.1200 370.8000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
u
  0.000 0.122 0.122 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  200.7600 363.8400 m
  200.7600 338.6400 L
  202.9200 338.6400 L
  195.6000 327.8400 L
  188.1600 338.6400 L
  190.3200 338.6400 L
  190.3200 363.8400 L
  200.7600 363.8400 L
B
U
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  0.000 0.122 0.122 0.000 k
  0.000 0.122 0.122 0.000 k
*u
  255.6071 279.3600 m
  268.9255 279.3746  279.7094 290.1617  279.7200 303.4800 C
  279.7200 303.4800 L
  279.7094 316.8095  268.9080 327.6012  255.5786 327.6000 C
  136.0541 327.6000 L
  122.7264 327.5751  111.9312 316.7362  111.9601 303.4085 C
  111.9600 303.4657 L
  111.9785 290.1474  122.7688 279.3667  136.0871 279.3600 C
  255.6071 279.3600 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 135.6000 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(P\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 147.1200 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.7600 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 163.6800 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.4400 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 174.4800 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.2400 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.2800 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.9200 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.0000 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.3200 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(M\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.6000 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.2400 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.3200 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.2400 296.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  1.000 1.000 0.247 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  3.6000 195.8400 m
  111.4800 195.8400 L
  111.4800 244.0800 L
  3.6000 244.0800 L
  3.6000 195.8400 L
B
  57.5400 219.9600 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 23.6400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
(S\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.7200 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.3600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(f\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 48.1200 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 53.8800 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(w\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.8400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.4800 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.4000 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 10.3200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(C\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 22.5600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 31.2000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(m\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.3200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.4000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.4400 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.4800 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.1200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 80.8800 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.9200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.5600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
  1.000 1.000 0.247 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  280.0800 195.8400 m
  387.9600 195.8400 L
  387.9600 244.0800 L
  280.0800 244.0800 L
  280.0800 195.8400 L
B
  334.0200 219.9600 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 295.4400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
(H\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 308.4000 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 317.0400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 324.9600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(d\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 335.0400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(w\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 348.0000 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 356.6400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 364.5600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 297.2400 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(S\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 307.3200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(y\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.9600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 326.0400 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 331.8000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(h\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 341.8800 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 349.8000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 357.7200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 362.7600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
  1.000 1.000 0.247 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  141.8400 195.8400 m
  249.7200 195.8400 L
  249.7200 244.0800 L
  141.8400 244.0800 L
  141.8400 195.8400 L
B
  195.7800 219.9600 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 161.1600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
(I\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 168.3600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 178.4400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.2000 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.1200 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.0400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(f\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.8000 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.4400 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.3600 223.5600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 159.0000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(S\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.0800 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(y\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.7200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.8000 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.5600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(h\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.6400 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.5600 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.4800 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.5200 202.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
u
  0.000 0.122 0.122 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  200.7600 279.6000 m
  200.7600 254.4000 L
  202.9200 254.4000 L
  195.6000 243.6000 L
  188.1600 254.4000 L
  190.3200 254.4000 L
  190.3200 279.6000 L
  200.7600 279.6000 L
B
U
u
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  117.9600 285.3600 m
  88.3200 255.7200 L
  89.5200 254.5200 L
  72.4800 246.2400 L
  80.6400 263.4000 L
  81.9600 262.0800 L
  111.6000 291.7200 L
  117.9600 285.3600 L
B
U
u
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  280.0800 291.7200 m
  309.7200 262.0800 L
  311.0400 263.4000 L
  319.2000 246.3600 L
  302.1600 254.5200 L
  303.3600 255.7200 L
  273.7200 285.3600 L
  280.0800 291.7200 L
B
U
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  0.000 0.122 0.122 0.000 k
  0.000 0.122 0.122 0.000 k
*u
  243.7307 87.4800 m
  263.6087 87.5017  279.7042 103.6019  279.7200 123.4800 C
  279.7200 123.4800 L
  279.7042 143.3747  263.5827 159.4818  243.6880 159.4800 C
  147.9213 159.4800 L
  128.0292 159.4428  111.9171 143.2654  111.9602 123.3733 C
  111.9600 123.4587 L
  111.9876 103.5806  128.0926 87.4899  147.9707 87.4800 C
  243.7307 87.4800 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 135.1200 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(I\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 142.3200 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(m\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 157.4400 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.5200 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.4800 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(m\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.6000 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.5200 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.6000 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.3600 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 228.0000 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.7600 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.8000 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 247.4400 126.9600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 171.8400 106.0800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(M\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.1200 106.0800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 197.7600 106.0800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.8400 106.0800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.7600 106.0800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
u
  0.000 0.122 0.122 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  201.1200 195.3600 m
  201.1200 170.1600 L
  203.2800 170.1600 L
  195.9600 159.3600 L
  188.5200 170.1600 L
  190.6800 170.1600 L
  190.6800 195.3600 L
  201.1200 195.3600 L
B
U
u
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  82.0800 195.9600 m
  111.7200 166.3200 L
  113.0400 167.6400 L
  121.2000 150.6000 L
  104.1600 158.7600 L
  105.3600 159.9600 L
  75.7200 189.6000 L
  82.0800 195.9600 L
B
U
u
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
  310.2000 189.6000 m
  280.5600 159.9600 L
  281.7600 158.7600 L
  264.7200 150.4800 L
  272.8800 167.6400 L
  274.2000 166.3200 L
  303.8400 195.9600 L
  310.2000 189.6000 L
B
U
  0.000 0.122 0.122 0.000 k
  0.000 0.000 0.000 1.000 K
u
  129.6000 3.6000 m
  273.6000 3.6000 L
  273.6000 51.8400 L
  129.6000 51.8400 L
  129.6000 3.6000 L
B
  201.6000 27.7200 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 143.2800 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(M\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 160.5600 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.2000 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 179.2800 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(u\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.3600 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.1200 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.7600 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.6800 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.4400 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(u\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.5200 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 235.4400 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 240.4800 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.5600 20.8800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(g\r) Tx
TO
  1.000 1.000 0.000 0.000 K
u
  0.000 0.122 0.122 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  201.1200 87.3600 m
  201.1200 62.1600 L
  203.2800 62.1600 L
  195.9600 51.3600 L
  188.5200 62.1600 L
  190.6800 62.1600 L
  190.6800 87.3600 L
  201.1200 87.3600 L
B
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 948 3870 a
 currentpoint currentpoint translate 1 0.57849 div 1 0.3855 div scale
neg exch neg exch translate
 948 3870 a 2625 4145 a Fl(2)p
eop
%%Page: 3 3
3 2 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 350 92 5047 7 v 350 379 7 287 v 409 287
a Fk(Our)77 b(Hw-Sw)h(Co-Design)g(Approac)-6 b(h)77 b(&)g(Motiv)-13
b(ations)p 5389 379 V 350 386 5047 7 v 5393 455 73 301
v 419 455 5047 73 v 286 801 a Fl(An)57 b(in)-5 b(tegrated)57
b(approac)-5 b(h)57 b(to)h(hardw)-5 b(are-soft)g(w)g(are)58
b(co-design:)348 1199 y Fj(+)86 b Fl(in)-5 b(tro)5 b(ducing)p
Red 58 w(formal)59 b(tec)-5 b(hniques)55 b(\()p Fi(algebr)-9
b(aic)62 b(appr)-9 b(o)g(ach)p Fl(\))p Blue 58 w(in)k(to)58
b(the)596 1442 y(co-design)f(pro)5 b(cess)56 b(to)i(the)e(utmost)i
(exten)-5 b(t;)348 1800 y Fj(+)86 b Fl(in)-5 b(tegrating)p
Red 59 w(program)58 b(analysis)h(tec)-5 b(hniques)p Blue
56 w(with)58 b(formal)h(dev)-5 b(elopmen)g(t)596 2044
y(pro)5 b(cess)56 b(\(transformation/re\014nemen)-5 b(t\).)286
2441 y(Motiv)-10 b(ations:)415 2838 y Fj(,)86 b Fl(existing)58
b(successful)d(applications)k(in)f(program)h(algebra:)77
b(ProCoS)415 3195 y Fj(,)86 b Fl(apt)57 b(to)g(ensure)f(the)h
(correctness)f(for)h(the)g(design)g(pro)5 b(cess)415
3553 y Fj(,)86 b Fl(facilitate)58 b(to)g(exploit)g(CAD)f(to)5
b(ols)59 b(with)f(high)f(reliabilit)-5 b(y)2625 4145
y(3)p eop
%%Page: 3 4
3 3 bop Blue Red 4962 -362 a Fr(ICFEM2002)p Blue 0 -293
5816 7 v 997 3864 a
 currentpoint currentpoint translate 0.39412 0.34764 scale neg exch
neg exch translate
 997 3864 a @beginspecial 0 @llx 0
@lly 561 @urx 636 @ury 5610 @rwi @setspecial
%%BeginDocument: ./graph/ourcodesignE.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\pos- confs-letters\slides\graph\ourcodesignE.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 561 636
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 561 636
%AI3_TileBox: 0 0 561 636
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

  0.247 0.122 0.000 0.000 k
 [] 0 d
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  0.247 0.122 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
*u
  311.8829 582.4800 m
  317.3163 582.4859  321.7157 586.8867  321.7200 592.3200 C
  321.7200 621.9600 L
  321.7157 627.3979  317.3092 631.8005  311.8713 631.8000 C
  104.1494 631.8000 L
  98.7123 631.7898  94.3083 627.3680  94.3200 621.9308 C
  94.3200 592.3142 L
  94.3275 586.8808  98.7296 582.4827  104.1629 582.4800 C
  311.8829 582.4800 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 119.7600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 131.2800 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.3600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 149.2800 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.7600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 164.4000 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.2400 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.2800 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.8000 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.3200 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.9600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.6000 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.3600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.8400 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.6000 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.2400 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 262.3200 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 268.8000 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 274.5600 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 284.6400 600.0000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  148.4400 452.6400 m
  267.9600 452.6400 L
  267.9600 492.2400 L
  148.4400 492.2400 L
  148.4400 452.6400 L
B
  208.2000 472.4400 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 183.3600 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(P\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.4400 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 199.2000 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.1200 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.3200 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.5200 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.2800 476.0400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 158.1600 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(T\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.5200 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.2800 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.2000 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.1200 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.8800 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 199.9200 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.8400 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.6000 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.8400 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.7600 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.8000 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.4000 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.3200 458.7600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.000 0.373 0.373 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  117.3600 379.2000 m
  304.5600 379.2000 L
  304.5600 418.8000 L
  117.3600 418.8000 L
  117.3600 379.2000 L
B
  210.9600 399.0000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 125.6400 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.4800 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.1600 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 160.9200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.4400 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 186.1200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.1600 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(P\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.1200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.2000 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.8400 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.3200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 235.0800 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 241.5600 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 247.3200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.4000 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 268.9200 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 274.6800 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 286.2000 391.8000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  147.9600 300.0000 m
  268.5600 300.0000 L
  268.5600 339.6000 L
  147.9600 339.6000 L
  147.9600 300.0000 L
B
  208.2600 319.8000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 151.6800 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(O\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.5200 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 179.0400 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.5200 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.2800 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.1200 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.8800 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 220.8000 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.8800 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.3600 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.1200 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 253.2000 312.6000 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  28.4400 111.7200 m
  130.2000 111.7200 L
  130.2000 211.0800 L
  28.4400 211.0800 L
  28.4400 111.7200 L
B
  79.3200 161.4000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 32.1600 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 41.5200 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 53.7600 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.0800 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.4400 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.0800 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.4400 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.2000 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.5600 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 108.4800 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 114.9600 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.0000 183.3600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 43.3200 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 51.2400 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 57.0000 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 62.7600 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 65.6400 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.5200 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.5600 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.6000 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.2000 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.0800 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 90.8400 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 96.6000 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.4800 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 105.2400 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 112.4400 150.9600 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.7200 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 38.6400 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 44.4000 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 53.0400 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.8000 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.6800 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.5600 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.3200 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.6400 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 77.5200 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 80.4000 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(O\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.0400 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.8000 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.5600 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 104.8800 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 109.9200 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 113.5200 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 116.4000 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 122.1600 138.7200 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 62.4000 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.1600 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.2000 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.2400 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.8400 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.6000 126.4800 0 Tp
TP
88.372093 Tz
/_Times-Bold 11.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  271.8000 111.7200 m
  382.4400 111.7200 L
  382.4400 211.0800 L
  271.8000 211.0800 L
  271.8000 111.7200 L
B
  327.1200 161.4000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 275.2800 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 288.2400 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 301.2000 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.5200 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.6000 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 324.2400 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 334.3200 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 340.0800 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 350.1600 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 358.0800 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 366.0000 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 371.0400 178.6800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 280.6800 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.0400 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 299.4000 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.2800 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2000 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.9600 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 321.7200 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 328.2000 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 332.5200 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 336.8400 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.6000 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 348.3600 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 352.6800 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.1600 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 364.9200 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 370.6800 143.4000 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 291.4800 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 300.8400 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2000 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 313.0800 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 319.5600 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 325.3200 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 331.8000 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 336.1200 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.6000 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 348.3600 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 353.4000 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 357.7200 129.7200 0 Tp
TP
93.617021 Tz
/_Times-Bold 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
u
  110.1600 223.2000 m
  288.1200 223.2000 L
  288.1200 246.3600 L
  110.1600 246.3600 L
  110.1600 223.2000 L
F
  199.1400 234.7800 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 110.1600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 126.0000 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.6800 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 145.4400 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 156.9600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 170.6400 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 175.6800 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.0800 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.1600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(-\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.6400 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.1600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 228.2400 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 239.7600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 246.2400 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.7600 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 266.4000 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 274.3200 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 280.0800 227.6400 0 Tp
TP
91.139241 Tz
/_Times-Bold 19.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  393.4800 3.6000 m
  520.9200 3.6000 L
  520.9200 80.2800 L
  393.4800 80.2800 L
  393.4800 3.6000 L
B
  457.2000 41.9400 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 398.1600 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(P\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 408.2400 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 415.4400 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 421.2000 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 426.2400 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 434.1600 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 439.9200 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 452.1600 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 460.0800 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 468.0000 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 475.2000 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 482.4000 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 486.7200 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 497.5200 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 505.4400 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 511.2000 54.2400 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 422.6400 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.7200 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 438.4800 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 443.5200 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 447.1200 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 459.3600 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 467.2800 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 472.3200 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 475.9200 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.8400 36.9600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 406.0800 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 411.1200 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 421.9200 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 429.8400 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(-\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 434.8800 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 443.5200 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 447.1200 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 459.3600 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 467.2800 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 470.8800 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 478.8000 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.8400 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 487.4400 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 495.3600 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 503.2800 19.6800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  301.8000 526.8000 m
  421.3200 526.8000 L
  421.3200 566.4000 L
  301.8000 566.4000 L
  301.8000 526.8000 L
B
  361.5600 546.6000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 307.5600 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 316.2000 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 323.4000 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 329.8800 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 334.9200 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.1200 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 355.0800 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.4000 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 370.2000 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 378.8400 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 386.7600 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 391.0800 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 398.2800 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 404.7600 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 409.0800 541.2000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  0.247 0.122 0.000 0.000 k
  0.247 0.122 0.000 0.000 k
*u
  466.4432 444.9600 m
  472.4729 444.9666  477.3552 449.8503  477.3600 455.8800 C
  477.3600 488.6400 L
  477.3552 494.6747  472.4650 499.5606  466.4303 499.5600 C
  357.4683 499.5600 L
  351.4343 499.5487  346.5470 494.6416  346.5600 488.6076 C
  346.5600 455.8735 L
  346.5684 449.8438  351.4536 444.9630  357.4832 444.9600 C
  466.4432 444.9600 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 384.9600 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(R\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 395.0400 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 401.5200 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 408.7200 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 414.4800 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 421.6800 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 428.8800 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.4800 475.9200 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 355.0800 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.4000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 366.6000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 373.8000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 380.2800 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 384.6000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 388.2000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 395.4000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 402.6000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 408.3600 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 411.9600 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 419.1600 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 424.9200 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.1200 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 438.6000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 445.0800 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 450.8400 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 456.6000 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 463.0800 460.0800 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  0.247 0.122 0.000 0.000 k
  0.247 0.122 0.000 0.000 k
*u
  483.4832 371.7600 m
  489.5129 371.7666  494.3952 376.6503  494.4000 382.6800 C
  494.4000 415.2000 L
  494.3952 421.2347  489.5050 426.1206  483.4703 426.1200 C
  374.7483 426.1200 L
  368.7143 426.1087  363.8270 421.2016  363.8400 415.1676 C
  363.8400 382.6735 L
  363.8484 376.6438  368.7336 371.7630  374.7632 371.7600 C
  483.4832 371.7600 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 372.9600 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 385.2000 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 396.7200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 401.0400 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 411.8400 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 418.3200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 425.5200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 434.1600 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 438.4800 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 443.5200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 450.7200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 457.9200 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 462.9600 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 471.6000 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 478.0800 402.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 378.0000 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(&\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 390.9600 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 395.2800 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 406.8000 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 414.7200 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 427.6800 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 436.3200 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 444.2400 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 452.8800 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 460.0800 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 468.7200 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 473.7600 384.6000 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  0.247 0.122 0.000 0.000 k
  0.247 0.122 0.000 0.000 k
*u
  536.8860 229.0800 m
  548.0177 229.0922  557.0311 238.1083  557.0400 249.2400 C
  557.0400 309.7200 L
  557.0311 320.8611  548.0031 329.8810  536.8621 329.8800 C
  446.6183 329.8800 L
  435.4788 329.8592  426.4559 320.7998  426.4801 309.6603 C
  426.4800 249.2281 L
  426.4955 238.0963  435.5142 229.0856  446.6460 229.0800 C
  536.8860 229.0800 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 448.9200 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(R\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 459.7200 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 466.9200 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 474.8400 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 480.6000 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.5200 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 496.4400 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 500.0400 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 507.2400 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.8400 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 518.7600 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 526.6800 300.3600 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 461.8800 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 475.5600 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.4800 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 491.4000 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 499.3200 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 507.2400 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.8400 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 514.4400 283.0800 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 437.7600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(D\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 448.5600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 455.7600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 461.5200 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 465.1200 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 473.0400 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 480.9600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.1600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(d\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 496.0800 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 499.6800 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(H\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 511.2000 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 522.0000 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 526.3200 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 534.9600 265.8000 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(w\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 451.4400 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 462.2400 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 470.1600 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 482.4000 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 490.3200 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 498.2400 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 506.1600 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 513.3600 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 521.2800 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 526.3200 248.5200 0 Tp
TP
91.525424 Tz
/_Times-Bold 14.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.5000 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  311.6400 384.8400 m
  426.8400 314.1600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  304.5600 389.1600 m
  315.8400 387.3600 L
  311.4000 379.9200 L
  304.5600 389.1600 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  208.2000 582.4800 m
  208.2000 499.9200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  208.2000 492.2400 m
  203.8800 502.8000 L
  212.5200 502.8000 L
  208.2000 492.2400 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  321.7200 607.2000 m
  383.7600 607.2000 L
S
U
u
  0.000 0.000 0.000 1.000 K
  383.7600 607.2000 m
  383.7600 577.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  383.7600 569.7600 m
  379.4400 580.3200 L
  388.0800 580.3200 L
  383.7600 569.7600 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  238.0800 546.6000 m
  301.8000 546.7200 L
S
U
u
  0.000 0.000 0.000 1.000 K
  238.0800 546.6000 m
  238.0800 499.9200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  238.0800 492.2400 m
  233.7600 502.8000 L
  242.4000 502.8000 L
  238.0800 492.2400 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  276.2400 472.4400 m
  346.5600 472.3200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  267.9600 472.4400 m
  278.6400 476.6400 L
  278.5200 468.1200 L
  267.9600 472.4400 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  312.8400 398.8800 m
  363.8400 399.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  304.5600 398.8800 m
  315.1200 403.2000 L
  315.2400 394.6800 L
  304.5600 398.8800 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  401.8800 234.0000 m
  426.4800 251.5200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  395.0400 229.2000 m
  401.1600 238.8000 L
  406.2000 231.8400 L
  395.0400 229.2000 L
B
U
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
u
  158.7600 111.7200 m
  243.3600 111.7200 L
  243.3600 211.0800 L
  158.7600 211.0800 L
  158.7600 111.7200 L
B
  201.0600 161.4000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 166.4400 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.6400 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.7200 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.4800 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 197.4000 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.3200 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.0800 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.7200 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.6400 165.0000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 174.3600 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(D\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.3200 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.2400 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.1600 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.2000 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.5600 144.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.5000 w
  0.000 0.000 0.000 1.000 K
1 j
  134.6400 161.2800 m
  154.3200 161.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  130.2000 161.2800 m
  140.7600 165.6000 L
  135.8400 161.2800 L
  140.8800 157.0800 L
  130.2000 161.2800 L
B
U
u
  0.000 0.000 0.000 1.000 k
  158.7600 161.4000 m
  148.2000 157.0800 L
  153.1200 161.4000 L
  148.0800 165.6000 L
  158.7600 161.4000 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  247.2000 161.4000 m
  267.9600 161.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  243.3600 161.4000 m
  253.9200 165.6000 L
  249.1200 161.4000 L
  253.9200 157.2000 L
  243.3600 161.4000 L
B
U
u
  0.000 0.000 0.000 1.000 k
  271.8000 161.4000 m
  261.2400 157.2000 L
  266.0400 161.4000 L
  261.2400 165.6000 L
  271.8000 161.4000 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  72.2400 31.0800 m
  133.2000 31.0800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  140.8800 31.0800 m
  130.3200 26.7600 L
  130.3200 35.2800 L
  140.8800 31.0800 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  72.2400 109.2000 m
  72.2400 31.0800 L
S
U
u
  0.000 0.000 0.000 1.000 K
  271.9200 31.0800 m
  332.8800 31.0800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  264.2400 31.0800 m
  274.8000 35.4000 L
  274.8000 26.8800 L
  264.2400 31.0800 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  332.5200 109.4400 m
  332.5200 31.0800 L
S
U
u
  0.000 0.000 0.000 1.000 K
  202.5600 110.8800 m
  202.5600 61.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  202.5600 53.7600 m
  198.2400 64.3200 L
  206.8800 64.3200 L
  202.5600 53.7600 L
B
U
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
u
  3.6000 279.2400 m
  117.3600 279.2400 L
  117.3600 339.0000 L
  3.6000 339.0000 L
  3.6000 279.2400 L
B
  60.4800 309.1200 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 41.0400 320.6400 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(R\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 51.1200 320.6400 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.3200 320.6400 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 65.5200 320.6400 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.7200 320.6400 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 6.8400 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(P\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 15.4800 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 21.9600 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 27.7200 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(f\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 32.0400 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 39.2400 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 45.0000 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.8000 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.0000 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.2000 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(c\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.6800 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.1600 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(/\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.7600 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 96.8400 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 104.0400 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 109.8000 304.8000 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 28.8000 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 38.1600 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 44.6400 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 51.8400 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(l\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.4400 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(u\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 62.6400 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.8400 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.1600 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 77.7600 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 84.9600 288.9600 0 Tp
TP
89.090909 Tz
/_Times-Bold 13.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.5000 w
  0.000 0.000 0.000 1.000 K
1 j
  125.6400 319.9200 m
  147.9600 319.8000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  117.3600 319.9200 m
  128.0400 324.1200 L
  127.9200 315.6000 L
  117.3600 319.9200 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  54.1200 472.4400 m
  140.7600 472.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  148.4400 472.4400 m
  137.8800 468.1200 L
  137.8800 476.6400 L
  148.4400 472.4400 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  54.1200 472.4400 m
  54.1200 339.0000 L
S
U
u
  208.2000 452.6400 m
  208.2000 426.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  208.2000 418.8000 m
  203.8800 429.3600 L
  212.5200 429.3600 L
  208.2000 418.8000 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  208.0800 379.2000 m
  208.0800 347.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  208.0800 339.6000 m
  203.7600 350.1600 L
  212.4000 350.1600 L
  208.0800 339.6000 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  382.4400 161.4000 m
  457.2000 161.4000 L
S
U
u
  0.000 0.000 0.000 1.000 K
  208.2000 300.0000 m
  208.2000 263.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  208.2000 255.7200 m
  203.8800 266.2800 L
  212.5200 266.2800 L
  208.2000 255.7200 L
B
U
u
1.5000 w
  0.000 0.000 0.000 1.000 K
  457.2000 161.4000 m
  457.2000 87.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  457.2000 80.2800 m
  452.8800 90.8400 L
  461.5200 90.8400 L
  457.2000 80.2800 L
B
U
  0.247 0.122 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
u
  140.8800 8.4000 m
  264.2400 8.4000 L
  264.2400 53.7600 L
  140.8800 53.7600 L
  140.8800 8.4000 L
B
  202.5600 31.0800 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 160.8000 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.2800 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 176.6400 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.4000 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.3200 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.9600 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.8800 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(a\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.5200 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.2800 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.3200 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.9600 34.6800 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 168.3600 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(&\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.7600 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(T\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.5600 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.4800 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(s\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.9600 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.7200 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.7600 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 228.1200 15.9600 0 Tp
TP
91.044776 Tz
/_Times-Bold 16.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(g\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  13.4400 250.6800 m
  391.3200 250.6800 L
  391.3200 95.1600 L
  13.4400 95.1600 L
  13.4400 250.6800 L
n
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  13.4400 250.6800 m
  20.6400 250.6800 L
S
U
u
  29.2800 250.6800 m
  36.4800 250.6800 L
S
U
u
  45.1200 250.6800 m
  52.3200 250.6800 L
S
U
u
  60.9600 250.6800 m
  68.1600 250.6800 L
S
U
u
  76.8000 250.6800 m
  84.0000 250.6800 L
S
U
u
  92.6400 250.6800 m
  99.8400 250.6800 L
S
U
u
  108.4800 250.6800 m
  115.6800 250.6800 L
S
U
u
  124.3200 250.6800 m
  131.5200 250.6800 L
S
U
u
  140.1600 250.6800 m
  147.3600 250.6800 L
S
U
u
  156.0000 250.6800 m
  163.2000 250.6800 L
S
U
u
  171.8400 250.6800 m
  179.0400 250.6800 L
S
U
u
  187.6800 250.6800 m
  194.8800 250.6800 L
S
U
u
  203.5200 250.6800 m
  210.7200 250.6800 L
S
U
u
  219.3600 250.6800 m
  226.5600 250.6800 L
S
U
u
  235.2000 250.6800 m
  242.4000 250.6800 L
S
U
u
  251.0400 250.6800 m
  258.2400 250.6800 L
S
U
u
  266.8800 250.6800 m
  274.0800 250.6800 L
S
U
u
  282.7200 250.6800 m
  289.9200 250.6800 L
S
U
u
  298.5600 250.6800 m
  305.7600 250.6800 L
S
U
u
  314.4000 250.6800 m
  321.6000 250.6800 L
S
U
u
  330.2400 250.6800 m
  337.4400 250.6800 L
S
U
u
  346.0800 250.6800 m
  353.2800 250.6800 L
S
U
u
  361.9200 250.6800 m
  369.1200 250.6800 L
S
U
u
  377.7600 250.6800 m
  384.9600 250.6800 L
S
U
u
  391.3200 248.4000 m
  391.3200 241.2000 L
S
U
u
  391.3200 232.5600 m
  391.3200 225.3600 L
S
U
u
  391.3200 216.7200 m
  391.3200 209.5200 L
S
U
u
  391.3200 200.8800 m
  391.3200 193.6800 L
S
U
u
  391.3200 185.0400 m
  391.3200 177.8400 L
S
U
u
  391.3200 169.2000 m
  391.3200 162.0000 L
S
U
u
  391.3200 153.3600 m
  391.3200 146.1600 L
S
U
u
  391.3200 137.5200 m
  391.3200 130.3200 L
S
U
u
  391.3200 121.6800 m
  391.3200 114.4800 L
S
U
u
  391.3200 105.8400 m
  391.3200 98.6400 L
S
U
u
  386.1600 95.1600 m
  378.9600 95.1600 L
S
U
u
  370.3200 95.1600 m
  363.1200 95.1600 L
S
U
u
  354.4800 95.1600 m
  347.2800 95.1600 L
S
U
u
  338.6400 95.1600 m
  331.4400 95.1600 L
S
U
u
  322.8000 95.1600 m
  315.6000 95.1600 L
S
U
u
  306.9600 95.1600 m
  299.7600 95.1600 L
S
U
u
  291.1200 95.1600 m
  283.9200 95.1600 L
S
U
u
  275.2800 95.1600 m
  268.0800 95.1600 L
S
U
u
  259.4400 95.1600 m
  252.2400 95.1600 L
S
U
u
  243.6000 95.1600 m
  236.4000 95.1600 L
S
U
u
  227.7600 95.1600 m
  220.5600 95.1600 L
S
U
u
  211.9200 95.1600 m
  204.7200 95.1600 L
S
U
u
  196.0800 95.1600 m
  188.8800 95.1600 L
S
U
u
  180.2400 95.1600 m
  173.0400 95.1600 L
S
U
u
  164.4000 95.1600 m
  157.2000 95.1600 L
S
U
u
  148.5600 95.1600 m
  141.3600 95.1600 L
S
U
u
  132.7200 95.1600 m
  125.5200 95.1600 L
S
U
u
  116.8800 95.1600 m
  109.6800 95.1600 L
S
U
u
  101.0400 95.1600 m
  93.8400 95.1600 L
S
U
u
  85.2000 95.1600 m
  78.0000 95.1600 L
S
U
u
  69.3600 95.1600 m
  62.1600 95.1600 L
S
U
u
  53.5200 95.1600 m
  46.3200 95.1600 L
S
U
u
  37.6800 95.1600 m
  30.4800 95.1600 L
S
U
u
  21.8400 95.1600 m
  14.6400 95.1600 L
S
U
u
  13.4400 102.6000 m
  13.4400 109.8000 L
S
U
u
  13.4400 118.4400 m
  13.4400 125.6400 L
S
U
u
  13.4400 134.2800 m
  13.4400 141.4800 L
S
U
u
  13.4400 150.1200 m
  13.4400 157.3200 L
S
U
u
  13.4400 165.9600 m
  13.4400 173.1600 L
S
U
u
  13.4400 181.8000 m
  13.4400 189.0000 L
S
U
u
  13.4400 197.6400 m
  13.4400 204.8400 L
S
U
u
  13.4400 213.4800 m
  13.4400 220.6800 L
S
U
u
  13.4400 229.3200 m
  13.4400 236.5200 L
S
U
u
  13.4400 245.1600 m
  13.4400 250.6800 L
S
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 997 3864 a
 currentpoint currentpoint translate 1 0.39412 div 1 0.34764 div scale
neg exch neg exch translate
 997 3864 a 2793 4211 a Fl(3-1)p
eop
%%Page: 4 5
4 4 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1170 213 3407 7 v 1170 523 7 310 v 1229
419 a Fk(Hardw)-6 b(are/Soft)g(w)g(are)76 b(P)-6 b(artitioning)p
4570 523 V 1170 530 3407 7 v 4573 598 73 324 v 1239 598
3407 73 v 379 1151 a Fj(q)86 b Fl(Implemen)-5 b(tation-orien)g(ted)59
b(computation)e(and)g(resources)p Red 56 w Fi(al)9 b(lo)-9
b(c)g(ation)p Blue 379 1532 a Fj(q)p Red 86 w Fi(Partitioning)p
Blue 56 w Fl(requiremen)k(t)58 b(sp)5 b(eci\014cation)56
b(in)-5 b(to)58 b(HW)g(and)f(SW)596 1776 y(sp)5 b(eci\014cations)379
2158 y Fj(q)86 b Fl(Related)57 b(w)-5 b(ork:)600 2539
y Fj(\340)87 b Fl(informal:)78 b(fo)5 b(cusing)57 b(on)g(the)g
(algorithmic)j(asp)5 b(ect)600 2852 y Fj(\340)87 b Fl(formal:)837
3130 y Fj(4)f Fl(Sampaio)58 b(et.)76 b(al)58 b(:)76 b(Splitting)59
b(and)e(Joining)837 3374 y Fj(4)86 b Fl(Our)57 b(former)h(w)-5
b(ork:)77 b(Hw/Sw)58 b(P)-5 b(artitioning)61 b(in)c(Occam)2625
4145 y(4)p eop
%%Page: 5 6
5 5 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1855 264 2038 7 v 1855 511 7 247 v 1913
459 a Fk(Main)78 b(Con)-6 b(tribution)p 3885 511 V 1855
518 2038 7 v 3888 586 73 261 v 1924 586 2038 73 v 286
1001 a Fl(In)57 b(this)h(pap)5 b(er)56 b(w)-5 b(e)424
1456 y Fh(\017)86 b Fl(prop)5 b(ose)p OrangeRed 56 w(an)57
b(algebraic)i(approac)-5 b(h)p Blue 57 w(to)57 b(hardw)-5
b(are-soft)g(w)g(are)59 b(partitioning)596 1700 y(in)f(V)-14
b(erilog)59 b(HDL;)424 2082 y Fh(\017)86 b Fl(design)57
b(a)g(set)g(of)p OrangeRed 57 w(comp)5 b(ositional)60
b(algebraic)e(rules)p Blue 58 w(to)f(h)-5 b(w/sw)596
2326 y(partitioning;)424 2707 y Fh(\017)86 b Fl(explore)p
OrangeRed 57 w(algebraic)59 b(pro)5 b(ofs)p Blue 57 w(for)57
b(all)i(the)e(partitioning)i(rules)424 3089 y Fh(\017)86
b Fl(in)-5 b(v)g(estigate)58 b(h)-5 b(w/sw)58 b(partitioning)h(for)f(b)
5 b(oth)p OrangeRed 56 w(k)-5 b(ernel)58 b(sp)5 b(eci\014cation)p
Blue 56 w(and)p OrangeRed 596 3332 a(whole)58 b(en)-5
b(vironmen)g(t-driv)g(en)58 b(system)p Blue 2625 4145
a(5)p eop
%%Page: 6 7
6 6 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 540 -60 4668 7 v 540 227 7 287 v 598 135
a Fk(The)p Red 77 w(V)-19 b(erilog)p Blue 77 w(Hardw)-6
b(are)76 b(Description)i(Language)p 5200 227 V 540 234
4668 7 v 5204 303 73 301 v 608 303 4668 73 v BrickRed
286 570 a Fl(Main)58 b(features:)p Blue 359 879 a Fj(\340)87
b Fl(Ev)-5 b(en)g(t-driv)g(en)57 b(computation)359 1163
y Fj(\340)87 b Fl(Shared-v)-10 b(ariable)58 b(comm)-5
b(unication)359 1446 y Fj(\340)87 b Fl(Both)57 b(b)5
b(eha)-5 b(vioral)58 b(and)f(structural)h(mo)5 b(delling)p
BrickRed 286 1755 a(Syn)-5 b(tax:)p Blue 716 1948 a Fg(P)100
b Fl(::=)48 b Fg(S)114 b Fh(j)105 b Fg(P)72 b Fh(k)48
b Fg(P)128 b Fh(j)105 b Fi(var)47 b Fg(x)39 b Fh(\017)g
Fg(P)716 2249 y(S)58 b Fl(::=)133 b Fg(P)24 b(C)12 b
Fl(\(primitiv)-5 b(e)60 b(command\))105 b Fh(j)g Fg(S)10
b Fl(;)29 b Fg(S)114 b Fh(j)105 b Fi(if)65 b Fg(b)29
b(S)38 b(el)s(se)29 b(S)115 b Fh(j)105 b Fi(while)42
b Fg(b)29 b(S)1243 2542 y Fh(j)105 b Fl(\()p Fg(g)35
b(S)10 b Fl(\)[)-29 b(])28 b Fg(:)h(:)g(:)f Fl([)-29
b(]\()p Fg(g)35 b(S)10 b Fl(\))104 b Fh(j)i Fi(always)43
b Fg(S)115 b Fh(j)105 b Fi(c)-9 b(ase)42 b Fl(\()p Fg(e)p
Fl(\))29 b(\()p Fg(pt)57 b(S)10 b Fl(\))29 b Fg(:)g(:)g(:)e
Fl(\()p Fg(pt)57 b(S)10 b Fl(\))441 2780 y(where)802
3016 y Fg(P)24 b(C)60 b Fl(::=)105 b Fg(v)83 b Fl(:=)76
b Fg(e)106 b Fh(j)f Fi(skip)116 b Fh(j)153 b(?)g(j)g(!)48
b Fg(\021)3618 3042 y Ff(v)3806 3016 y Fh(j)105 b Fg(v)83
b Fl(:=)76 b Fg(cg)63 b(e)802 3308 y(g)55 b Fl(::=)104
b(#\001)59 b(\(time)f(dela)-5 b(y\))105 b Fh(j)g Fg(eg)64
b Fl(\(ev)-5 b(en)g(t)57 b(con)-5 b(trol\))106 b Fh(j)152
b(!)19 b Fg(\021)4712 3334 y Ff(v)4852 3308 y Fl(\(output)57
b(ev)-5 b(en)g(t\))802 3601 y Fg(\021)887 3627 y Ff(v)1018
3601 y Fl(::=)152 b Fe(s)48 b Fg(v)64 b Fl(\(v)-10 b(alue)58
b(c)-5 b(hange\))104 b Fh(j)153 b(")47 b Fg(v)65 b Fl(\(v)-10
b(alue)57 b(rising\))107 b Fh(j)153 b(#)48 b Fg(v)64
b Fl(\(v)-10 b(alue)58 b(falling\))2625 4145 y(6)p eop
%%Page: 7 8
7 7 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 483 233 4782 7 v 483 520 7 287 v 541 428
a Fk(Related)78 b(W)-19 b(ork)77 b(|)h(F)-19 b(ormal)77
b(Seman)-6 b(tics)77 b(of)h(V)-19 b(erilog)p 5257 520
V 483 527 4782 7 v 5261 595 73 301 v 552 595 4782 73
v 351 1147 a Fj(\342)86 b Fl(Sim)-5 b(ulator-based)59
b(in)-5 b(terpretation:)77 b(Gordon95)351 1529 y Fj(\342)86
b Fl(Op)5 b(erational)58 b(seman)-5 b(tics:)77 b(HeXu00,)56
b(LiHe01,)i Fh(\001)29 b(\001)g(\001)351 1911 y Fj(\342)86
b Fl(Denotational)57 b(seman)-5 b(tics:)77 b(Zh)-5 b(uHe00)351
2292 y Fj(\342)p Red 86 w Fl(Algebraic)58 b(seman)-5
b(tics)p Blue(:)77 b(He02)351 2674 y Fj(\342)86 b Fl(Linking)58
b(di\013eren)-5 b(t)57 b(seman)-5 b(tics:)77 b(Zh)-5
b(uBo)g(w)g(enHe01,)57 b(He02)286 3129 y(Our)g(application:)p
Red 716 3470 a Fi(algebr)-9 b(aic)62 b(laws)p Blue 49
w Fl(=)-29 b Fh(\))p Red 48 w Fi(derive)-9 b(d)62 b(sp)-9
b(e)g(ci\014c)63 b(laws)p Blue 48 w Fl(=)-29 b Fh(\))p
Red 49 w Fi(hw/sw)62 b(p)-9 b(artitioning)p Blue 2625
4145 a Fl(7)p eop
%%Page: 8 9
8 8 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 700 -54 4347 7 v 700 255 7 310 v 759 152
a Fk(Hardw)-6 b(are/Soft)g(w)g(are)76 b(P)-6 b(artitioning)77
b(Strategy)p 5040 255 V 700 262 4347 7 v 5043 331 73
324 v 769 331 4347 73 v 752 3992 a
 currentpoint currentpoint translate 0.43158 0.39429 scale neg exch
neg exch translate
 752 3992 a @beginspecial
0 @llx 0 @lly 578 @urx 532 @ury 5780 @rwi @setspecial
%%BeginDocument: ./graph/verilogpart.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\pos- confs-letters\slides\graph\verilogpart.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 578 532
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 578 532
%AI3_TileBox: 0 0 578 532
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.373 0.373 0.000 0.000 k
 [] 0 d
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  237.3600 484.0800 m
  237.3600 460.3200 L
  239.0400 460.3200 L
  233.2800 450.2400 L
  227.5200 460.3200 L
  229.2000 460.3200 L
  229.2000 484.0800 L
  237.3600 484.0800 L
B
U
  0.122 0.122 0.000 0.000 k
  0.000 0.122 0.122 0.000 K
u
  117.4800 411.4800 m
  360.6000 411.4800 L
  360.6000 451.0800 L
  117.4800 451.0800 L
  117.4800 411.4800 L
B
  239.0400 431.2800 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 123.1200 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(H\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 136.0800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 K
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 144.7200 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 152.6400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 162.7200 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 175.6800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.3200 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.2400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.1600 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(/\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.2000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.2800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 223.9200 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.6800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 235.4400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.4000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.0400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.9600 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 272.8800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.2000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(A\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.1600 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 295.2000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 300.2400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 308.8800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 316.8000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 325.4400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 331.2000 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 336.2400 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 344.8800 424.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
u
  0.373 0.373 0.000 0.000 k
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  237.3600 409.9200 m
  237.3600 386.1600 L
  239.0400 386.1600 L
  233.2800 376.0800 L
  227.5200 386.1600 L
  229.2000 386.1600 L
  229.2000 409.9200 L
  237.3600 409.9200 L
B
U
  0.000 0.373 0.373 0.000 k
  0.000 0.373 0.373 0.000 K
u
  88.5600 252.4800 m
  354.9600 252.4800 L
  354.9600 303.2400 L
  88.5600 303.2400 L
  88.5600 252.4800 L
B
  221.7600 277.8600 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 98.2800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.502 0.000 0.502 0.498 K
0 j
  0.502 0.000 0.502 0.498 k
(H\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 111.2400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 119.8800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 127.8000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(d\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 137.8800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(w\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 150.8400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 159.4800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 167.4000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 175.3200 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(/\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 180.3600 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(S\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 190.4400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 199.0800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(f\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 204.8400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 210.6000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(w\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 223.5600 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 232.2000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 240.1200 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 248.0400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 252.3600 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(P\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 263.8800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 272.5200 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 280.4400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 286.2000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 291.2400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 297.0000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 302.0400 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 310.6800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 320.7600 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 325.8000 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 335.8800 281.5200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(g\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 130.6800 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(f\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 136.4400 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 145.0800 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 153.0000 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 157.3200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(K\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 171.7200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 179.6400 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 187.5600 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 197.6400 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 205.5600 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(l\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 210.6000 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 214.9200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(S\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 225.0000 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(p\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 235.0800 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 243.0000 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(c\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 250.9200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 255.9600 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(f\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 261.7200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 266.7600 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(c\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 274.6800 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 283.3200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 289.0800 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 294.1200 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 302.7600 260.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
u
  0.373 0.373 0.000 0.000 k
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  234.4800 337.0800 m
  234.4800 313.3200 L
  236.1600 313.3200 L
  230.4000 303.2400 L
  224.6400 313.3200 L
  226.3200 313.3200 L
  226.3200 337.0800 L
  234.4800 337.0800 L
B
U
u
  0.373 0.373 0.000 0.000 k
  0.373 0.373 0.000 0.000 K
  161.0400 252.1200 m
  161.0400 228.3600 L
  162.7200 228.3600 L
  156.9600 218.2800 L
  151.2000 228.3600 L
  152.8800 228.3600 L
  152.8800 252.1200 L
  161.0400 252.1200 L
B
U
u
  0.373 0.373 0.000 0.000 k
  0.373 0.373 0.000 0.000 K
  319.4400 252.1200 m
  319.4400 228.3600 L
  321.1200 228.3600 L
  315.3600 218.2800 L
  309.6000 228.3600 L
  311.2800 228.3600 L
  311.2800 252.1200 L
  319.4400 252.1200 L
B
U
  0.000 0.373 0.373 0.000 k
  0.000 0.373 0.373 0.000 K
u
  55.9200 85.5600 m
  369.2400 85.5600 L
  369.2400 139.6800 L
  55.9200 139.6800 L
  55.9200 85.5600 L
B
  212.5800 112.6200 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 61.6800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.502 0.000 0.502 0.498 K
0 j
  0.502 0.000 0.502 0.498 k
(H\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 74.6400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 83.2800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 91.2000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(d\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 101.2800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(w\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 114.2400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 122.8800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 130.8000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 138.7200 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(/\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 143.7600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(S\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 153.8400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 162.4800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(f\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 168.2400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 174.0000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(w\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 186.9600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 195.6000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 203.5200 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 211.4400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 215.7600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(P\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 227.2800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(a\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 235.9200 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 243.8400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 249.6000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 254.6400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 260.4000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 265.4400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 274.0800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 284.1600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 289.2000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 299.2800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(g\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 308.6400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 312.9600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(f\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 318.7200 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 327.3600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 335.2800 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 339.6000 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 345.3600 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(h\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 355.4400 116.2800 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 75.7200 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(W\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 92.2800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(h\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 102.3600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 111.0000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(l\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 116.0400 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 123.9600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 128.2800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(E\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 140.5200 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 150.6000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(v\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 159.9600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 165.0000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 172.9200 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(o\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 181.5600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 191.6400 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(m\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 206.7600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 214.6800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 224.7600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 230.5200 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(-\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 236.2800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(D\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 249.2400 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(r\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 257.1600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(i\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 262.2000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(v\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 271.5600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 279.4800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(n\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 289.5600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
( \r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 293.8800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(S\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 303.9600 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(y\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 312.6000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(s\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 320.5200 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(t\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 326.2800 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(e\r) Tx
TO
  0.502 0.000 0.502 0.498 K
0 To
1.0000 0.0000 0.0000 1.0000 334.2000 95.4000 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.502 0.000 0.502 0.498 k
(m\r) Tx
TO
  0.502 0.000 0.502 0.498 K
u
  0.373 0.373 0.000 0.000 k
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  153.9600 170.7600 m
  153.9600 147.0000 L
  155.6400 147.0000 L
  149.8800 136.9200 L
  144.1200 147.0000 L
  145.8000 147.0000 L
  145.8000 170.7600 L
  153.9600 170.7600 L
B
U
u
  0.373 0.373 0.000 0.000 k
  0.373 0.373 0.000 0.000 K
  318.1200 170.7600 m
  318.1200 147.0000 L
  319.8000 147.0000 L
  314.0400 136.9200 L
  308.2800 147.0000 L
  309.9600 147.0000 L
  309.9600 170.7600 L
  318.1200 170.7600 L
B
U
u
  0.373 0.373 0.000 0.000 k
  153.9600 85.8000 m
  153.9600 62.0400 L
  155.6400 62.0400 L
  149.8800 51.9600 L
  144.1200 62.0400 L
  145.8000 62.0400 L
  145.8000 85.8000 L
  153.9600 85.8000 L
B
U
u
  0.373 0.373 0.000 0.000 k
  0.373 0.373 0.000 0.000 K
  318.1200 85.8000 m
  318.1200 62.0400 L
  319.8000 62.0400 L
  314.0400 51.9600 L
  308.2800 62.0400 L
  309.9600 62.0400 L
  309.9600 85.8000 L
  318.1200 85.8000 L
B
U
u
  1.000 1.000 0.498 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  386.4000 353.8800 m
  550.9200 353.8800 L
  550.9200 275.0400 L
  386.4000 275.0400 L
  386.4000 353.8800 L
F
U
u
1.5000 w
  1.000 1.000 0.247 0.000 K
1 J
  386.4000 353.8800 m
  395.0400 353.8800 L
S
U
u
  399.3600 353.8800 m
  400.8000 353.8800 L
S
U
u
  405.1200 353.8800 m
  406.5600 353.8800 L
S
U
u
  410.8800 353.8800 m
  419.5200 353.8800 L
S
U
u
  423.8400 353.8800 m
  425.2800 353.8800 L
S
U
u
  429.6000 353.8800 m
  431.0400 353.8800 L
S
U
u
  435.3600 353.8800 m
  444.0000 353.8800 L
S
U
u
  448.3200 353.8800 m
  449.7600 353.8800 L
S
U
u
  454.0800 353.8800 m
  455.5200 353.8800 L
S
U
u
  459.8400 353.8800 m
  468.4800 353.8800 L
S
U
u
  472.8000 353.8800 m
  474.2400 353.8800 L
S
U
u
  478.5600 353.8800 m
  480.0000 353.8800 L
S
U
u
  484.3200 353.8800 m
  492.9600 353.8800 L
S
U
u
  497.2800 353.8800 m
  498.7200 353.8800 L
S
U
u
  503.0400 353.8800 m
  504.4800 353.8800 L
S
U
u
  508.8000 353.8800 m
  517.4400 353.8800 L
S
U
u
  521.7600 353.8800 m
  523.2000 353.8800 L
S
U
u
  527.5200 353.8800 m
  528.9600 353.8800 L
S
U
u
  533.2800 353.8800 m
  541.9200 353.8800 L
S
U
u
  546.2400 353.8800 m
  547.6800 353.8800 L
S
U
u
  550.9200 352.8000 m
  550.9200 351.3600 L
S
U
u
  550.9200 347.0400 m
  550.9200 338.4000 L
S
U
u
  550.9200 334.0800 m
  550.9200 332.6400 L
S
U
u
  550.9200 328.3200 m
  550.9200 326.8800 L
S
U
u
  550.9200 322.5600 m
  550.9200 313.9200 L
S
U
u
  550.9200 309.6000 m
  550.9200 308.1600 L
S
U
u
  550.9200 303.8400 m
  550.9200 302.4000 L
S
U
u
  550.9200 298.0800 m
  550.9200 289.4400 L
S
U
u
  550.9200 285.1200 m
  550.9200 283.6800 L
S
U
u
  550.9200 279.3600 m
  550.9200 277.9200 L
S
U
u
  549.4800 275.0400 m
  540.8400 275.0400 L
S
U
u
  536.5200 275.0400 m
  535.0800 275.0400 L
S
U
u
  530.7600 275.0400 m
  529.3200 275.0400 L
S
U
u
  525.0000 275.0400 m
  516.3600 275.0400 L
S
U
u
  512.0400 275.0400 m
  510.6000 275.0400 L
S
U
u
  506.2800 275.0400 m
  504.8400 275.0400 L
S
U
u
  500.5200 275.0400 m
  491.8800 275.0400 L
S
U
u
  487.5600 275.0400 m
  486.1200 275.0400 L
S
U
u
  481.8000 275.0400 m
  480.3600 275.0400 L
S
U
u
  476.0400 275.0400 m
  467.4000 275.0400 L
S
U
u
  463.0800 275.0400 m
  461.6400 275.0400 L
S
U
u
  457.3200 275.0400 m
  455.8800 275.0400 L
S
U
u
  451.5600 275.0400 m
  442.9200 275.0400 L
S
U
u
  438.6000 275.0400 m
  437.1600 275.0400 L
S
U
u
  432.8400 275.0400 m
  431.4000 275.0400 L
S
U
u
  427.0800 275.0400 m
  418.4400 275.0400 L
S
U
u
  414.1200 275.0400 m
  412.6800 275.0400 L
S
U
u
  408.3600 275.0400 m
  406.9200 275.0400 L
S
U
u
  402.6000 275.0400 m
  393.9600 275.0400 L
S
U
u
  389.6400 275.0400 m
  388.2000 275.0400 L
S
U
u
  386.4000 277.5600 m
  386.4000 279.0000 L
S
U
u
  386.4000 283.3200 m
  386.4000 291.9600 L
S
U
u
  386.4000 296.2800 m
  386.4000 297.7200 L
S
U
u
  386.4000 302.0400 m
  386.4000 303.4800 L
S
U
u
  386.4000 307.8000 m
  386.4000 316.4400 L
S
U
u
  386.4000 320.7600 m
  386.4000 322.2000 L
S
U
u
  386.4000 326.5200 m
  386.4000 327.9600 L
S
U
u
  386.4000 332.2800 m
  386.4000 340.9200 L
S
U
u
  386.4000 345.2400 m
  386.4000 346.6800 L
S
U
u
  386.4000 351.0000 m
  386.4000 352.4400 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 389.7600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 397.6800 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 402.0000 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 409.2000 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 417.1200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 421.4400 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 425.7600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.9600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 440.1600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 445.2000 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 449.5200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 457.4400 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 466.0800 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 470.4000 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 478.3200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(f\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 483.3600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 487.6800 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 496.3200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 502.8000 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.7200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(v\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 519.3600 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 527.2800 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(b\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 535.9200 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 540.2400 327.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 407.7600 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 416.4000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 424.3200 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 430.8000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 435.8400 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 440.1600 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 445.2000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 449.5200 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 457.4400 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 466.0800 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 470.4000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 479.0400 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(g\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 486.9600 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 491.2800 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 497.7600 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(u\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 506.4000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.7200 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 517.9200 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 524.4000 309.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(:\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 391.9200 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 399.1200 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 407.0400 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 413.5200 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 420.0000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 427.2000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 434.4000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 439.4400 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 448.0800 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 455.2800 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 461.7600 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 468.2400 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(-\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 473.2800 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 481.9200 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.4000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 495.6000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 502.0800 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 509.2800 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 515.7600 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(v\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 524.4000 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 528.7200 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 537.3600 291.1200 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(g\r) Tx
TO
  0.000 0.000 1.000 0.000 K
u
  0.373 0.373 0.000 0.000 k
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  386.5200 307.8000 m
  364.2000 294.8400 L
  364.9200 293.6400 L
  352.9200 292.3200 L
  360.0000 302.1600 L
  360.7200 300.8400 L
  383.0400 313.8000 L
  386.5200 307.8000 L
B
U
u
  1.000 1.000 0.498 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  404.2800 153.3600 m
  573.4800 153.3600 L
  573.4800 89.6400 L
  404.2800 89.6400 L
  404.2800 153.3600 L
F
U
u
1.5000 w
  1.000 1.000 0.247 0.000 K
  404.2800 153.3600 m
  412.9200 153.3600 L
S
U
u
  417.2400 153.3600 m
  418.6800 153.3600 L
S
U
u
  423.0000 153.3600 m
  424.4400 153.3600 L
S
U
u
  428.7600 153.3600 m
  437.4000 153.3600 L
S
U
u
  441.7200 153.3600 m
  443.1600 153.3600 L
S
U
u
  447.4800 153.3600 m
  448.9200 153.3600 L
S
U
u
  453.2400 153.3600 m
  461.8800 153.3600 L
S
U
u
  466.2000 153.3600 m
  467.6400 153.3600 L
S
U
u
  471.9600 153.3600 m
  473.4000 153.3600 L
S
U
u
  477.7200 153.3600 m
  486.3600 153.3600 L
S
U
u
  490.6800 153.3600 m
  492.1200 153.3600 L
S
U
u
  496.4400 153.3600 m
  497.8800 153.3600 L
S
U
u
  502.2000 153.3600 m
  510.8400 153.3600 L
S
U
u
  515.1600 153.3600 m
  516.6000 153.3600 L
S
U
u
  520.9200 153.3600 m
  522.3600 153.3600 L
S
U
u
  526.6800 153.3600 m
  535.3200 153.3600 L
S
U
u
  539.6400 153.3600 m
  541.0800 153.3600 L
S
U
u
  545.4000 153.3600 m
  546.8400 153.3600 L
S
U
u
  551.1600 153.3600 m
  559.8000 153.3600 L
S
U
u
  564.1200 153.3600 m
  565.5600 153.3600 L
S
U
u
  569.8800 153.3600 m
  571.3200 153.3600 L
S
U
u
  573.4800 151.2000 m
  573.4800 142.5600 L
S
U
u
  573.4800 138.2400 m
  573.4800 136.8000 L
S
U
u
  573.4800 132.4800 m
  573.4800 131.0400 L
S
U
u
  573.4800 126.7200 m
  573.4800 118.0800 L
S
U
u
  573.4800 113.7600 m
  573.4800 112.3200 L
S
U
u
  573.4800 108.0000 m
  573.4800 106.5600 L
S
U
u
  573.4800 102.2400 m
  573.4800 93.6000 L
S
U
u
  573.1200 89.6400 m
  571.6800 89.6400 L
S
U
u
  567.3600 89.6400 m
  565.9200 89.6400 L
S
U
u
  561.6000 89.6400 m
  552.9600 89.6400 L
S
U
u
  548.6400 89.6400 m
  547.2000 89.6400 L
S
U
u
  542.8800 89.6400 m
  541.4400 89.6400 L
S
U
u
  537.1200 89.6400 m
  528.4800 89.6400 L
S
U
u
  524.1600 89.6400 m
  522.7200 89.6400 L
S
U
u
  518.4000 89.6400 m
  516.9600 89.6400 L
S
U
u
  512.6400 89.6400 m
  504.0000 89.6400 L
S
U
u
  499.6800 89.6400 m
  498.2400 89.6400 L
S
U
u
  493.9200 89.6400 m
  492.4800 89.6400 L
S
U
u
  488.1600 89.6400 m
  479.5200 89.6400 L
S
U
u
  475.2000 89.6400 m
  473.7600 89.6400 L
S
U
u
  469.4400 89.6400 m
  468.0000 89.6400 L
S
U
u
  463.6800 89.6400 m
  455.0400 89.6400 L
S
U
u
  450.7200 89.6400 m
  449.2800 89.6400 L
S
U
u
  444.9600 89.6400 m
  443.5200 89.6400 L
S
U
u
  439.2000 89.6400 m
  430.5600 89.6400 L
S
U
u
  426.2400 89.6400 m
  424.8000 89.6400 L
S
U
u
  420.4800 89.6400 m
  419.0400 89.6400 L
S
U
u
  414.7200 89.6400 m
  406.0800 89.6400 L
S
U
u
  404.2800 92.1600 m
  404.2800 93.6000 L
S
U
u
  404.2800 97.9200 m
  404.2800 99.3600 L
S
U
u
  404.2800 103.6800 m
  404.2800 112.3200 L
S
U
u
  404.2800 116.6400 m
  404.2800 118.0800 L
S
U
u
  404.2800 122.4000 m
  404.2800 123.8400 L
S
U
u
  404.2800 128.1600 m
  404.2800 136.8000 L
S
U
u
  404.2800 141.1200 m
  404.2800 142.5600 L
S
U
u
  404.2800 146.8800 m
  404.2800 148.3200 L
S
U
u
  404.2800 152.6400 m
  404.2800 153.3600 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 414.7200 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 1.000 0.000 K
0 j
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 419.0400 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 425.5200 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(y\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 432.7200 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 439.2000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 444.2400 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 451.4400 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(m\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 464.4000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 468.7200 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 477.3600 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(a\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 485.2800 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 491.7600 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 496.8000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 501.1200 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 506.1600 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 510.4800 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 518.4000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 527.0400 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 531.3600 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 537.8400 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(u\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 546.4800 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(l\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 550.8000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 558.0000 125.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(:\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 412.5600 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 419.7600 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(o\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 427.6800 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 434.1600 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 440.6400 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 447.8400 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(c\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 455.0400 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(t\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 460.0800 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 468.7200 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 475.9200 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 482.4000 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 488.8800 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
( \r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 493.2000 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(p\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 501.8400 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 508.3200 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 515.5200 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(s\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 522.0000 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(e\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 529.2000 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(r\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 535.6800 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(v\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 544.3200 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(i\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 548.6400 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(n\r) Tx
TO
  0.000 0.000 1.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 557.2800 107.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 15.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 1.000 0.000 k
(g\r) Tx
TO
  0.000 0.000 1.000 0.000 K
u
  0.373 0.373 0.000 0.000 k
1.5000 w
  0.373 0.373 0.000 0.000 K
1 j
  406.3200 127.0800 m
  379.4400 111.6000 L
  380.2800 110.2800 L
  366.1200 108.4800 L
  374.7600 119.8800 L
  375.4800 118.5600 L
  402.3600 134.0400 L
  406.3200 127.0800 L
B
U
  0.122 0.122 0.000 0.000 k
  0.000 0.122 0.122 0.000 K
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  314.0463 484.9200 m
  325.9069 484.9329  335.5106 494.5125  335.5200 506.3400 C
  335.5200 506.3654 L
  335.4965 518.1928  325.8816 527.7611  314.0210 527.7600 C
  158.2546 527.7600 L
  146.4004 527.7400  136.8025 518.1547  136.8000 506.3273 C
  136.8000 506.3273 L
  136.8165 494.4998  146.4258 484.9259  158.2863 484.9200 C
  314.0463 484.9200 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 159.1200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(K\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.5200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.4400 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.3600 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 199.4400 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.3600 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.4000 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.7200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.8000 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 236.8800 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.8000 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.7200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.7600 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 263.5200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 268.5600 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.4800 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 285.1200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.8800 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 295.9200 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.5600 499.4400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.122 0.000 0.000 k
1.5000 w
  0.000 0.122 0.122 0.000 K
1 j
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  319.8063 335.6400 m
  331.6669 335.6529  341.2706 345.2325  341.2800 357.0600 C
  341.2800 357.0854 L
  341.2565 368.9128  331.6416 378.4811  319.7810 378.4800 C
  158.2546 378.4800 L
  146.4004 378.4600  136.8025 368.8747  136.8000 357.0473 C
  136.8000 357.0473 L
  136.8165 345.2198  146.4258 335.6459  158.2863 335.6400 C
  319.8063 335.6400 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 157.6800 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(M\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 174.9600 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.6000 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.5200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(k\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.6000 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.5200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.6000 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 223.9200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.0000 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.0800 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.0000 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.9200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.9600 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 270.7200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 275.7600 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 283.6800 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 292.3200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 298.0800 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 303.1200 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 311.7600 350.1600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.122 0.000 0.000 k
1.5000 w
  0.000 0.122 0.122 0.000 K
1 j
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  189.9671 171.1200 m
  203.1529 171.1344  213.8295 181.8142  213.8400 195.0000 C
  213.8400 195.0000 L
  213.8295 208.1968  203.1356 218.8812  189.9388 218.8800 C
  27.4543 218.8800 L
  14.2592 218.8553  3.5715 208.1243  3.6001 194.9292 C
  3.6000 194.9858 L
  3.6183 181.8001  14.3013 171.1266  27.4871 171.1200 C
  189.9671 171.1200 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 18.4800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(K\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 32.8800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 40.8000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 48.7200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.8000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.7200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.7600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.0800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.1600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.1200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 103.4400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 113.5200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 123.6000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 131.5200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.4400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 144.4800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 150.2400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.2800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 163.2000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 171.8400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.6000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.6400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.2800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.122 0.000 0.000 k
1.5000 w
  0.000 0.122 0.122 0.000 K
1 j
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  434.8871 171.1200 m
  448.0729 171.1344  458.7495 181.8142  458.7600 195.0000 C
  458.7600 195.0000 L
  458.7495 208.1968  448.0556 218.8812  434.8588 218.8800 C
  272.3743 218.8800 L
  259.1792 218.8553  248.4915 208.1243  248.5201 194.9292 C
  248.5200 194.9858 L
  248.5383 181.8001  259.2213 171.1266  272.4071 171.1200 C
  434.8871 171.1200 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 261.9600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(K\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.3600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 284.2800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 292.2000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.2800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.2400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 319.5600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(H\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 332.5200 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 345.4800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 349.8000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 359.8800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 369.9600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 377.8800 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 385.8000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 390.8400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 396.6000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 401.6400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 409.5600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 418.2000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 423.9600 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 429.0000 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 437.6400 187.9200 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.122 0.000 0.000 k
1.5000 w
  0.000 0.122 0.122 0.000 K
1 j
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  197.1671 3.6000 m
  210.4192 3.6145  221.1494 14.3479  221.1600 27.6000 C
  221.1600 27.6000 L
  221.1494 40.8632  210.4018 51.6012  197.1387 51.6000 C
  34.8942 51.6000 L
  21.6328 51.5752  10.8914 40.7903  10.9201 27.5289 C
  10.9200 27.5858 L
  10.9384 14.3337  21.6751 3.6066  34.9271 3.6000 C
  197.1671 3.6000 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 31.6800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 41.7600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.4000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 56.1600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 61.9200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.8800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.5200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.4400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.3600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 103.6800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 113.7600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 123.8400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 131.7600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.6800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 144.7200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 150.4800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.5200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 163.4400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.0800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.8400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.8800 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.5200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.122 0.000 0.000 k
1.5000 w
  0.000 0.122 0.122 0.000 K
1 j
  0.122 0.122 0.000 0.000 k
  0.122 0.122 0.000 0.000 k
*u
  434.7671 3.6000 m
  448.0192 3.6145  458.7494 14.3479  458.7600 27.6000 C
  458.7600 27.6000 L
  458.7494 40.8632  448.0018 51.6012  434.7387 51.6000 C
  272.4942 51.6000 L
  259.2328 51.5752  248.4914 40.7903  248.5201 27.5289 C
  248.5200 27.5858 L
  248.5384 14.3337  259.2751 3.6066  272.5271 3.6000 C
  434.7671 3.6000 L
B
*U
0 To
1.0000 0.0000 0.0000 1.0000 264.6000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(H\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.5600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 286.2000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 294.1200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.2000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(w\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 317.1600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 325.8000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 333.7200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 341.6400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 345.9600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 356.0400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 366.1200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 374.0400 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.9600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 387.0000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 392.7600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 397.8000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 405.7200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 414.3600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 420.1200 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 425.1600 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 433.8000 20.6400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 752 3992 a
 currentpoint currentpoint translate 1 0.43158 div 1 0.39429 div scale
neg exch neg exch translate
 752 3992 a 2625 4145 a Fl(8)p
eop
%%Page: 9 10
9 9 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 286 964 5278 7 v 286 1274 7 310 v 344 1171
a Fk(Phase)78 b(1:)103 b(Hw/Sw)77 b(Splitting)h(for)f(Kernel)h(Sp)6
b(eci\014cation)p 5557 1274 V 286 1281 5278 7 v 5560
1350 73 324 v 355 1350 5278 73 v 424 1902 a Fh(\017)86
b Fl(Sp)5 b(eci\014cation)56 b(language:)76 b(a)58 b(sequen)-5
b(tial)57 b(subset)f(of)i(V)-14 b(erilog)424 2283 y Fh(\017)86
b Fl(Hardw)-5 b(are/Soft)g(w)g(are)58 b(target)g(arc)-5
b(hitectures)424 2665 y Fh(\017)86 b Fl(Syn)-5 b(tax-based)56
b(splitting)j(rules)2625 4145 y(9)p eop
%%Page: 10 11
10 10 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1424 800 2900 7 v 1424 1087 7 287 v 1482
995 a Fk(T)-19 b(arget)78 b(Kernel)f(Arc)-6 b(hitecture)p
4316 1087 V 1424 1094 2900 7 v 4319 1162 73 301 v 1493
1162 2900 73 v 948 2864 a
 currentpoint currentpoint translate 0.64792 0.62529 scale neg exch
neg exch translate
 948 2864 a @beginspecial 0
@llx 0 @lly 350 @urx 136 @ury 3500 @rwi @setspecial
%%BeginDocument: ./graph/kernelarch.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: d:\qsc\work\pos- confs-letters\slides\graph\kernelarch.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 350 136
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 350 136
%AI3_TileBox: 0 0 350 136
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

  0.122 0.247 0.000 0.000 k
 [] 0 d
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  3.6000 3.6000 m
  111.6000 3.6000 L
  111.6000 130.6800 L
  3.6000 130.6800 L
  3.6000 3.6000 L
B
  57.6000 67.1400 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 15.4800 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.627 0.627 0.373 K
0 j
  0.000 0.627 0.627 0.373 k
(S\r) Tx
TO
  0.000 0.627 0.627 0.373 K
0 To
1.0000 0.0000 0.0000 1.0000 25.5600 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.627 0.627 0.373 K
  0.000 0.627 0.627 0.373 k
(W\r) Tx
TO
  0.000 0.627 0.627 0.373 K
0 To
1.0000 0.0000 0.0000 1.0000 42.1200 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 K
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.4400 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(K\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 60.8400 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.7600 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.6800 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.7600 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.6800 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 8.6400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 18.7200 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 28.8000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 36.7200 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 44.6400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 49.6800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.4400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 60.4800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.4000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 77.0400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.8000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.8400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 96.4800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.122 0.247 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
u
  237.6000 3.6000 m
  345.6000 3.6000 L
  345.6000 130.6800 L
  237.6000 130.6800 L
  237.6000 3.6000 L
B
  291.6000 67.1400 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 248.0400 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.627 0.627 0.373 K
0 j
  0.000 0.627 0.627 0.373 k
(H\r) Tx
TO
  0.000 0.627 0.627 0.373 K
0 To
1.0000 0.0000 0.0000 1.0000 261.0000 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.627 0.627 0.373 k
(W\r) Tx
TO
  0.000 0.627 0.627 0.373 K
0 To
1.0000 0.0000 0.0000 1.0000 281.8800 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 K
  1.000 1.000 0.000 0.000 k
(K\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 296.2800 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.2000 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 312.1200 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 322.2000 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 330.1200 81.2400 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(l\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.6400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(S\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.7200 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(p\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 262.8000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 270.7200 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 278.6400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 283.6800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(f\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 289.4400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 294.4800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.4000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 311.0400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 316.8000 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(i\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 321.8400 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(o\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 330.4800 60.3600 0 Tp
TP
88.888889 Tz
/_Times-Bold 18.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
u
  152.2800 110.0400 m
  194.8800 110.0400 L
  194.8800 131.7600 L
  152.2800 131.7600 L
  152.2800 110.0400 L
n
  173.5800 120.9000 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 152.2800 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.247 0.000 K
0 j
  1.000 1.000 0.247 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 158.7600 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
( \r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 163.0800 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(\(\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 168.1200 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 174.6000 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.8000 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(q\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.7200 117.3600 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(\)\r) Tx
TO
  1.000 1.000 0.247 0.000 K
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
u
  156.6000 29.4000 m
  184.8000 29.4000 L
  184.8000 47.5200 L
  156.6000 47.5200 L
  156.6000 29.4000 L
n
  170.7000 38.4600 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 156.6000 33.1200 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.247 0.000 K
0 j
  1.000 1.000 0.247 0.000 k
(d\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 164.5200 33.1200 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.4400 33.1200 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 176.7600 33.1200 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.247 0.000 K
u
5.0000 w
  1.000 1.000 0.000 0.000 K
1 J
1 j
  121.6800 27.4800 m
  227.5200 27.4800 L
S
U
u
  1.000 1.000 0.000 0.000 k
0.0000 w
  1.000 1.000 0.000 0.000 K
  111.6000 27.4800 m
  124.4400 35.4000 L
  124.4400 19.5600 L
  111.6000 27.4800 L
B
U
u
  1.000 1.000 0.000 0.000 k
  237.6000 27.4800 m
  224.7600 19.5600 L
  224.7600 35.4000 L
  237.6000 27.4800 L
B
U
u
1.5000 w
  1.000 1.000 0.000 0.000 K
  111.6000 111.7200 m
  229.3200 111.8400 L
S
U
u
  1.000 1.000 0.000 0.000 k
0.0000 w
  1.000 1.000 0.000 0.000 K
  237.6000 111.8400 m
  227.0400 107.5200 L
  226.9200 116.0400 L
  237.6000 111.8400 L
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  152.2800 85.5600 m
  197.7600 85.5600 L
  197.7600 107.2800 L
  152.2800 107.2800 L
  152.2800 85.5600 L
n
  175.0200 96.4200 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 152.2800 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.247 0.000 K
0 j
  1.000 1.000 0.247 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 160.2000 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
( \r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 164.5200 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(\(\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.5600 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(a\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.4800 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.6800 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(k\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.6000 92.8800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(\)\r) Tx
TO
  1.000 1.000 0.247 0.000 K
u
1.5000 w
  1.000 1.000 0.000 0.000 K
1 j
  119.8800 87.2400 m
  237.6000 87.3600 L
S
U
u
  1.000 1.000 0.000 0.000 k
0.0000 w
  1.000 1.000 0.000 0.000 K
  111.6000 87.2400 m
  122.1600 91.5600 L
  122.2800 83.0400 L
  111.6000 87.2400 L
B
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
u
  150.4800 57.0000 m
  222.6000 57.0000 L
  222.6000 78.7200 L
  150.4800 78.7200 L
  150.4800 57.0000 L
n
  186.5400 67.8600 m
F
U
0 To
1.0000 0.0000 0.0000 1.0000 150.4800 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.247 0.000 K
0 j
  1.000 1.000 0.247 0.000 k
(s\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.5200 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(y\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 161.2800 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(n\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.2000 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(c\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 174.9600 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(.\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 178.5600 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
( \r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.1600 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(t\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.7600 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(e\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.5200 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(r\r) Tx
TO
  1.000 1.000 0.247 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.5600 67.2000 0 Tp
TP
85.454545 Tz
/_Times-BoldItalic 13.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.247 0.000 k
(m\r) Tx
TO
  1.000 1.000 0.247 0.000 K
u
1.5000 w
  1.000 1.000 0.000 0.000 K
1 j
  111.6000 63.4800 m
  229.3200 63.6000 L
S
U
u
  1.000 1.000 0.000 0.000 k
0.0000 w
  1.000 1.000 0.000 0.000 K
  237.6000 63.6000 m
  227.0400 59.2800 L
  226.9200 67.8000 L
  237.6000 63.6000 L
B
U
  0.000 0.000 0.000 1.000 k
0.7500 w
  0.122 0.247 0.000 0.000 K
u
  37.0800 16.0800 m
  78.1200 16.0800 L
  78.1200 41.2800 L
  37.0800 41.2800 L
  37.0800 16.0800 L
s
  57.6000 28.6800 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 46.4400 23.2800 0 Tp
TP
86.111111 Tz
/_Times-BoldItalic 18.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
(C\r) Tx
TO
  1.000 1.000 0.000 0.000 K
  0.000 0.000 0.000 1.000 k
0.7500 w
  0.122 0.247 0.000 0.000 K
1 j
u
  267.8400 13.2000 m
  303.8400 13.2000 L
  303.8400 38.4000 L
  267.8400 38.4000 L
  267.8400 13.2000 L
s
  285.8400 25.8000 m
B
U
0 To
1.0000 0.0000 0.0000 1.0000 268.5600 23.2800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  1.000 1.000 0.000 0.000 K
0 j
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 272.8800 23.2800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
( \r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.2000 23.2800 0 Tp
TP
85.714286 Tz
/_Times-BoldItalic 15.7500 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 k
(D\r) Tx
TO
  1.000 1.000 0.000 0.000 K
0 To
1.0000 0.0000 0.0000 1.0000 288.7200 19.6800 0 Tp
TP
89.361702 Tz
/_Times-BoldItalic 12.0000 Tf
0.0000 Tc
 0 Tr
  1.000 1.000 0.000 0.000 K
  1.000 1.000 0.000 0.000 k
(0\r) Tx
TO
  1.000 1.000 0.000 0.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 948 2864 a
 currentpoint currentpoint translate 1 0.64792 div 1 0.62529 div scale
neg exch neg exch translate
 948 2864 a 2582 4145 a Fl(10)p
eop
%%Page: 11 12
11 11 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1136 202 3475 7 v 1136 489 7 287 v 1195
397 a Fk(Kernel)77 b(Sp)6 b(eci\014cation)79 b(for)p
Red 77 w(Soft)-6 b(w)g(are)p Blue 4604 489 V 1136 496
3475 7 v 4607 565 73 301 v 1205 565 3475 73 v 286 979
a Fl(A)57 b(subset)f(of)i(V)-14 b(erilog)p Red 59 w Fg(C)12
b(P)24 b Fl(\()p Fg(r)-5 b(;)29 b(a)p Fl(\))p Blue 56
w(comp)5 b(osed)56 b(of)376 1435 y(1.)86 b(An)57 b(ev)-5
b(en)g(t)56 b(con)-5 b(trol)59 b(insensitiv)-5 b(e)58
b(pro)5 b(cess)56 b(not)h(con)-5 b(taining)58 b(v)-10
b(ariables)59 b Fg(r)-5 b(;)29 b(a)p Fl(;)376 1816 y(2.)86
b Fh(!)19 b Fg(\021)872 1842 y Ff(r)949 1816 y Fl(;)29
b Fg(C)12 b Fl(;)29 b(@)p Fg(\021)1457 1842 y Ff(a)1540
1816 y Fl(,)57 b(where)g Fg(C)70 b Fl(is)58 b(a)g(mem)-5
b(b)5 b(er)57 b(of)g Fg(C)12 b(P)24 b Fl(\()p Fg(r)-5
b(;)29 b(a)p Fl(\))57 b(not)g(men)-5 b(tioning)596 2060
y Fg(r)g(;)29 b(a)p Fl(;)376 2442 y(3.)86 b Fg(C)719
2467 y Fm(1)796 2442 y Fl(;)29 b Fg(C)996 2467 y Fm(2)1073
2442 y Fl(,)57 b(or)h Fi(if)65 b Fg(b)29 b(C)1786 2467
y Fm(1)1891 2442 y Fg(el)s(se)g(C)2338 2467 y Fm(2)2416
2442 y Fl(,)58 b(or)f Fg(C)2855 2467 y Fm(1)2971 2442
y Fh(u)38 b Fg(C)3247 2467 y Fm(2)3324 2442 y Fl(,)58
b(or)g(\()p Fg(g)3790 2467 y Fm(1)3896 2442 y Fg(C)4019
2467 y Fm(1)4096 2442 y Fl(\))29 b([)-29 b(])28 b(\()p
Fg(g)4436 2467 y Fm(2)4542 2442 y Fg(C)4665 2467 y Fm(2)4743
2442 y Fl(\),)57 b(where)596 2685 y Fg(C)719 2711 y Fm(1)796
2685 y Fg(;)29 b(C)996 2711 y Fm(2)1073 2685 y Fg(;)g(g)1232
2711 y Fm(1)1309 2685 y Fg(;)g(g)1468 2711 y Fm(2)1593
2685 y Fh(2)47 b Fg(C)12 b(P)24 b Fl(\()p Fg(r)-5 b(;)29
b(a)p Fl(\);)376 3067 y(4.)86 b Fi(while)42 b Fg(b)29
b(C)12 b Fl(,)57 b(where)g Fg(C)j Fh(2)48 b Fg(C)12 b(P)24
b Fl(\()p Fg(r)-5 b(;)29 b(a)p Fl(\).)286 3523 y(Kernel)57
b(SW)g(Sp)5 b(eci\014cation:)p Red 75 w(\()p Fg(C)12
b Fl(;)29 b Fh(!)19 b Fg(\021)2802 3548 y Ff(")2877 3523
y Fl(\))p Blue 2582 4145 a(11)p eop
%%Page: 12 13
12 12 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1077 634 3594 7 v 1077 921 7 287 v 1135
829 a Fk(Kernel)78 b(Sp)6 b(eci\014cation)78 b(for)p
Red 78 w(Hardw)-6 b(are)p Blue 4663 921 V 1077 928 3594
7 v 4667 997 73 301 v 1146 997 3594 73 v 286 1411 a Fl(Kernel)57
b(HW)h(Sp)5 b(eci\014cation:)716 1752 y Fg(D)859 1777
y Fm(0)1041 1752 y Fl(=)105 b Fg(\026X)52 b Fh(\017)38
b Fl(\(\(@)p Fg(\021)2056 1777 y Ff(r)2161 1752 y Fg(M)19
b Fl(;)29 b Fh(!)19 b Fg(\021)2700 1777 y Ff(a)2784 1752
y Fl(;)29 b Fg(X)14 b Fl(\))29 b([)-29 b(])27 b(\(@)p
Fg(\021)3494 1777 y Ff(")3597 1752 y Fi(skip)11 b Fl(\)\))286
2092 y(where)57 b Fg(M)124 b Fl(=)1209 2118 y Ff(d)-22
b(f)1453 2092 y Fi(c)-9 b(ase)42 b Fl(\()p Fg(id)p Fl(\))29
b(\()p Fg(p)2268 2118 y Fm(1)2373 2092 y Fg(M)2540 2118
y Fm(1)2618 2092 y Fl(\))g Fg(:)g(:)g(:)e Fl(\()p Fg(p)3097
2118 y Ff(n)3219 2092 y Fg(M)3386 2118 y Ff(n)3480 2092
y Fl(\))57 b(is)h(a)g(case)e(construct)g(not)286 2336
y(con)-5 b(taining)58 b Fg(r)-5 b(;)29 b(a;)g(")p Fl(.)286
2728 y(Theorem:)716 3068 y(\()p Fg(C)906 3094 y Fm(1)984
3068 y Fl(;)g Fg(C)1184 3094 y Fm(2)1260 3068 y Fl(;)g
Fh(!)19 b Fg(\021)1613 3094 y Ff(")1687 3068 y Fl(\))48
b Fh(k)g Fg(D)2079 3094 y Fm(0)2261 3068 y Fl(=)105 b(\(\()p
Fg(C)2757 3094 y Fm(1)2835 3068 y Fl(;)29 b Fh(!)19 b
Fg(\021)3188 3094 y Ff(")3262 3068 y Fl(\))47 b Fh(k)h
Fg(D)3653 3094 y Fm(0)3730 3068 y Fl(\);)86 b(\(\()p
Fg(C)4188 3094 y Fm(2)4265 3068 y Fl(;)29 b Fh(!)19 b
Fg(\021)4618 3094 y Ff(")4692 3068 y Fl(\))48 b Fh(k)g
Fg(D)5084 3094 y Fm(0)5161 3068 y Fl(\))2582 4145 y(12)p
eop
%%Page: 13 14
13 13 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 388 800 4972 7 v 388 1087 7 287 v 446 995
a Fk(Syn)-6 b(tax-based)78 b(Splitting)f(Rules:)103 b(Bottom-Up)79
b(St)-6 b(yle)p 5352 1087 V 388 1094 4972 7 v 5356 1163
73 301 v 457 1163 4972 73 v 286 1822 a Fd(Bottom-Up)66
b(Rule)h(for)f(Sequen)-6 b(tial)69 b(Comp)6 b(osition)p
RedOrange 823 2336 a Fg(S)k(pl)s(it)1201 2362 y Ff(V)1321
2336 y Fl(\()p Fg(S)1494 2362 y Ff(i)1551 2336 y Fg(;)29
b(C)1751 2362 y Ff(i)1808 2336 y Fg(;)g(D)2033 2274 y
Fm(0)2109 2336 y Fl(\))p Fg(;)g(i)48 b Fl(=)f(1)p Fg(;)29
b Fl(2)1063 2629 y Fg(V)39 b(ar)5 b Fl(\()p Fg(S)1549
2655 y Fm(1)1625 2629 y Fl(\))48 b(=)f Fg(V)39 b(ar)5
b Fl(\()p Fg(S)2407 2655 y Fm(2)2483 2629 y Fl(\))p 737
2744 2140 7 v 785 2902 a Fg(S)10 b(pl)s(it)1163 2928
y Ff(V)1283 2902 y Fl(\()p Fg(S)1456 2928 y Fm(1)1532
2902 y Fl(;)29 b Fg(S)1715 2928 y Fm(2)1792 2902 y Fg(;)86
b(C)2049 2928 y Fm(1)2126 2902 y Fl(;)29 b Fg(C)2326
2928 y Fm(2)2403 2902 y Fg(;)86 b(D)2685 2852 y Fm(0)2761
2902 y Fl(\))p Blue 2582 4145 a(13)p eop
%%Page: 14 15
14 14 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1818 847 2111 7 v 1818 1134 7 287 v 1877
1042 a Fk(The)p Red 77 w Fc(Split)p Blue 77 w Fk(Predicate)p
3922 1134 V 1818 1141 2111 7 v 3925 1210 73 301 v 1887
1210 2111 73 v RedOrange 802 1640 a Fg(S)10 b(pl)s(it)1180
1666 y Ff(V)1300 1640 y Fl(\()p Fg(S;)29 b(C)s(;)g(D)1901
1577 y Fm(0)1977 1640 y Fl(\))105 b(=)2283 1666 y Ff(d)-22
b(f)1390 1933 y Fg(S)115 b Fh(v)105 b Fl(\(\()p Fg(C)12
b Fl(;)29 b Fh(!)19 b Fg(\021)2472 1958 y Ff(")2546 1933
y Fl(\))48 b Fh(k)g Fg(D)2943 1870 y Fm(0)3020 1933 y
Fl(\))57 b Fh(^)1390 2225 y Fl(\()p Fg(C)j Fh(2)48 b
Fg(C)12 b(P)2049 2251 y Ff(")2123 2225 y Fl(\()p Fg(r)-5
b(;)29 b(a)p Fl(\)\))95 b Fh(^)g Fl(\()p Fg(D)3085 2163
y Fm(0)3209 2225 y Fh(2)48 b Fg(D)5 b(P)3631 2251 y Ff(")3704
2225 y Fl(\()p Fg(r)-5 b(;)29 b(a)p Fl(\)\))56 b Fh(^)1390
2518 y Fl(\()p Fg(V)87 b Fh(\022)48 b Fg(V)38 b(ar)5
b Fl(\()p Fg(C)12 b Fl(;)29 b Fh(!)19 b Fg(\021)2693
2544 y Ff(")2767 2518 y Fl(\))38 b Fh(\\)g Fg(V)h(ar)5
b Fl(\()p Fg(D)3553 2455 y Fm(0)3629 2518 y Fl(\)\))57
b Fh(^)1390 2810 y Fl(\()p Fg(V)77 b Fh(\\)38 b Fi(Oc)-9
b(cV)c(ar)19 b Fl(\()p Fg(S)10 b Fl(\))47 b(=)h Fh(;)p
Fl(\))p Blue 2582 4145 a(14)p eop
%%Page: 15 16
15 15 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 441 654 4865 7 v 441 941 7 287 v 500 849
a Fk(Syn)-6 b(tax-based)77 b(Splitting)h(Rules:)103 b(T)-19
b(op-Do)-6 b(wn)77 b(St)-6 b(yle)p 5298 941 V 441 948
4865 7 v 5302 1017 73 301 v 510 1017 4865 73 v 286 1676
a Fd(T)-17 b(op-Do)-6 b(wn)66 b(Rule)i(for)e(Conditional)p
RedOrange 1913 2190 a Fg(S)10 b(pl)s(it)2291 2216 y Ff(V)2411
2190 y Fl(\()p Fg(S)2584 2216 y Ff(i)2640 2190 y Fg(;)86
b(C)2897 2216 y Ff(i)2955 2190 y Fg(;)g(D)3232 2216 y
Ff(i)3289 2190 y Fl(\))1890 2483 y Fg(V)39 b(ar)5 b Fl(\()p
Fg(S)2376 2508 y Fm(1)2452 2483 y Fl(\))48 b(=)g Fg(V)39
b(ar)5 b Fl(\()p Fg(S)3235 2508 y Fm(2)3311 2483 y Fl(\))1976
2775 y Fi(mer)-9 b(gable)13 b Fl(\()p Fg(D)2852 2801
y Fm(1)2929 2775 y Fg(;)29 b(D)3149 2801 y Fm(2)3225
2775 y Fl(\))p 737 2891 3795 7 v 737 3048 a Fg(S)10 b(pl)s(it)1115
3074 y Ff(V)1235 3048 y Fl(\()p Fi(if)65 b Fg(b)29 b(S)1682
3074 y Fm(1)1787 3048 y Fg(el)s(se)g(S)2217 3074 y Fm(2)2294
3048 y Fg(;)86 b Fi(if)65 b Fg(b)29 b(C)2825 3074 y Fm(1)2930
3048 y Fg(el)s(se)g(C)3377 3074 y Fm(2)3455 3048 y Fg(;)86
b(int)p Fl(\()p Fg(D)4023 3074 y Fm(1)4101 3048 y Fg(;)29
b(D)4321 3074 y Fm(2)4397 3048 y Fl(\)\))p Blue 2582
4145 a(15)p eop
%%Page: 16 17
16 16 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 286 646 5324 7 v 286 933 7 287 v 344 841
a Fk(A)-6 b(tomic)77 b(Commands)g(Splitting)h(|)g(Timed)e(Assignmen)-6
b(t)p 5603 933 V 286 940 5324 7 v 5606 1009 73 301 v
355 1009 5324 73 v 286 1668 a Fl(F)-14 b(or)58 b(timed)g(assignmen)-5
b(t)p Red 57 w(\()p Fg(v)55 b Fl(:=)47 b Fg(f)19 b Fl(\()p
Fg(x;)29 b(c)p Fl(\)\))2957 1694 y Ff(n)p Blue 3050 1668
a Fl(,)58 b(where)p Red 56 w Fg(f)67 b Fh(2)48 b Fg(H)14
b(W)-5 b(;)86 b(x)48 b Fh(2)g Fg(S)10 b(W)p Blue 24 w
Fl(:)735 2060 y Fg(S)g(pl)s(it)1113 2086 y Ff(B)1232
2060 y Fl(\()p Fg(S)57 b Fl(=)48 b(\(\()p Fg(v)55 b Fl(:=)47
b Fg(f)19 b Fl(\()p Fg(x;)29 b(c)p Fl(\)\))2699 2086
y Ff(n)2792 2060 y Fl(\))p Fg(;)86 b(C)s(;)g(D)5 b Fl(\),)56
b(where)735 2378 y Fg(C)118 b Fl(=)1110 2404 y Ff(d)-22
b(f)p OrangeRed 1354 2378 a Fl(\(\()p Fg(id)47 b Fl(:=)h(1\))2067
2404 y Fm(0)2144 2378 y Fl(;)29 b(\()p Fg(l)s(x)49 b
Fl(:=)e Fg(x)p Fl(\))2883 2404 y Fm(0)2961 2378 y Fl(;)29
b Fh(!)19 b Fg(\021)3314 2404 y Ff(r)3390 2378 y Fl(;)29
b(@)p Fg(\021)3686 2404 y Ff(a)3770 2378 y Fl(;)g(\()p
Fg(v)54 b Fl(:=)47 b Fg(l)s(y)6 b Fl(\))4491 2404 y Fm(0)4570
2378 y Fl(\))p Blue(,)57 b(and)735 2887 y Fg(D)110 b
Fl(=)1122 2913 y Ff(d)-22 b(f)p OrangeRed 1366 2887 a
Fg(\026X)51 b Fh(\017)1788 2541 y Fb(0)1788 2851 y(@)2025
2756 y Fl(\(@)p Fg(\021)2311 2782 y Ff(r)2416 2756 y
Fi(c)-9 b(ase)43 b Fl(\()p Fg(id)p Fl(\))29 b(\(1)g(\()p
Fg(l)s(y)54 b Fl(:=)48 b Fg(f)19 b Fl(\()p Fg(l)s(x;)29
b(c)p Fl(\)\))4357 2782 y Ff(n)4451 2756 y Fl(\);)g Fh(!)19
b Fg(\021)4871 2782 y Ff(a)4954 2756 y Fl(;)29 b Fg(X)14
b Fl(\))2025 3049 y([)-29 b(])29 b(\(@)p Fg(\021)2407
3075 y Ff(")2509 3049 y Fi(skip)12 b Fl(\))5340 2541
y Fb(1)5340 2851 y(A)p Blue 2582 4145 a Fl(16)p eop
%%Page: 17 18
17 17 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 765 408 4217 7 v 765 695 7 287 v 824 603
a Fk(A)77 b(T)-19 b(o)-6 b(y)76 b(Example)g(|)i(the)g(Source)h(Program)
p 4975 695 V 765 702 4217 7 v 4978 771 73 301 v 834 771
4217 73 v 802 1201 a Fr(w)57 b(:=)h(u)f(+)p Red 57 w(v)p
Blue(;)802 1494 y Fl(#1;)29 b Fh(!)-10 b Fr(\(w)p 1465
1494 52 7 v 63 w(ready\))o Fl(;)802 1786 y Fr(@\(z)p
1069 1786 V 62 w(ready\);)57 b(if)g(\(z)g(=)g(u\))h(\()p
Red(v)p Blue 57 w(:=)g(u)f Fh(\002)p Red 57 w Fr(v)p
Blue(\))h(else)f(skip;)802 2079 y(while)g(\()p OliveGreen(\()p
Red(b)p OliveGreen 57 w(&&)g(w)g Fh(\024)g Fr(u)h Fh(\002)p
Red 57 w Fr(v)p OliveGreen(\))2674 2105 y Ff(n)2759 2122
y Fa(1)p Blue 2835 2079 a Fr(\))p Fh(f)1350 2371 y Fr(u)f(:=)g(u)h(+)f
(w;)1350 2664 y(w)g(:=)p OliveGreen 57 w(\(\(u)g Fh(\000)p
Red 58 w Fr(v)p OliveGreen(\))g Fh(\002)h Fr(\(u)f(+)p
Red 57 w(v)p OliveGreen(\)\))3248 2690 y Ff(n)3333 2707
y Fa(2)p Blue 3409 2664 a Fr(;)1350 2957 y(#1;)h Fh(!)p
Fr(\(w)p 2052 2957 V 61 w(ready\))802 3249 y Fh(g)2582
4145 y Fl(17)p eop
%%Page: 18 19
18 18 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1038 503 3671 7 v 1038 790 7 287 v 1097
699 a Fk(Kernel)77 b(Sp)6 b(eci\014cation)79 b(for)e(Hardw)-6
b(are)p 4702 790 V 1038 797 3671 7 v 4705 866 73 301
v 1107 866 3671 73 v -166 2210 a Fg(\026X)52 b Fh(\017)38
b Fl(\(\()p Fr(@)p Fg(\021)591 2235 y Ff(r)725 2210 y
Fr(case)56 b(\()p Red(id)p Blue(\))1434 1598 y Fb(8)1434
1753 y(>)1434 1805 y(>)1434 1857 y(>)1434 1908 y(>)1434
1960 y(>)1434 2012 y(<)1434 2322 y(>)1434 2373 y(>)1434
2425 y(>)1434 2477 y(>)1434 2528 y(>)1434 2580 y(:)p
Red 1673 1786 a Fr(1)p Blue 173 w(lv)h(:=)h(v)p Red 1673
2079 a(2)p Blue 173 w(v)f(:=)h(lv)p Red 1673 2371 a(3)p
Blue 173 w(\(lb)f(:=)g(b)h(&&)e(w)h Fh(\024)g Fr(lu)h
Fh(\002)f Fr(v\))3781 2397 y Ff(n)3866 2414 y Fa(1)p
Red 1673 2664 a Fr(4)p Blue 173 w(\(lw)g(:=)g(\(lu)g
Fh(\000)h Fr(v\))f Fh(\002)h Fr(\(lu)f(+)h(v\)\))3954
2690 y Ff(n)4039 2707 y Fa(2)4201 1598 y Fb(9)4201 1753
y(>)4201 1805 y(>)4201 1857 y(>)4201 1908 y(>)4201 1960
y(>)4201 2012 y(=)4201 2322 y(>)4201 2373 y(>)4201 2425
y(>)4201 2477 y(>)4201 2528 y(>)4201 2580 y(;)4383 2210
y Fl(;)29 b Fh(!)-10 b Fg(\021)4707 2235 y Ff(a)4791
2210 y Fl(;)29 b Fg(X)14 b Fl(\)[)-29 b(])n(\(@)p Fg(\021)5443
2235 y Ff(")5546 2210 y Fi(skip)11 b Fl(\)\))2582 4145
y(18)p eop
%%Page: 19 20
19 19 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 1136 245 3475 7 v 1136 532 7 287 v 1195
440 a Fk(Kernel)77 b(Sp)6 b(eci\014cation)79 b(for)e(Soft)-6
b(w)g(are)p 4604 532 V 1136 539 3475 7 v 4607 607 73
301 v 1205 607 3475 73 v Red 802 1037 a Fr(id)58 b(:=)f(1;)g
Fh(!)-10 b Fg(\021)1667 1063 y Ff(r)1745 1037 y Fr(;)57
b(@)p Fg(\021)2050 1063 y Ff(a)p Blue 2134 1037 a Fr(;)g(w)g(:=)g(u)g
(+)h(lv;)802 1330 y(#1;)g Fh(!)p Fr(\(w)p 1504 1330 52
7 v 62 w(ready\);)f(@\(z)p 2382 1330 V 61 w(ready\);)802
1771 y(if)h(\(z)f(=)g(u\))1529 1425 y Fb(0)1529 1735
y(@)p Red 1765 1640 a Fr(id)h(:=)f(1;)g Fh(!)-10 b Fg(\021)2630
1666 y Ff(r)2708 1640 y Fr(;)57 b(@)p Fg(\021)3013 1666
y Ff(a)p Blue 3097 1640 a Fr(;)g(lv)h(:=)f(u)g Fh(\002)h
Fr(lv;)p Red 1765 1933 a(id)g(:=)f(2;)g Fh(!)-10 b Fg(\021)2630
1958 y Ff(r)2708 1933 y Fr(;)57 b(@)p Fg(\021)3013 1958
y Ff(a)p Blue 4211 1425 a Fb(1)4211 1735 y(A)4390 1771
y Fr(else)g(skip;)p Red 802 2242 a(id)h(:=)f(3;)g(lu)h(:=)f(u;)g
Fh(!)-10 b Fg(\021)2288 2268 y Ff(r)2366 2242 y Fr(;)57
b(@)p Fg(\021)2671 2268 y Ff(a)p Blue 2754 2242 a Fr(;)802
2535 y(while)g(\(lb\))p Fh(f)1350 2828 y Fr(u)g(:=)g(u)h(+)f(w;)p
Red 57 w(id)g(:=)g(4;)h(lu)f(:=)g(u;)h Fh(!)-10 b Fg(\021)3782
2853 y Ff(r)3859 2828 y Fr(;)57 b(@)p Fg(\021)4164 2853
y Ff(a)p Blue 4248 2828 a Fr(;)g(w)g(:=)g(lw;)1350 3120
y(#1;)h Fh(!)p Fr(\(w)p 2052 3120 V 61 w(ready\);)p Red
57 w(id)f(:=)h(3;)f(lu)g(:=)h(u;)f Fh(!)-10 b Fg(\021)4148
3146 y Ff(r)4225 3120 y Fr(;)57 b(@)p Fg(\021)4530 3146
y Ff(a)p Blue 802 3413 a Fh(g)2582 4145 y Fl(19)p eop
%%Page: 20 21
20 20 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 286 253 5461 7 v 286 563 7 310 v 344 460
a Fk(Phase)78 b(2:)103 b(Deriv)-6 b(e)76 b(Hw/Sw)i(P)-6
b(artitioning)77 b(for)g(the)h(System)p 5740 563 V 286
570 5461 7 v 5743 639 73 324 v 355 639 5461 73 v 797
847 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 797 847 a 797 847 a
 currentpoint currentpoint translate 0.27448 0.2949 scale neg exch
neg exch translate
 797 847 a @beginspecial 12
@llx 12 @lly 580 @urx 829 @ury 5680 @rwi @setspecial
%%BeginDocument: ./graph/syspart.eps
%!PS-Adobe-3.0
%%Title: syspart.sdr
%%Creator: PScript5.dll Version 5.2
%%CreationDate: 10/11/2002 12:47:53
%%For: smaqs
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Landscape
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (EPSON PostScript CARD) (52.5) 0
%%LanguageLevel: 1
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 12 12 580 829
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
%%BeginProcSet: Pscript_Res_Emul 5.0 0
/defineresource where{pop}{userdict begin/defineresource{userdict/Resources 2
copy known{get begin}{15 dict dup begin put}ifelse exch readonly exch
currentdict 1 index known not{dup 30 dict def}if load 3 -1 roll 2 index put
end}bind readonly def/findresource{userdict/Resources get exch get exch get}
bind readonly def/resourceforall{pop pop pop pop}bind readonly def
/resourcestatus{userdict/Resources 2 copy known{get exch 2 copy known{get exch
known{0 -1 true}{false}ifelse}{pop pop pop false}ifelse}{pop pop pop pop false}
ifelse}bind readonly def end}ifelse
%%EndProcSet
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/STSong-Light--GBK-EUC-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<b8c3cec4bcfed0e8d2aad3c3b5c4c4dab4e6ccabb6e0a1a3c4fabfc9d2d4cad4d3c3c8e7cfc2b5
c4b7bdb7a8d4d9b4f2d3a1a3ba>100 500<d4daa1b0506f7374536372697074a1b1b6d4bbb0bf
f2a3acd1a1d4f1a1b0506f7374536372697074a3a8b6d4b1e3d0afcabd41445343b5c4d3c5bbafa
3a9a1b1a1a3>115 485<d4daa1b0c9e8b1b8d1a1cfeea1b1b6d4bbb0bff2a3aca1b0bfc9d3c3b
4f2d3a1bbfac4dab4e6a1b1b5c4d6b5cac7beabc8b7b5c4a1a3>115 470<d4dacec4bcfed6d0c
9d9d3c3bcb8d6d6d7d6cce5a1a3>115 455<b5a5b6c0b4f2d3a1b8c3cec4bcfeb5c4b2bbcdacb
2bfb7d6bbf2d2b3a1a3>115 440 10 0/STSong-Light--GBK-EUC-H}{cleartomark}ifelse}
ifelse showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}
bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get
def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L1 5.0 0
/rf{N rp L}b/fx{1 1 dtransform @ 0 ge{1 sub 1}{1 add -0.25}? 3 -1 $ @ 0 ge{1
sub 1}{1 add -0.25}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs{N rp C K}b/rc{N rp clip N}b/UtilsInit{}b/setcolorspace{!}b
/scol{[/setgray/setrgbcolor/setcolor/setcmykcolor/setcolor/setgray]~ get cvx
exec}b/colspRefresh{}b/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo
{/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 0 1 -1 0 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *PageSize A4
-1 statusdict /setpapertray get exec a4
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 300dpi

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OutputBin Upper

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 0 72 300 V 72 300 V 0 11.99905 11.99905 ] def 
%%EndSetup

userdict begin /VMsave save def end
%%Page: 1 1
%%PageBoundingBox: 12 12 580 829
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L1 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 2 d/RepsV 6 d/RepsH 5 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{}b/PaintProc{` SetBGndFGnd RepsH{Width Height F mx PaintData
imagemask Width 0 +}repeat E}b E d/GDIpattfill{@ ` BGnd null ne PaintType 2 eq
and{: BGnd aload ! scol fEOFill{O}{L}? ; FGnd aload ! U/iCol 2 ^ put @ 0 eq{!
2}{@ 1 eq ~ 2 eq or{4}{5}?}? -1 $}if E @ patterncalc : 4 ^/PaintType get 2 eq
{iCol 0 eq{6 -1 $}if iCol 1 eq iCol 2 eq or{8 -3 $}if iCol 3 eq iCol 4 eq or{9
-4 $}if iCol scol}if fEOFill{eoclip}{clip}? N patternfill ; N}b/hbf
{GDIpattfill}b/hfMain{/fEOFill ~ d ~/iCol ~ d GDIpattfill}b/hf{: hfMain ;}b
/mpstr 1 string d/mp{~ @ length 12 add dict copy `/PatternCTM matrix
currentmatrix d/PatternMatrix ~ d/PatWidth XStep mpstr length mul d/PatHeight
YStep d/FontType 3 d/Encoding 256 array d 3 string 0 1 255{Encoding ~ @ 3 ^ cvs
cvn put}for !/FontMatrix matrix d/FontBBox BBox d/BuildChar{! @ ` XStep 0
FontBBox aload ! setcachedevice/PaintProc , E : exec ;}b & E ~ @ 3 -1 $
definefont}b/build_pattern{: GDIBWPatternDict ` Width Height E dsnap +S
/GDIBWPatternMx matrix currentmatrix d ; CTMsave GDIBWPatternMx setmatrix
GDIBWPatternDict @ ` xOrg yOrg E matrix + mp CTMrestore}b/patterncalc{` :
PatternCTM setmatrix PatternMatrix concat BBox aload ! ! ! + pathbbox ;
PatHeight V ceiling 4 1 $ PatWidth V ceiling 4 1 $ PatHeight V floor 4 1 $
PatWidth V floor 4 1 $ 2 ^ sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $ PatHeight mul
~ PatWidth mul ~ E}b/patternfill{5 -1 $ @ ` Ji PatternCTM setmatrix
PatternMatrix concat 0 2 ^ 2 ^ M 0 1 mpstr length 1 sub{1 ^ mpstr 3 1 $ put}for
! 2 ^{currentpoint 5 ^{mpstr S}repeat YStep add M}repeat ! ! ! ! E}b/pbf{: 14
dict `/fGray ~ d/fEOFill ~ d/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/mx xOrg yOrg matrix + d fGray{/PaintProc{` Width Height
OutputBPP mx PaintData image E}b}{/PaintProc{` Width Height 8 mx PaintData F
OutputBPP 8 idiv colorimage E}b}? pathbbox fEOFill{eoclip}{clip}?/Top ~ d/Right
~ d/Bottom ~ d/Left ~ d Top Height neg Bottom 1 sub{Left Width Right 1 sub{1 ^
2 copy + & PaintProc neg ~ neg ~ +}bind for !}bind for E ;}b
%%EndResource
end reinitialize
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 0 Lj 1 Lc 6 Lw solid : 639 0 768 900 rc N 1366 34 M 678 34 I 678 859 I 1366 859 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; ; 0.105 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Bold
F /F0 0 /256 T /Times-Bold mF 
/F0S71 F0 [113.098 0 0 -113.098 0 0 ] mFS
F0S71 Ji 
715 418 M (E)S 
787 418 M (n)S 
847 418 M (v)S 
901 418 M (i)S 
931 418 M (r)S 
979 418 M (o)S 
1032 418 M (n)S 
1093 418 M (m)S 
1184 418 M (e)S 
1230 418 M (n)S 
1291 418 M (t)S 
0 0 scol : 1842 0 715 900 rc N 2516 34 M 1881 34 I 1881 859 I 2516 859 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; ; 0.105 0 scol 2029 418 M (S)S 
2091 418 M (y)S 
2146 418 M (s)S 
2189 418 M (t)S 
2226 418 M (e)S 
2274 418 M (m)S 
0 0 scol 
%%IncludeResource: font Times-Roman
F /F1 0 /256 T /Times-Roman mF 
/F1S6F F1 [111.148 0 0 -111.148 0 0 ] mFS
F1S6F Ji 
2296 615 M (\))S 
2194 615 M (\()S 

%%IncludeResource: font Times-Italic
F /F2 0 /256 T /Times-Italic mF 
/F2S6F F2 [111.148 0 0 -111.148 0 0 ] mFS
F2S6F Ji 
2233 615 M (S)S 
/F2S40 F2 [64.348 0 0 -64.348 0 0 ] mFS
F2S40 Ji 
2153 565 M (s)S 
2150 643 M (f)S 

%%IncludeResource: font Symbol
F /F3 0 /2 F /Symbol mF 
/F3S6F F3 [111.148 0 0 -111.148 0 0 ] mFS
F3S6F Ji 
2059 615 M (Y)S 
/F2S75 F2 [117 0 0 -117 0 0 ] mFS
F2S75 Ji 
913 626 M (E)S 
984 626 M (n)S  1043 626 M (v)S  
1 Lj N 1369 240 M 1818 239 I : 0.973 0.973 +S K 
; 1 Lw solid N 1879 239 M 1797 269 I 1797 211 I C 
:  O ; K 
6 Lw solid N 1427 655 M 1878 655 I : 0.973 0.973 +S K 
; 1 Lw solid N 1369 655 M 1451 625 I 1451 684 I C 
:  O ; K 
: N 1471 103 170 98 rp C 
1 0 scol  L ; 0.105 0 scol /F0S50 F0 [80.922 0 0 -80.922 0 0 ] mFS
F0S50 Ji 
1471 184 M (s)S 
1504 184 M (t)S 
1533 184 M (a)S 
1576 184 M (r)S 
1614 184 M (t)S 
0 0 scol /F2S41 F2 [65.324 0 0 -65.324 0 0 ] mFS
F2S41 Ji 
1617 369 M (s)S 
/F3S71I26Y00 F3 [113.098 0 38.68 -113.098 0 0 ] mFS
F3S71I26Y00 Ji 
1540 341 M (h)S 
: N 1471 517 205 101 rp C 
1 0 scol  L ; 0.105 0 scol F0S50 Ji 
1471 599 M (f)S 
1500 599 M (i)S 
1525 599 M (n)S 
1573 599 M (i)S 
1597 599 M (s)S 
1631 599 M (h)S 
0 0 scol F2S41 Ji 
1617 773 M (f)S 
/F3S6FI26Y00 F3 [111.148 0 38.012 -111.148 0 0 ] mFS
F3S6FI26Y00 Ji 
1532 744 M (h)S 
6 Lw solid N 1666 1000 M 1666 1258 I 1694 1258 I 1600 1368 I 1506 1258 I 1534 1258 I 1534 1000 I 1666 1000 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; N 1188 1667 M 1638 1667 I : 0.973 0.973 +S K 
; 1 Lw solid N 1696 1667 M 1615 1696 I 1615 1638 I C 
:  O ; K 
6 Lw solid N 1246 2082 M 1696 2082 I : 0.973 0.973 +S K 
; 1 Lw solid N 1188 2082 M 1269 2053 I 1269 2111 I C 
:  O ; K 
: N 1278 1529 316 101 rp C 
1 0 scol  L ; 0.105 0 scol F0S50 Ji 
1278 1611 M (s)S 
1311 1611 M (t)S 
1340 1611 M (a)S 
1383 1611 M (r)S 
1421 1611 M (t)S 
0 0 scol F2S41 Ji 
1435 1796 M (s)S 
F3S71I26Y00 Ji 
1359 1768 M (h)S 
F2S41 Ji 
1436 2200 M (f)S 
F3S6FI26Y00 Ji 
1350 2172 M (h)S 
0 Lj 6 Lw solid N 2147 1555 M 1786 1555 I 1786 2199 I 2147 2199 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; 0.105 0 scol F0S71 Ji 
1879 1848 M (S)S 
1941 1848 M (W)S 
0 0 scol F1S6F Ji 
2073 1995 M (\))S 
1961 1995 M (\()S 
F2S6F Ji 
1995 1995 M (C)S 
F2S40 Ji 
1920 1946 M (s)S 
1917 2024 M (f)S 
F3S6F Ji 
1826 1995 M (Y)S 
N 2838 1552 M 2477 1552 I 2477 2196 I 2838 2196 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; 0.105 0 scol F0S71 Ji 
2561 1845 M (H)S 
2641 1845 M (W)S 
0 0 scol /F2S75 F2 [117.973 0 0 -117.973 0 0 ] mFS
F2S75 Ji 
2616 2012 M (D)S 
1 Lj N 2150 1715 M 2442 1715 I : 0.973 0.973 +S K 
; 1 Lw solid N 2472 1715 M 2390 1743 I 2428 1715 I 2390 1685 I C 
:  O ; K 
6 Lw solid N 2183 2036 M 2475 2036 I : 0.973 0.973 +S K 
; 1 Lw solid N 2154 2036 M 2236 2008 I 2198 2036 I 2236 2066 I C 
:  O ; K 
: N 2208 1576 152 89 rp C 
1 0 scol  L ; 0.105 0 scol /F0S49 F0 [73.125 0 0 -73.125 0 0 ] mFS
F0S49 Ji 
2208 1646 M (s)S 
2238 1646 M (t)S 
2263 1646 M (a)S 
2302 1646 M (r)S 
2336 1646 M (t)S 
: N 2243 1899 188 88 rp C 
1 0 scol  L ; 2243 1968 M (f)S 
2271 1968 M (i)S 
2292 1968 M (n)S 
2337 1968 M (i)S 
2358 1968 M (s)S 
2390 1968 M (h)S 
0 0 scol 6 Lw solid N 1688 1418 M 1694 1418 I : 0.973 0.973 +S K 
; N 1711 1418 M 1717 1418 I : 0.973 0.973 +S K 
; N 1734 1418 M 1740 1418 I : 0.973 0.973 +S K 
; N 1758 1418 M 1764 1418 I : 0.973 0.973 +S K 
; N 1781 1418 M 1787 1418 I : 0.973 0.973 +S K 
; N 1805 1418 M 1811 1418 I : 0.973 0.973 +S K 
; N 1828 1418 M 1834 1418 I : 0.973 0.973 +S K 
; N 1851 1418 M 1857 1418 I : 0.973 0.973 +S K 
; N 1875 1418 M 1881 1418 I : 0.973 0.973 +S K 
; N 1898 1418 M 1904 1418 I : 0.973 0.973 +S K 
; N 1922 1418 M 1928 1418 I : 0.973 0.973 +S K 
; N 1945 1418 M 1951 1418 I : 0.973 0.973 +S K 
; N 1968 1418 M 1974 1418 I : 0.973 0.973 +S K 
; N 1992 1418 M 1998 1418 I : 0.973 0.973 +S K 
; N 2015 1418 M 2021 1418 I : 0.973 0.973 +S K 
; N 2039 1418 M 2045 1418 I : 0.973 0.973 +S K 
; N 2062 1418 M 2068 1418 I : 0.973 0.973 +S K 
; N 2085 1418 M 2091 1418 I : 0.973 0.973 +S K 
; N 2109 1418 M 2115 1418 I : 0.973 0.973 +S K 
; N 2132 1418 M 2138 1418 I : 0.973 0.973 +S K 
; N 2156 1418 M 2162 1418 I : 0.973 0.973 +S K 
; N 2179 1418 M 2185 1418 I : 0.973 0.973 +S K 
; N 2202 1418 M 2208 1418 I : 0.973 0.973 +S K 
; N 2226 1418 M 2232 1418 I : 0.973 0.973 +S K 
; N 2249 1418 M 2255 1418 I : 0.973 0.973 +S K 
; N 2273 1418 M 2279 1418 I : 0.973 0.973 +S K 
; N 2296 1418 M 2302 1418 I : 0.973 0.973 +S K 
; N 2319 1418 M 2325 1418 I : 0.973 0.973 +S K 
; N 2343 1418 M 2349 1418 I : 0.973 0.973 +S K 
; N 2366 1418 M 2372 1418 I : 0.973 0.973 +S K 
; N 2390 1418 M 2396 1418 I : 0.973 0.973 +S K 
; N 2413 1418 M 2419 1418 I : 0.973 0.973 +S K 
; N 2436 1418 M 2442 1418 I : 0.973 0.973 +S K 
; N 2460 1418 M 2466 1418 I : 0.973 0.973 +S K 
; N 2483 1418 M 2489 1418 I : 0.973 0.973 +S K 
; N 2507 1418 M 2513 1418 I : 0.973 0.973 +S K 
; N 2530 1418 M 2536 1418 I : 0.973 0.973 +S K 
; N 2553 1418 M 2559 1418 I : 0.973 0.973 +S K 
; N 2577 1418 M 2583 1418 I : 0.973 0.973 +S K 
; N 2600 1418 M 2606 1418 I : 0.973 0.973 +S K 
; N 2624 1418 M 2630 1418 I : 0.973 0.973 +S K 
; N 2647 1418 M 2653 1418 I : 0.973 0.973 +S K 
; N 2670 1418 M 2676 1418 I : 0.973 0.973 +S K 
; N 2694 1418 M 2700 1418 I : 0.973 0.973 +S K 
; N 2717 1418 M 2723 1418 I : 0.973 0.973 +S K 
; N 2741 1418 M 2747 1418 I : 0.973 0.973 +S K 
; N 2764 1418 M 2770 1418 I : 0.973 0.973 +S K 
; N 2787 1418 M 2793 1418 I : 0.973 0.973 +S K 
; N 2811 1418 M 2817 1418 I : 0.973 0.973 +S K 
; N 2834 1418 M 2840 1418 I : 0.973 0.973 +S K 
; N 2858 1418 M 2864 1418 I : 0.973 0.973 +S K 
; N 2881 1418 M 2887 1418 I : 0.973 0.973 +S K 
; N 2904 1418 M 2910 1418 I : 0.973 0.973 +S K 
; N 2928 1418 M 2934 1418 I : 0.973 0.973 +S K 
; N 2934 1418 M 2934 1424 I : 0.973 0.973 +S K 
; N 2934 1442 M 2934 1447 I : 0.973 0.973 +S K 
; N 2934 1465 M 2934 1471 I : 0.973 0.973 +S K 
; N 2934 1488 M 2934 1494 I : 0.973 0.973 +S K 
; N 2934 1512 M 2934 1518 I : 0.973 0.973 +S K 
; N 2934 1535 M 2934 1541 I : 0.973 0.973 +S K 
; N 2934 1559 M 2934 1564 I : 0.973 0.973 +S K 
; N 2934 1582 M 2934 1588 I : 0.973 0.973 +S K 
; N 2934 1605 M 2934 1611 I : 0.973 0.973 +S K 
; N 2934 1629 M 2934 1635 I : 0.973 0.973 +S K 
; N 2934 1652 M 2934 1658 I : 0.973 0.973 +S K 
; N 2934 1676 M 2934 1681 I : 0.973 0.973 +S K 
; N 2934 1699 M 2934 1705 I : 0.973 0.973 +S K 
; N 2934 1722 M 2934 1728 I : 0.973 0.973 +S K 
; N 2934 1746 M 2934 1752 I : 0.973 0.973 +S K 
; N 2934 1769 M 2934 1775 I : 0.973 0.973 +S K 
; N 2934 1793 M 2934 1798 I : 0.973 0.973 +S K 
; N 2934 1816 M 2934 1822 I : 0.973 0.973 +S K 
; N 2934 1839 M 2934 1845 I : 0.973 0.973 +S K 
; N 2934 1863 M 2934 1869 I : 0.973 0.973 +S K 
; N 2934 1886 M 2934 1892 I : 0.973 0.973 +S K 
; N 2934 1910 M 2934 1915 I : 0.973 0.973 +S K 
; N 2934 1933 M 2934 1939 I : 0.973 0.973 +S K 
; N 2934 1956 M 2934 1962 I : 0.973 0.973 +S K 
; N 2934 1980 M 2934 1986 I : 0.973 0.973 +S K 
; N 2934 2003 M 2934 2009 I : 0.973 0.973 +S K 
; N 2934 2027 M 2934 2032 I : 0.973 0.973 +S K 
; N 2934 2050 M 2934 2056 I : 0.973 0.973 +S K 
; N 2934 2073 M 2934 2079 I : 0.973 0.973 +S K 
; N 2934 2097 M 2934 2103 I : 0.973 0.973 +S K 
; N 2934 2120 M 2934 2126 I : 0.973 0.973 +S K 
; N 2934 2144 M 2934 2149 I : 0.973 0.973 +S K 
; N 2934 2167 M 2934 2173 I : 0.973 0.973 +S K 
; N 2934 2190 M 2934 2196 I : 0.973 0.973 +S K 
; N 2934 2214 M 2934 2220 I : 0.973 0.973 +S K 
; N 2934 2237 M 2934 2243 I : 0.973 0.973 +S K 
; N 2934 2261 M 2934 2266 I : 0.973 0.973 +S K 
; N 2934 2284 M 2934 2290 I : 0.973 0.973 +S K 
; N 2934 2307 M 2934 2313 I : 0.973 0.973 +S K 
; N 2934 2331 M 2934 2337 I : 0.973 0.973 +S K 
; N 1688 2337 M 1694 2337 I : 0.973 0.973 +S K 
; N 1711 2337 M 1717 2337 I : 0.973 0.973 +S K 
; N 1734 2337 M 1740 2337 I : 0.973 0.973 +S K 
; N 1758 2337 M 1764 2337 I : 0.973 0.973 +S K 
; N 1781 2337 M 1787 2337 I : 0.973 0.973 +S K 
; N 1805 2337 M 1811 2337 I : 0.973 0.973 +S K 
; N 1828 2337 M 1834 2337 I : 0.973 0.973 +S K 
; N 1851 2337 M 1857 2337 I : 0.973 0.973 +S K 
; N 1875 2337 M 1881 2337 I : 0.973 0.973 +S K 
; N 1898 2337 M 1904 2337 I : 0.973 0.973 +S K 
; N 1922 2337 M 1928 2337 I : 0.973 0.973 +S K 
; N 1945 2337 M 1951 2337 I : 0.973 0.973 +S K 
; N 1968 2337 M 1974 2337 I : 0.973 0.973 +S K 
; N 1992 2337 M 1998 2337 I : 0.973 0.973 +S K 
; N 2015 2337 M 2021 2337 I : 0.973 0.973 +S K 
; N 2039 2337 M 2045 2337 I : 0.973 0.973 +S K 
; N 2062 2337 M 2068 2337 I : 0.973 0.973 +S K 
; N 2085 2337 M 2091 2337 I : 0.973 0.973 +S K 
; N 2109 2337 M 2115 2337 I : 0.973 0.973 +S K 
; N 2132 2337 M 2138 2337 I : 0.973 0.973 +S K 
; N 2156 2337 M 2162 2337 I : 0.973 0.973 +S K 
; N 2179 2337 M 2185 2337 I : 0.973 0.973 +S K 
; N 2202 2337 M 2208 2337 I : 0.973 0.973 +S K 
; N 2226 2337 M 2232 2337 I : 0.973 0.973 +S K 
; N 2249 2337 M 2255 2337 I : 0.973 0.973 +S K 
; N 2273 2337 M 2279 2337 I : 0.973 0.973 +S K 
; N 2296 2337 M 2302 2337 I : 0.973 0.973 +S K 
; N 2319 2337 M 2325 2337 I : 0.973 0.973 +S K 
; N 2343 2337 M 2349 2337 I : 0.973 0.973 +S K 
; N 2366 2337 M 2372 2337 I : 0.973 0.973 +S K 
; N 2390 2337 M 2396 2337 I : 0.973 0.973 +S K 
; N 2413 2337 M 2419 2337 I : 0.973 0.973 +S K 
; N 2436 2337 M 2442 2337 I : 0.973 0.973 +S K 
; N 2460 2337 M 2466 2337 I : 0.973 0.973 +S K 
; N 2483 2337 M 2489 2337 I : 0.973 0.973 +S K 
; N 2507 2337 M 2513 2337 I : 0.973 0.973 +S K 
; N 2530 2337 M 2536 2337 I : 0.973 0.973 +S K 
; N 2553 2337 M 2559 2337 I : 0.973 0.973 +S K 
; N 2577 2337 M 2583 2337 I : 0.973 0.973 +S K 
; N 2600 2337 M 2606 2337 I : 0.973 0.973 +S K 
; N 2624 2337 M 2630 2337 I : 0.973 0.973 +S K 
; N 2647 2337 M 2653 2337 I : 0.973 0.973 +S K 
; N 2670 2337 M 2676 2337 I : 0.973 0.973 +S K 
; N 2694 2337 M 2700 2337 I : 0.973 0.973 +S K 
; N 2717 2337 M 2723 2337 I : 0.973 0.973 +S K 
; N 2741 2337 M 2747 2337 I : 0.973 0.973 +S K 
; N 2764 2337 M 2770 2337 I : 0.973 0.973 +S K 
; N 2787 2337 M 2793 2337 I : 0.973 0.973 +S K 
; N 2811 2337 M 2817 2337 I : 0.973 0.973 +S K 
; N 2834 2337 M 2840 2337 I : 0.973 0.973 +S K 
; N 2858 2337 M 2864 2337 I : 0.973 0.973 +S K 
; N 2881 2337 M 2887 2337 I : 0.973 0.973 +S K 
; N 2904 2337 M 2910 2337 I : 0.973 0.973 +S K 
; N 2928 2337 M 2934 2337 I : 0.973 0.973 +S K 
; N 1688 1418 M 1688 1424 I : 0.973 0.973 +S K 
; N 1688 1442 M 1688 1447 I : 0.973 0.973 +S K 
; N 1688 1465 M 1688 1471 I : 0.973 0.973 +S K 
; N 1688 1488 M 1688 1494 I : 0.973 0.973 +S K 
; N 1688 1512 M 1688 1518 I : 0.973 0.973 +S K 
; N 1688 1535 M 1688 1541 I : 0.973 0.973 +S K 
; N 1688 1559 M 1688 1564 I : 0.973 0.973 +S K 
; N 1688 1582 M 1688 1588 I : 0.973 0.973 +S K 
; N 1688 1605 M 1688 1611 I : 0.973 0.973 +S K 
; N 1688 1629 M 1688 1635 I : 0.973 0.973 +S K 
; N 1688 1652 M 1688 1658 I : 0.973 0.973 +S K 
; N 1688 1676 M 1688 1681 I : 0.973 0.973 +S K 
; N 1688 1699 M 1688 1705 I : 0.973 0.973 +S K 
; N 1688 1722 M 1688 1728 I : 0.973 0.973 +S K 
; N 1688 1746 M 1688 1752 I : 0.973 0.973 +S K 
; N 1688 1769 M 1688 1775 I : 0.973 0.973 +S K 
; N 1688 1793 M 1688 1798 I : 0.973 0.973 +S K 
; N 1688 1816 M 1688 1822 I : 0.973 0.973 +S K 
; N 1688 1839 M 1688 1845 I : 0.973 0.973 +S K 
; N 1688 1863 M 1688 1869 I : 0.973 0.973 +S K 
; N 1688 1886 M 1688 1892 I : 0.973 0.973 +S K 
; N 1688 1910 M 1688 1915 I : 0.973 0.973 +S K 
; N 1688 1933 M 1688 1939 I : 0.973 0.973 +S K 
; N 1688 1956 M 1688 1962 I : 0.973 0.973 +S K 
; N 1688 1980 M 1688 1986 I : 0.973 0.973 +S K 
; N 1688 2003 M 1688 2009 I : 0.973 0.973 +S K 
; N 1688 2027 M 1688 2032 I : 0.973 0.973 +S K 
; N 1688 2050 M 1688 2056 I : 0.973 0.973 +S K 
; N 1688 2073 M 1688 2079 I : 0.973 0.973 +S K 
; N 1688 2097 M 1688 2103 I : 0.973 0.973 +S K 
; N 1688 2120 M 1688 2126 I : 0.973 0.973 +S K 
; N 1688 2144 M 1688 2149 I : 0.973 0.973 +S K 
; N 1688 2167 M 1688 2173 I : 0.973 0.973 +S K 
; N 1688 2190 M 1688 2196 I : 0.973 0.973 +S K 
; N 1688 2214 M 1688 2220 I : 0.973 0.973 +S K 
; N 1688 2237 M 1688 2243 I : 0.973 0.973 +S K 
; N 1688 2261 M 1688 2266 I : 0.973 0.973 +S K 
; N 1688 2284 M 1688 2290 I : 0.973 0.973 +S K 
; N 1688 2307 M 1688 2313 I : 0.973 0.973 +S K 
; N 1688 2331 M 1688 2337 I : 0.973 0.973 +S K 
; 0 Lj N 1160 1467 M 472 1467 I 472 2293 I 1160 2293 I C 
: 0.84 0 scol  O ; : 0.973 0.973 +S K 
; 0.105 0 scol F0S71 Ji 
509 1851 M (E)S 
581 1851 M (n)S 
642 1851 M (v)S 
695 1851 M (i)S 
725 1851 M (r)S 
773 1851 M (o)S 
827 1851 M (n)S 
887 1851 M (m)S 
978 1851 M (e)S 
1025 1851 M (n)S 
1085 1851 M (t)S 
0 0 scol F2S75 Ji 
707 2060 M (E)S 
778 2060 M (n)S  837 2060 M (v)S  
: N 1310 1934 205 98 rp C 
1 0 scol  L ; 0.105 0 scol F0S50 Ji 
1310 2015 M (f)S 
1340 2015 M (i)S 
1364 2015 M (n)S 
1412 2015 M (i)S 
1436 2015 M (s)S 
1470 2015 M (h)S 
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 12 12 580 829
%%DocumentNeededResources: 
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L1 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L1 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
VMsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF


%%EndDocument
 @endspecial 797 847 a
 currentpoint currentpoint translate 1 0.27448 div 1 0.2949 div scale
neg exch neg exch translate
 797 847 a 3491 847 a
 currentpoint grestore moveto
 3491 847
a 2582 4145 a Fl(20)p eop
%%Page: 21 22
21 21 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 711 135 4325 7 v 711 422 7 287 v 770 330
a Fk(System)77 b(Sp)6 b(eci\014cation)79 b(&)e(P)-6 b(artitioning)77
b(Rule)p 5029 422 V 711 429 4325 7 v 5032 497 73 301
v 780 497 4325 73 v 286 912 a Fl(System:)p Red 716 1252
a(\011)850 1181 y Ff(s)850 1295 y(f)939 1252 y Fl(\()p
Fg(S)10 b Fl(\))105 b(=)1428 1278 y Ff(d)-22 b(f)1672
1252 y Fi(always)43 b Fl(\(@)p Fg(\021)2489 1278 y Ff(s)2592
1252 y Fg(S)10 b Fl(;)29 b Fh(!)19 b Fg(\021)3061 1278
y Ff(f)3150 1252 y Fl(\))p Blue 286 1592 a(En)-5 b(vironmen)g(t:)p
Red 716 1932 a Fg(E)10 b(nv)113 b Fl(=)1286 1958 y Ff(d)-22
b(f)1529 1932 y Fi(always)44 b Fl(\()p Fh(!)19 b Fg(\021)2404
1958 y Ff(s)2478 1932 y Fl(;)29 b(@)p Fg(\021)2774 1958
y Ff(f)2863 1932 y Fl(\))p Blue 286 2273 a(P)-5 b(artitioning)60
b(rule:)p Red 1235 2564 a Fg(S)10 b(pl)s(it)1613 2590
y Ff(V)1732 2564 y Fl(\()p Fg(S;)86 b(C)s(;)g(D)5 b Fl(\))p
737 2641 2274 7 v 737 2799 a Fg(P)24 b(ar)5 b(t)p Fl(\(\011)1309
2739 y Ff(s)1309 2851 y(f)1397 2799 y Fl(\()p Fg(S)10
b Fl(\))p Fg(;)86 b Fl(\011)1915 2739 y Ff(s)1915 2851
y(f)2004 2799 y Fl(\()p Fg(C)12 b Fl(\))p Fg(;)86 b Fl(\011)2541
2749 y Ff(r)2541 2841 y(a)2624 2799 y Fl(\()p Fg(M)19
b Fl(\)\))p Blue 422 3230 a(where)143 b Fg(P)24 b(ar)5
b(t)p Fl(\()p Fg(S;)85 b(C)s(;)h(D)5 b Fl(\))105 b(=)2397
3256 y Ff(d)-22 b(f)2640 3230 y Fl(\(\()p Fg(S)58 b Fh(k)48
b Fg(E)10 b(nv)c Fl(\))48 b Fh(v)g Fl(\()p Fg(C)60 b
Fh(k)48 b Fg(D)k Fh(k)c Fg(E)10 b(nv)c Fl(\)\))1006 3523
y(\011)1140 3460 y Ff(v)1140 3565 y(u)1230 3523 y Fl(\()p
Fg(P)24 b Fl(\))105 b(=)1738 3548 y Ff(d)-22 b(f)1982
3523 y Fi(always)43 b Fl(\(@)p Fg(\021)2799 3548 y Ff(v)2910
3523 y Fg(P)24 b Fl(;)29 b Fh(!)19 b Fg(\021)3398 3548
y Ff(u)3488 3523 y Fl(\))2582 4145 y(21)p eop
%%Page: 22 23
22 22 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 2259 259 1229 7 v 2259 506 7 247 v 2317
454 a Fk(Conclusion)p 3481 506 V 2259 513 1229 7 v 3484
582 73 261 v 2328 582 1229 73 v 286 996 a Fl(In)57 b(this)h(pap)5
b(er,)p Red 362 1452 a Fj(-)p Blue 87 w Fl(w)-5 b(e)51
b(apply)f(V)-14 b(erilog)53 b(algebra)e(to)g(hardw)-5
b(are/sofw)g(are)51 b(decomp)5 b(osition;)53 b(and)p
Red 362 1833 a Fj(-)p Blue 87 w Fl(design)k(and)g(pro)-5
b(v)g(e)57 b(a)h(complete)f(set)f(of)h(comp)5 b(ositional)60
b(rules)e(for)f(b)5 b(oth)596 2077 y(the)56 b(k)-5 b(ernel)58
b(part)f(and)g(the)g(whole)h(sp)5 b(eci\014cation.)p
Red 362 2458 a Fj(-)p Blue 87 w Fl(Based)56 b(on)h(our)h(partitioning)i
(pro)5 b(cess,)56 b(w)-5 b(e)57 b(can)g(straigh)-5 b(tforw)g(ardly)596
2702 y(dev)g(elop)57 b(an)g(automatic)h(partition)h(to)5
b(ol)58 b(for)f(co-design;)g(moreo)-5 b(v)g(er,)p Red
362 3084 a Fj(-)p Blue 87 w Fl(our)57 b(results)h(\(h)-5
b(w/sw)58 b(sp)5 b(eci\014cations\))56 b(are)i(still)i(in)d(an)h
(abstract)f(lev)-5 b(el,)596 3328 y(whic)g(h)57 b(facilitates)i(us)e
(to)g(pursue)g(further)f(transformation/re\014nemen)-5
b(t.)2582 4145 y(22)p eop
%%Page: 23 24
23 23 bop Blue Red 4722 -343 a Fr(ICFEM2002)p Blue -240
-274 5816 7 v 2161 333 1426 7 v 2161 579 7 247 v 2219
528 a Fk(F)-19 b(uture)78 b(W)-19 b(ork)p 3579 579 V
2161 586 1426 7 v 3583 655 73 261 v 2229 655 1426 73
v 286 1069 a Fl(As)57 b(part)h(of)f(future)f(w)-5 b(ork,)58
b(w)-5 b(e)58 b(shall)p PineGreen 373 1525 a Fj(\()p
Blue 87 w Fl(in)-5 b(v)g(estigate)58 b(further)p Red
57 w Fi(optimization)p Blue 57 w Fl(and)p Red 57 w Fi(r)-9
b(e)g(c)g(on\014gur)g(ation)p Blue 58 w Fl(on)57 b(the)596
1769 y(hardw)-5 b(are)58 b(sp)5 b(eci\014cation)56 b(generated)g(b)-5
b(y)57 b(our)h(partitioning)h(algorithm,)596 2013 y(and)e(connect)e(it)
j(with)g(the)f(w)-5 b(ork)58 b(on)f(formal)i(syn)-5 b(thesis)57
b(in)h(V)-14 b(erilog)596 2257 y(\()p OliveGreen(Iy)-5
b(o)5 b(daHe01)p Blue(\);)57 b(and)p PineGreen 373 2638
a Fj(\()p Blue 87 w Fl(in)-5 b(v)g(olv)g(e)59 b(more)p
Red 57 w Fi(pr)-9 b(o)g(gr)g(am)62 b(analysis)g(te)-9
b(chniques)p Blue 59 w Fl(in)k(to)58 b(the)e(partition)j(and)596
2882 y(co-syn)-5 b(thesis)57 b(pro)5 b(cess)56 b(for)h(p)5
b(erformance)57 b(estimation;)h(and)p PineGreen 373 3264
a Fj(\()p Blue 87 w Fl(apply)f(our)h(approac)-5 b(h)57
b(to)p Red 57 w Fi(industrial)62 b(c)-9 b(ase)62 b(studies)p
Blue Fl(.)2582 4145 y(23)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
